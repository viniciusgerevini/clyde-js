{"version":3,"sources":["redux/interface.js","redux/editor.js","redux/interpreter.js","redux/reducers.js","screens/SplitPane.js","screens/DropdownMenu.js","editor/clyde-ace-mode.js","editor/Editor.js","../../parser/src/lexer.js","../../parser/src/nodes.js","../../parser/src/parser.js","interpreter/Bubbles.js","interpreter/InterpreterToolbar.js","interpreter/DialogueEntry.js","interpreter/InterpreterTimeline.js","interpreter/DebugPane.js","interpreter/Interpreter.js","screens/Modal.js","editor/EditorSettingsModal.js","screens/MainPanels.js","screens/MainPanelsContainer.js","storage/local-storage.js","App.js","WebsiteApp.js","index.js"],"names":["toggleEditor","createAction","toggleInterpreter","changeInterpreterSplitDirection","interfaceReducers","createReducer","isEditorEnabled","isInterpreterEnabled","interpreterSplitDirection","state","action","payload","direction","setDocumentContent","updatePreference","editorReducers","currentValue","preferences","theme","fontSize","tabSize","highlightActiveLine","lineWrap","useSoftTabs","showInvisibles","scrollPastEnd","vimMode","name","value","setBlock","addDialogueLine","clearTimeline","showExtraMetadata","hideExtraMetadata","showDebugPane","hideDebugPane","enableSingleBubbleDialogue","disableSingleBubbleDialogue","chooseOption","notifyEvent","clearEvents","interpreterReducers","currentBlock","undefined","timeline","shouldShowExtraMetadata","shouldShowDebugPane","singleBubblePresentation","document","events","_action","length","type","selected","combineReducers","interfaceConfig","editor","interpreter","Wrapper","styled","div","props","Gutter","SplitPane","defaultSizes","style","children","Array","isArray","visibleChildren","filter","item","sizes","map","s","spaceUsed","reduce","acc","index","indexOf","lastIndex","size","Math","floor","fill","calculateSizes","panes","visibleIndex","push","React","cloneElement","key","flexBasis","flexGrow","ItemWrapper","DropDownMenu","onClick","Children","toArray","DropDownItem","label","icon","text","aria-label","ClydeHighlightRules","literals","token","regex","logicalOperators","logicBlockEnd","next","logicBlockConstants","identifiers","this","$rules","logicBlock","assignmentBlock","eventBlock","normalizeRules","EditorWrapper","defaultConfig","Editor","defaultValue","notifyChange","useResizeObserver","ref","width","height","mode","onBeforeLoad","ace","define","acequire","exports","oop","TextHighlightRules","inherits","TextMode","Mode","HighlightRules","ClydeMode","$id","lineCommentStart","getNextLineIndent","line","tab","indent","$getIndent","tokens","getTokenizer","getLineTokens","match","onChange","editorProps","$blockScrolling","debounceChangePeriod","keyboardHandler","setOptions","showPrintMargin","wrapBehavioursEnabled","wrap","navigateWithinSoftTabs","TOKENS","MODES","tokenFriendlyHint","getTokenFriendlyHint","hint","tokenize","input","position","column","pendingTokens","modes","stackMode","unshift","popMode","shift","isCurrentMode","checkSequence","string","initialPosition","slice","handleQText","initialLine","initialColumn","currentChar","Token","join","trim","optionTypes","keywords","handleLogicDescriptiveOperator","toLowerCase","handleLogicOperator","createSimpleToken","handleLogicBlock","handleLogicString","linebreak","getFollowingLineBreak","handleLogicBlockStop","handleLogicNot","values","handleLogicNumber","includes","handleLogicIdentifier","lookupPosition","lookupColumn","getLeadingLineBreak","getNextToken","handleComments","handleLineBreaks","indentation","previousIndent","handleIndent","handleLogicBlockStart","response","handleSpace","handleStartVariations","handleStopVariations","handleBlock","handleDivert","handleDivertToParent","handleVariationItem","handleOption","handleBrackets","handleLineId","handleTag","handleText","getAll","concat","DocumentNode","content","blocks","ContentNode","LineNode","speaker","id","tags","DivertNode","target","VariableNode","LiteralNode","ConditionalContentNode","conditions","ActionContentNode","ExpressionNode","elements","AssignmentNode","variable","operation","EventNode","variationsModes","operators","precedence","associative","assignmentOperators","parse","doc","currentToken","lookaheadTokens","isMultilineEnabled","wrongTokenError","expected","Error","consume","lookahead","peek","offset","Blocks","blockName","Lines","lines","acceptableNext","tk","Line","LineWithAction","Options","Divert","Variations","ConditionalLine","DialogueLine","LineWithSpeaker","TextLine","LineWithMetadata","options","nextLine","LineWithId","LineWithTags","Option","optionType","mainItem","root","wrapper","useFirstLineAsDisplayOnly","block","NestedLogicBlocks","node","LogicBlock","divert","variations","VariationsNode","startsNextLine","lastVariation","expression","LogicElement","Assignments","Events","Condition","assignments","condition","AssignmentExpression","AssignmentsNode","EventsNode","Expression","Object","keys","minPrecedence","operatorTokens","lhs","Operand","operator","nextMinPrecedence","rhs","Operator","Number","StringLiteralNode","BooleanLiteralNode","labels","result","Document","InfoBubble","ErrorBubble","InterpreterToolbarWrapper","IconWrapper","span","InterpreterToolbar","properties","dialogue","useState","isMenuVisible","setMenuVisibility","toggleMenu","forwardToNextOption","getContent","BlockList","onBlockSelected","start","faRedoAlt","title","faFastForward","faGhost","poltergeist","optionList","choice","random","choose","faHandSparkles","clearData","faComments","faComment","faCog","faReceipt","faBug","list","b","event","option","DialogueBubble","DialogueContent","DialogueSpeaker","DialogueOptionsList","ol","DialogueOption","li","p","optionSelected","DialogueMetadataWrapper","DialogueEntry","onSelection","showMetadata","DialogueOptions","DialogueMetadata","isVisible","e","stopPropagation","select","InterpreterScreenWrapper","InterpreterTimeline","scrollableRef","useRef","useEffect","current","scrollIntoView","behavior","DebugPaneWrapper","DebugPaneCloseButton","DebugEntryTable","table","DebugPane","entries","identifier","data","record","eventTime","formatDate","timestamp","date","Date","getFullYear","getMonth","getDate","toLocaleTimeString","faTimes","entry","toString","Interpreter","errorMessage","debugPaneDirection","clydeDocument","lastContent","setLastContent","persistedDialogue","setDialogue","updateDebugInfo","now","ClydeInterpreter","on","VARIABLE_CHANGED","EVENT_TRIGGERED","message","backgroundColor","ModalWrapper","ModalInnerWrapper","ModalHeader","ModalFooter","ModalContent","ModalAction","button","Modal","actions","Preference","EditorSettingsModal","onCloseClick","update","checked","updateNumber","htmlFor","max","min","Header","connect","editorDefaultValue","editorPreferences","dispatch","optionIndex","updateEditorPreference","isEditorSettingsVisible","setEditorSettingsVisibility","faColumns","faCode","faEye","faSlidersH","APP_LOCAL_STORAGE_KEY","store","configureStore","reducer","devTools","process","preloadedState","persistedSate","localStorage","getItem","JSON","_e","loadState","load","subscribe","throttle","getState","setItem","stringify","saveState","App","MainPanelsContainer","Title","h1","AboutBlock","AboutContent","WebsiteApp","href","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a222ac55.chunk.js","sourcesContent":["import { createAction, createReducer } from \"@reduxjs/toolkit\";\n\nexport const toggleEditor = createAction('editor/interface/toggle_editor');\nexport const toggleInterpreter = createAction('editor/interface/toggle_intepreter');\nexport const changeInterpreterSplitDirection = createAction('editor/interface/change_interpreter_split_direction');\n\nexport function createEmptyState() {\n  return {\n    isEditorEnabled: true,\n    isInterpreterEnabled: true,\n    interpreterSplitDirection: 'vertical'\n  };\n}\n\nconst toggleEditorReducer = (state, action) => {\n  state.isEditorEnabled = action.payload.state;\n  return state;\n};\n\nconst toggleInterpreterReducer = (state, action) => {\n  state.isInterpreterEnabled = action.payload.state;\n  return state;\n};\n\nconst changeInterpreterSplitDirectionReducer = (state, action) => {\n  state.interpreterSplitDirection = action.payload.direction;\n  return state;\n};\n\nconst interfaceReducers = createReducer(createEmptyState(), {\n  [toggleEditor]: toggleEditorReducer,\n  [toggleInterpreter]: toggleInterpreterReducer,\n  [changeInterpreterSplitDirection]: changeInterpreterSplitDirectionReducer,\n});\n\nexport default interfaceReducers;\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\n\nexport const setDocumentContent = createAction('editor/editor/set_document_content');\nexport const updatePreference = createAction('editor/editor/update_preference');\n\nexport function createEmptyState() {\n  return {\n    currentValue: '',\n    preferences: {\n      theme: 'dracula',\n      fontSize: 16,\n      tabSize: 4,\n      highlightActiveLine: false,\n      lineWrap: false,\n      useSoftTabs: true,\n      showInvisibles: false,\n      scrollPastEnd: false,\n      vimMode: false,\n    }\n  };\n}\n\nconst setDocumentContentReducer = (state, action) => {\n  state.currentValue = action.payload;\n  return state;\n};\n\nconst updatePreferenceReducer = (state, action) => {\n  state.preferences[action.payload.name] = action.payload.value;\n  return state;\n};\n\nconst editorReducers = createReducer(createEmptyState(), {\n  [setDocumentContent]: setDocumentContentReducer,\n  [updatePreference]: updatePreferenceReducer,\n});\n\nexport default editorReducers;\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\n\nexport const setBlock = createAction('editor/interpreter/set_dialogue_block');\nexport const addDialogueLine = createAction('editor/interpreter/add_dialogue_line');\nexport const clearTimeline = createAction('editor/interpreter/clear_timeline');\nexport const showExtraMetadata = createAction('editor/interpreter/show_metadata');\nexport const hideExtraMetadata = createAction('editor/interpreter/hide_metadata');\nexport const showDebugPane = createAction('editor/interpreter/show_debug_pane');\nexport const hideDebugPane = createAction('editor/interpreter/hide_debug_pane');\nexport const enableSingleBubbleDialogue = createAction('editor/interpreter/enable_single_bubble_dialogue');\nexport const disableSingleBubbleDialogue = createAction('editor/interpreter/disable_single_bubble_dialogue');\nexport const chooseOption = createAction('editor/interpreter/choose_option');\nexport const notifyEvent = createAction('editor/interpreter/notify_event');\nexport const clearEvents = createAction('editor/interpreter/clear_events');\n\n\nexport function createEmptyState() {\n  return {\n    currentBlock: undefined,\n    timeline: [],\n    shouldShowExtraMetadata: false,\n    shouldShowDebugPane: false,\n    singleBubblePresentation: false,\n    document: undefined,\n    events: []\n  };\n}\n\nconst setBlockReducer = (state, action) => {\n  state.currentBlock = action.payload;\n  return state;\n};\n\nconst addDialogueLineReducer = (state, action) => {\n  state.timeline = [...state.timeline, action.payload];\n  return state;\n};\n\nconst clearTimelineReducer = (state, _action) => {\n  state.timeline = [];\n  return state;\n};\n\nconst showExtraMetadataReducer = (state) => {\n  state.shouldShowExtraMetadata = true;\n  return state;\n};\n\nconst hideExtraMetadataReducer = (state) => {\n  state.shouldShowExtraMetadata = false;\n  return state;\n};\n\nconst showDebugPaneReducer = (state) => {\n  state.shouldShowDebugPane = true;\n  return state;\n};\n\nconst hideDebugPaneReducer = (state) => {\n  state.shouldShowDebugPane = false;\n  return state;\n};\n\nconst enableSingleBubbleDialogueReducer = (state) => {\n  state.singleBubblePresentation = true;\n  return state;\n};\n\nconst disableSingleBubbleDialogReducer = (state) => {\n  state.singleBubblePresentation = false;\n  return state;\n};\n\nconst chooseOptionReducer = (state, action) => {\n  if (!state.timeline.length || state.timeline[state.timeline.length -1].type !== 'options') {\n    return state;\n  }\n  state.timeline[state.timeline.length -1].selected = action.payload;\n  return state;\n};\n\nconst notifyEventReducer = (state, action) => {\n  state.events = [...state.events, action.payload];\n  return state;\n};\n\nconst clearEventsReducer = (state, _action) => {\n  state.events = [];\n  return state;\n};\n\nconst interpreterReducers = createReducer(createEmptyState(), {\n  [setBlock]: setBlockReducer,\n  [addDialogueLine]: addDialogueLineReducer,\n  [clearTimeline]: clearTimelineReducer,\n  [showExtraMetadata]: showExtraMetadataReducer,\n  [hideExtraMetadata]: hideExtraMetadataReducer,\n  [showDebugPane]: showDebugPaneReducer,\n  [hideDebugPane]: hideDebugPaneReducer,\n  [enableSingleBubbleDialogue]: enableSingleBubbleDialogueReducer,\n  [disableSingleBubbleDialogue]: disableSingleBubbleDialogReducer,\n  [chooseOption]: chooseOptionReducer,\n  [notifyEvent]: notifyEventReducer,\n  [clearEvents]: clearEventsReducer,\n});\n\nexport default interpreterReducers;\n","import { combineReducers } from 'redux';\nimport interfaceConfig from './interface';\nimport editor from './editor';\nimport interpreter from './interpreter';\n\nexport default combineReducers({\n  interfaceConfig,\n  editor,\n  interpreter\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst GUTTER_SIZE = 4;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: stretch;\n  flex-grow: 1;\n  height: auto;\n  flex-direction: ${props => props.direction === 'horizontal' ? 'column' : 'row' };\n  max-height: 100%;\n`;\n\nconst Gutter = styled.div`\n  background-color: #eee;\n  background-repeat: no-repeat;\n  background-position: 50%;\n  flex-basis: ${GUTTER_SIZE}px;\n  cursor: ${props => props.direction === 'horizontal' ? 'row-resize' : 'col-resize' };\n`;\n// TODO\n// - gutter drag resize\n// - make sure sizes are kept when items disappear\n\nexport default function SplitPane(props) {\n  const {\n    direction = 'vertical',\n    defaultSizes,\n    style\n  } = props;\n\n  const children = Array.isArray(props.children) ? props.children : [props.children];\n\n  const visibleChildren = children.filter(item => item && item !== '');\n\n  const calculateSizes = () => {\n    if (visibleChildren.length === 1) {\n      return ['100%'];\n    }\n\n    if (defaultSizes) {\n      let sizes = defaultSizes.map(s => `calc(${s}% - 2px)`);\n      if (defaultSizes.length === visibleChildren.length) {\n        return sizes;\n      }\n\n      const spaceUsed = visibleChildren.reduce((acc, item) => {\n        const index = children.indexOf(item);\n        return acc + defaultSizes[index];\n      }, 0);\n\n      if (spaceUsed < 100) {\n        const lastIndex = children.indexOf(visibleChildren[visibleChildren.length - 1]);\n        sizes[lastIndex] = `calc(${defaultSizes[lastIndex] + (100 - spaceUsed)}% - 2px)`\n      }\n\n      return sizes;\n    }\n\n    const size = Math.floor(100 / visibleChildren.length);\n    return Array(children.length).fill(`calc(${size}% - 2px)`);\n  };\n\n  const sizes = calculateSizes();\n\n  const panes = children.reduce((acc, item, index) => {\n    // console.log(item);\n    if (!item) {\n      return acc;\n    }\n\n    const visibleIndex = visibleChildren.indexOf(item);\n\n    if (visibleIndex > 0 && visibleIndex < (visibleChildren.length)) {\n      acc.push(<Gutter direction={direction}/>);\n    }\n\n    acc.push(React.cloneElement(item, {key: index, style: { flexBasis: sizes[index], flexGrow: 1}}));\n\n    return acc;\n  }, []);\n\n  return (\n    <Wrapper direction={direction} style={style}>\n      {panes.map((item, key) => React.cloneElement(item, {key}))}\n    </Wrapper>\n  );\n};\n\nSplitPane.propTypes = {\n  direction: PropTypes.string,\n  defaultSizes: PropTypes.array\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  display: 'flex';\n  flex-direction: column;\n  width: auto;\n  min-width: 230px;\n  z-index: 9999;\n  background-color: #fff;\n  font-size: 1rem;\n  padding: 10px 0px;\n  border: 1px solid #eee;\n  border-radius: 5px;\n`;\n\nconst ItemWrapper = styled.div`\n  padding: 6px 15px;\n  display: flex;\n  flex-direction: row;\n\n  &:hover {\n    background-color: #eee;\n  }\n\n  > svg {\n    flex-basis: 30px;\n    margin-right: 5px;\n  }\n`;\n\nexport default function DropDownMenu(props) {\n  const {\n    children,\n    onClick,\n    style\n  } = props;\n\n  return (\n    <Wrapper onClick={onClick} style={style}>\n      {React.Children.toArray(children)}\n    </Wrapper>\n  );\n};\n\nexport function DropDownItem(props) {\n  const {\n    label,\n    icon,\n    onClick,\n    text\n  } = props;\n\n  return (\n    <ItemWrapper\n      aria-label={label}\n      onClick={onClick}\n    >\n      <FontAwesomeIcon icon={icon}/> {text}\n    </ItemWrapper>\n  );\n}\n","export default function setupClydeMode(ace) {\n\n  ace.define('ace/mode/clyde_highlight_rules', ['require', 'exports', 'ace/lib/oop', 'ace/mode/text_highlight_rules'], (acequire, exports) => {\n    const oop = acequire('ace/lib/oop');\n    const TextHighlightRules = acequire('ace/mode/text_highlight_rules').TextHighlightRules;\n\n\n    oop.inherits(ClydeHighlightRules, TextHighlightRules);\n\n    exports.ClydeHighlightRules = ClydeHighlightRules;\n  });\n\n  ace.define('ace/mode/clyde', ['require', 'exports', 'ace/lib/oop', 'ace/mode/text', 'ace/mode/clyde_highlight_rules'], (acequire, exports) => {\n    const oop = acequire('ace/lib/oop');\n    const TextMode = acequire('ace/mode/text').Mode;\n    const HighlightRules = acequire('ace/mode/clyde_highlight_rules').ClydeHighlightRules;\n\n    const ClydeMode = function ClydeMode() {\n      this.$id = \"ace/mode/clyde\"\n      this.HighlightRules = HighlightRules;\n      this.lineCommentStart = '--';\n\n      this.getNextLineIndent = function(state, line, tab) {\n        let indent = this.$getIndent(line);\n\n        const { tokens } = this.getTokenizer().getLineTokens(line, state);\n\n        if (tokens.length && tokens[tokens.length-1].type === 'comment') {\n          return indent;\n        }\n\n        if (state === \"start\") {\n          const match = line.match(/^\\s*(\\(|\\*|\\+)/);\n          if (match) {\n            indent += tab;\n          }\n        }\n\n        return indent;\n      };\n    };\n\n    oop.inherits(ClydeMode, TextMode); // ACE's way of doing inheritance\n\n    exports.Mode = ClydeMode;\n  });\n};\n\n\n\nfunction ClydeHighlightRules() {\n  // regexp must not have capturing parentheses. Use (?:) instead.\n  // regexps are ordered -> the first match is used\n  const literals = [\n    { // boolean\n      token : 'constant.language.boolean',\n      regex : /(true|false)/,\n    },\n    { // numbers\n      token : 'constant.numeric',\n      regex : /[0-9,.]+/,\n    },\n    { // string\n      token : 'constant.string',\n      regex : /(\".*\")/,\n    },\n  ];\n\n  const logicalOperators = [\n    { // operators\n      token : 'keyword.operator',\n      regex : /(isnt|ISNT)/,\n    },\n    { // operators\n      token : 'keyword.operator',\n      regex : /(and|or|not|is|AND|OR|NOT|IS)/,\n    },\n    { // operators\n      token : 'keyword.operator',\n      regex : /(&&|\\|\\||<=|>=|==|!=)/,\n    },\n    { // operators\n      token : 'keyword.operator',\n      regex : /(\\*|\\+|-|\\^|\\/|%|<|>|!)/,\n    },\n  ]\n\n  const assignmentOperators = [\n    { // operators\n      token : 'keyword.operator',\n      regex : /(\\+=|-=|\\*=|\\/=|%=|\\^=)/,\n    },\n    { // operators\n      token : 'keyword.operator',\n      regex : /(=)/,\n    },\n  ];\n\n  const logicBlockEnd = [\n    { // assignment block end\n      token : 'keyword',\n      regex : /(\\})/,\n      next: 'start'\n    },\n  ];\n\n  const logicBlockConstants = [\n    {\n      token : 'support.constant',\n      regex : /OPTIONS_COUNT/\n    },\n  ];\n\n  const identifiers = [\n    {\n      token : 'identifier',\n      regex : /[a-zA-Z_][a-zA-Z0-9_]+/\n    },\n  ];\n\n\n  this.$rules = {\n    \"start\" : [\n      {\n        token : 'comment',\n        regex : /^\\s*--.*$/\n      },\n\n      { // Block definition\n        token : [\"keyword\", \"text\", \"variable\"],\n        regex : /^(==)(\\s*)([a-zA-Z0-9_ ]+)$/\n      },\n\n      { // Divert to end\n        token : [\"text\", \"keyword\", \"text\", \"support.constant\"],\n        regex : /(\\s*)(->)(\\s*)(END)$/\n      },\n\n      { // Divert\n        token : [\"text\", \"keyword\", \"text\", \"variable\"],\n        regex : /(\\s*)(->)(\\s*)([a-zA-Z0-9_ ]+)/\n      },\n\n      { // Divert to parent\n        token : [\"text\", \"keyword\", \"text\"],\n        regex : /(\\s*)(<-)(\\s*)/\n      },\n\n      { // Variations start\n        token : [\"text\", \"keyword\", \"text\", \"support.constant\"],\n        regex : /^(\\s*)(\\()(\\s*)((?:shuffle|once|sequence|shuffle once|shuffle sequence)*)$/\n      },\n\n      { // Variations end\n        token : [\"text\", \"keyword\"],\n        regex : /^(\\s*)(\\))$/\n      },\n\n      { // option\n        token : \"keyword.control\",\n        regex : /^(\\s*[*+>])/\n      },\n\n      { // Logic block start\n        token : \"keyword\",\n        regex : /(\\{)/,\n        next: 'logicBlock'\n      },\n\n      { // tag block\n        token : 'constant.string',\n        regex : /#[a-zA-Z0-9_]+/\n      },\n\n      { // Line\n        token : ['variable', 'text', 'variable'],\n        regex: /((?:\\s*[a-zA-Z0-9_] +:)?\\s*)(\".*\")((?:\\$[a-zA-Z0-9_]+)?)/,\n      },\n      { // Line\n        token : ['variable', 'text', 'variable'],\n        regex: /((?:\\s*[a-zA-Z0-9_ ]+:)?\\s*)([^\\r\\n#${]+)((?:\\$[a-zA-Z0-9_]+)?)/,\n      }\n    ],\n    logicBlock: [\n      { // assignment block start\n        token : 'keyword.control',\n        regex : /(set)/,\n        next: 'assignmentBlock'\n      },\n      { // event block start\n        token : 'keyword.control',\n        regex : /(trigger)/,\n        next: 'eventBlock'\n      },\n      { // event block start\n        token : 'keyword.control',\n        regex : /(when)/,\n      },\n      ...logicBlockConstants,\n      ...logicalOperators,\n      ...literals,\n      ...identifiers,\n      ...logicBlockEnd\n    ],\n    assignmentBlock: [\n      ...logicBlockConstants,\n      ...logicalOperators,\n      ...assignmentOperators,\n      ...literals,\n      ...identifiers,\n      ...logicBlockEnd\n    ],\n    eventBlock: [\n      ...identifiers,\n      ...logicBlockEnd\n    ],\n  };\n\n  this.normalizeRules();\n}\n","import React from \"react\";\nimport AceEditor from \"react-ace\";\nimport useResizeObserver from \"use-resize-observer\";\nimport styled from 'styled-components';\n\nimport \"ace-builds/src-noconflict/theme-dracula\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport \"ace-builds/src-noconflict/theme-tomorrow_night_eighties\";\nimport \"ace-builds/src-noconflict/theme-textmate\";\n\nimport \"ace-builds/src-noconflict/keybinding-vim\";\n\nimport ClydeMode from './clyde-ace-mode';\n\nconst EditorWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst defaultConfig = {\n  theme: 'dracula',\n  fontSize: 16,\n  tabSize: 4,\n  highlightActiveLine: false,\n  lineWrap: false,\n  useSoftTabs: true,\n  showInvisibles: false,\n  scrollPastEnd: false\n};\n\nexport default function Editor({ defaultValue, setDocumentContent, notifyChange, preferences = defaultConfig, ...props}) {\n  const { ref, width = 500, height = 500 } = useResizeObserver();\n\n  const onBeforeLoad = (editor) => {\n    ClydeMode(editor);\n  };\n\n  const onChange = (value) => {\n    setDocumentContent(value);\n    if (value !== defaultValue) {\n      notifyChange({ text: '<DIALOGUE_CHANGED>'});\n    }\n  };\n\n  return (\n    <EditorWrapper ref={ref} {...props} aria-label=\"Text editor\">\n      <AceEditor\n        defaultValue={defaultValue}\n        mode=\"clyde\"\n        theme={preferences.theme}\n        onBeforeLoad={onBeforeLoad}\n        onChange={onChange}\n        name=\"mainEditor\"\n        width={`${width}px`}\n        height={`${height}px`}\n        editorProps={{ $blockScrolling: true }}\n        fontSize={preferences.fontSize}\n        tabSize={preferences.tabSize}\n        debounceChangePeriod={1000}\n        keyboardHandler={preferences.vimMode ? 'vim' : undefined}\n        highlightActiveLine={preferences.highlightActiveLine}\n        setOptions={{\n          showPrintMargin: false,\n          wrapBehavioursEnabled: preferences.lineWrap,\n          wrap: preferences.lineWrap,\n          useSoftTabs: preferences.useSoftTabs,\n          showInvisibles: preferences.showInvisibles,\n          scrollPastEnd: preferences.scrollPastEnd,\n          navigateWithinSoftTabs: true,\n        }}\n      />\n    </EditorWrapper>\n  );\n}\n","export const TOKENS = {\n  TEXT: 'TEXT',\n  INDENT: 'INDENT',\n  DEDENT: 'DEDENT',\n  OPTION: 'OPTION',\n  STICKY_OPTION: 'STICKY_OPTION',\n  FALLBACK_OPTION: 'FALLBACK_OPTION',\n  SQR_BRACKET_OPEN: 'SQR_BRACKET_OPEN',\n  SQR_BRACKET_CLOSE: 'SQR_BRACKET_CLOSE',\n  BRACKET_OPEN: 'BRACKET_OPEN',\n  BRACKET_CLOSE: 'BRACKET_CLOSE',\n  EOF: 'EOF',\n  SPEAKER: 'SPEAKER',\n  LINE_ID: 'LINE_ID',\n  TAG: 'TAG',\n  BLOCK: 'BLOCK',\n  DIVERT: 'DIVERT',\n  DIVERT_PARENT: 'DIVERT_PARENT',\n  VARIATIONS_MODE: 'VARIATIONS_MODE',\n  MINUS: '-',\n  PLUS: '+',\n  MULT: '*',\n  DIV: '/',\n  POWER: '^',\n  MOD: '%',\n  BRACE_OPEN: '{',\n  BRACE_CLOSE: '}',\n  AND: 'AND',\n  OR: 'OR',\n  NOT:'NOT',\n  EQUAL: '==, is',\n  NOT_EQUAL: '!=, isnt',\n  GE: '>=',\n  LE: '<=',\n  GREATER: 'GREATER',\n  LESS: 'LESS',\n  NUMBER_LITERAL: 'number',\n  NULL_TOKEN: 'null',\n  BOOLEAN_LITERAL: 'boolean',\n  STRING_LITERAL: 'string',\n  IDENTIFIER: 'identifier',\n  KEYWORD_SET: 'set',\n  KEYWORD_TRIGGER: 'trigger',\n  KEYWORD_WHEN: 'when',\n  ASSIGN: '=',\n  ASSIGN_SUM: '+=',\n  ASSIGN_SUB: '-=',\n  ASSIGN_DIV: '/=',\n  ASSIGN_MULT: '*=',\n  ASSIGN_POW: '^=',\n  ASSIGN_MOD: '%=',\n  COMMA: ',',\n  LINE_BREAK: 'line break',\n}\n\nconst MODES = {\n  DEFAULT: 'DEFAULT',\n  OPTION: 'OPTION',\n  QSTRING: 'QSTRING',\n  LOGIC: 'LOGIC',\n  VARIATIONS: 'VARIATIONS',\n};\n\nconst tokenFriendlyHint = {\n  [TOKENS.TEXT]: 'text',\n  [TOKENS.INDENT]: 'INDENT',\n  [TOKENS.DEDENT]: 'DEDENT',\n  [TOKENS.OPTION]: '*',\n  [TOKENS.STICKY_OPTION]: '+',\n  [TOKENS.FALLBACK_OPTION]: '>',\n  [TOKENS.SQR_BRACKET_OPEN]: '[',\n  [TOKENS.SQR_BRACKET_CLOSE]: ']',\n  [TOKENS.BRACKET_OPEN]: '(',\n  [TOKENS.BRACKET_CLOSE]: ')',\n  [TOKENS.EOF]: 'EOF',\n  [TOKENS.SPEAKER]: '<speaker name>:',\n  [TOKENS.LINE_ID]: '$id',\n  [TOKENS.TAG]: '#tag',\n  [TOKENS.BLOCK]: '== <block name>',\n  [TOKENS.DIVERT]: '-> <target name>',\n  [TOKENS.DIVERT_PARENT]: '<-',\n  [TOKENS.VARIATIONS_MODE]: '<variations mode>',\n  [TOKENS.BRACE_OPEN]: '{',\n  [TOKENS.BRACE_CLOSE]: '}',\n  [TOKENS.AND]: '&&, and',\n  [TOKENS.OR]: '||, or',\n  [TOKENS.NOT]:' not, !',\n  [TOKENS.EQUAL]: '==, is',\n  [TOKENS.NOT_EQUAL]: '!=, isnt',\n  [TOKENS.GE]: '>=',\n  [TOKENS.LE]: '<=',\n  [TOKENS.GREATER]: '>',\n  [TOKENS.LESS]: '<',\n}\n\nexport function getTokenFriendlyHint(token) {\n  const hint = tokenFriendlyHint[token];\n  if (!hint) {\n    return token;\n  }\n  return hint;\n}\n\nexport function tokenize(input) {\n  let indent = [0];\n  let position = 0;\n  let line = 0;\n  let column = 0;\n  let length = input.length;\n  let pendingTokens = [];\n  const modes = [\n    MODES.DEFAULT\n  ];\n\n  const stackMode = (mode) => {\n    modes.unshift(mode);\n  };\n\n  const popMode = () => {\n    if (modes.length > 1) {\n      modes.shift();\n    }\n  };\n\n  const isCurrentMode = (mode) => {\n    return modes[0] === mode;\n  };\n\n  const checkSequence = (string, initialPosition, value) => {\n    const sequence = string.slice(initialPosition, initialPosition + value.length);\n    return sequence === value;\n  };\n\n\n  // handle indentation\n  const handleIndent = () => {\n    let initialLine = line;\n\n    let indentation = 0;\n    while (input[position] && input[position].match(/[\\t ]/)) {\n      indentation += 1;\n      position += 1;\n    }\n    if (indentation > indent[0]) {\n        const previousIndent = indent[0];\n        column += indentation;\n        indent.unshift(indentation);\n        return Token(TOKENS.INDENT, initialLine, previousIndent);\n    }\n\n    if (indentation === indent[0]) {\n      column = indent[0]\n      return;\n    }\n\n    let tokens = [];\n    while (indentation < indent[0]) {\n        indent.shift();\n        column = indent[0];\n        tokens.push(Token(TOKENS.DEDENT, line, column));\n    }\n\n    return tokens;\n  };\n\n  // handle comments\n  const handleComments = () => {\n    while (input[position] && input[position] !== '\\n') {\n      position += 1;\n    }\n    position += 1;\n    line += 1;\n  };\n\n  // handle line breaks\n  const handleLineBreaks = () => {\n    while (input[position] === '\\n') {\n      line += 1;\n      position += 1;\n      column = 0;\n    }\n\n    if (isCurrentMode(MODES.OPTION)) {\n      popMode();\n    }\n  };\n\n  // handle spaces\n  const handleSpace = () => {\n    while (input[position] === ' ') {\n      position += 1;\n      column += 1;\n    }\n  };\n\n  // handle text\n  const handleText = () => {\n    const initialLine = line;\n    const initialColumn = column;\n    let value = [];\n\n    while (position < input.length) {\n      const currentChar = input[position];\n\n      if (['\\n', '$', '#', '{' ].includes(currentChar) || (isCurrentMode(MODES.OPTION) && currentChar === ']')) {\n        break;\n      }\n\n      if (currentChar === '\\\\' && input[position + 1] !== 'n') {\n        value.push(input[position + 1]);\n        position += 2;\n        column += 2;\n        continue;\n      }\n\n      if (currentChar === ':') {\n        position += 1;\n        column += 1;\n        return Token(TOKENS.SPEAKER, initialLine, initialColumn, value.join('').trim());\n      }\n\n      value.push(currentChar);\n\n      position += 1;\n      column += 1;\n    }\n\n\n    return Token(TOKENS.TEXT, initialLine, initialColumn, value.join('').trim());\n  };\n\n  // handle text in quotes\n  const handleQText = () => {\n    const initialLine = line;\n    const initialColumn = column;\n    let value = [];\n\n    while (position < input.length) {\n      const currentChar = input[position];\n\n\n      if (currentChar === '\"') {\n        break;\n      }\n\n      if (currentChar === '\\\\' && input[position + 1] === '\"') {\n        value.push(input[position + 1]);\n        position += 2;\n        column += 2;\n        continue;\n      }\n\n      value.push(currentChar);\n\n      position += 1;\n      column += 1;\n    }\n\n\n    return Token(TOKENS.TEXT, initialLine, initialColumn, value.join('').trim());\n  };\n\n  // handle quote\n  const handleQuote = () => {\n    column += 1;\n    position += 1;\n    if (isCurrentMode(MODES.QSTRING)) {\n      popMode();\n    } else {\n      stackMode(MODES.QSTRING);\n    }\n  };\n\n  const optionTypes = {\n    '*': TOKENS.OPTION,\n    '+': TOKENS.STICKY_OPTION,\n    '>': TOKENS.FALLBACK_OPTION,\n  };\n\n  // handle options\n  const handleOption = () => {\n    const token = optionTypes[input[position]];\n\n    const initialColumn = column;\n    column += 1;\n    position += 1;\n    stackMode(MODES.OPTION);\n    return Token(token, line, initialColumn);\n  };\n\n  // handle brackets\n  const handleBrackets = () => {\n    const token = input[position] === '[' ? TOKENS.SQR_BRACKET_OPEN : TOKENS.SQR_BRACKET_CLOSE;\n    const initialColumn = column;\n    column += 1;\n    position += 1;\n    return Token(token, line, initialColumn);\n  };\n\n  const handleLineId = () => {\n    const initialColumn = column;\n    let values = [];\n    position += 1;\n    column += 1;\n\n    while (input[position] && input[position].match(/[A-Z|a-z|0-9|_]/)) {\n      values.push(input[position]);\n      position += 1;\n      column += 1;\n    }\n    return Token(TOKENS.LINE_ID, line, initialColumn, values.join(''));\n  };\n\n  const handleTag = () => {\n    const initialColumn = column;\n    let values = [];\n    position += 1;\n    column += 1;\n\n    while (input[position] && input[position].match(/[A-Z|a-z|0-9|_]/)) {\n      values.push(input[position]);\n      position += 1;\n      column += 1;\n    }\n    return Token(TOKENS.TAG, line, initialColumn, values.join(''));\n  };\n\n  const handleBlock = () => {\n    const initialColumn = column;\n    let values = [];\n    position += 2;\n    column += 2;\n\n    while (input[position] && input[position].match(/[A-Z|a-z|0-9|_| ]/)) {\n      values.push(input[position]);\n      position += 1;\n      column += 1;\n    }\n    return Token(TOKENS.BLOCK, line, initialColumn, values.join('').trim());\n  };\n\n  const handleDivert = () => {\n    const initialColumn = column;\n    let values = [];\n    position += 2;\n    column += 2;\n\n    while (input[position] && input[position].match(/[A-Z|a-z|0-9|_| ]/)) {\n      values.push(input[position]);\n      position += 1;\n      column += 1;\n    }\n\n    const token = Token(TOKENS.DIVERT, line, initialColumn, values.join('').trim());\n    const linebreak = getFollowingLineBreak();\n    if (linebreak) {\n      return [ token, linebreak ];\n    }\n\n    return token;\n  };\n\n  const handleDivertToParent = () => {\n    const initialColumn = column;\n    position += 2;\n    column += 2;\n\n    const token = Token(TOKENS.DIVERT_PARENT, line, initialColumn);\n    const linebreak = getFollowingLineBreak();\n\n    if (linebreak) {\n      return [ token, linebreak ];\n    }\n\n    return token;\n  };\n\n  const handleStartVariations = () => {\n    const initialColumn = column;\n    const values = [];\n    column += 1;\n    position += 1;\n    stackMode(MODES.VARIATIONS);\n\n    while (input[position] && input[position].match(/[A-Z|a-z| ]/)) {\n      values.push(input[position]);\n      position += 1;\n      column += 1;\n    }\n\n    const tokens = [\n      Token(TOKENS.BRACKET_OPEN, line, initialColumn)\n    ];\n\n    const value = values.join('').trim();\n\n    if (value.length) {\n      tokens.push(Token(TOKENS.VARIATIONS_MODE, line, initialColumn + 2, value));\n    }\n\n    return tokens;\n  };\n\n  const handleStopVariations = () => {\n    const initialColumn = column;\n    column += 1;\n    position += 1;\n    popMode();\n    return Token(TOKENS.BRACKET_CLOSE, line, initialColumn);\n  };\n\n  const handleVariationItem = () => {\n    const initialColumn = column;\n    column += 1;\n    position += 1;\n    return Token(TOKENS.MINUS, line, initialColumn);\n  };\n\n\n  const handleLogicBlockStart = () => {\n    const initialColumn = column;\n    column += 1;\n    position += 1;\n    stackMode(MODES.LOGIC);\n    const token = Token(TOKENS.BRACE_OPEN, line, initialColumn);\n    const linebreak = getLeadingLineBreak();\n    if (linebreak) {\n      return [ linebreak, token ];\n    }\n    return token;\n  };\n\n  const handleLogicBlockStop = () => {\n    const initialColumn = column;\n    column += 1;\n    position += 1;\n    popMode();\n    const token = Token(TOKENS.BRACE_CLOSE, line, initialColumn);\n    const linebreak = getFollowingLineBreak();\n    if (linebreak) {\n      return [ token, linebreak ];\n    }\n    return token;\n  };\n\n  const keywords = [\n    'is', 'isnt', 'or', 'and', 'not', 'true', 'false', 'null',\n    'set', 'trigger', 'when'\n  ];\n\n  const handleLogicIdentifier = () => {\n    const initialColumn = column;\n    let values = '';\n\n    while (input[position] && input[position].match(/[A-Z|a-z|0-9|_]/)) {\n      values += input[position];\n      position += 1;\n      column += 1;\n    }\n\n    if (keywords.includes(values.toLowerCase())) {\n      return handleLogicDescriptiveOperator(values, initialColumn);\n    }\n\n    return Token(TOKENS.IDENTIFIER, line, initialColumn, values.trim());\n  };\n\n  const handleLogicDescriptiveOperator = (value, initialColumn) => {\n    switch(value.toLowerCase()) {\n      case 'not':\n        return Token(TOKENS.NOT, line, initialColumn);\n      case 'and':\n        return Token(TOKENS.AND, line, initialColumn);\n      case 'or':\n        return Token(TOKENS.OR, line, initialColumn);\n      case 'is':\n        return Token(TOKENS.EQUAL, line, initialColumn);\n      case 'isnt':\n        return Token(TOKENS.NOT_EQUAL, line, initialColumn);\n      case 'true':\n      case 'false':\n        return Token(TOKENS.BOOLEAN_LITERAL, line, initialColumn, value);\n      case 'null':\n        return Token(TOKENS.NULL_TOKEN, line, initialColumn);\n      case 'set':\n        return Token(TOKENS.KEYWORD_SET, line, initialColumn);\n      case 'trigger':\n        return Token(TOKENS.KEYWORD_TRIGGER, line, initialColumn);\n      case 'when':\n        return Token(TOKENS.KEYWORD_WHEN, line, initialColumn);\n    }\n\n  };\n\n  const handleLogicNot = () => {\n    const initialColumn = column;\n    column += 1;\n    position += 1;\n    return Token(TOKENS.NOT, line, initialColumn);\n  };\n\n  const handleLogicOperator = (token, length) => {\n    const initialColumn = column;\n    column += length;\n    position += length;\n    return Token(token, line, initialColumn);\n  };\n\n  const handleLogicNumber = () => {\n    const initialColumn = column;\n    let values = '';\n\n    while (input[position] && input[position].match(/[0-9|.]/)) {\n      values += input[position];\n      position += 1;\n      column += 1;\n    }\n\n    return Token(TOKENS.NUMBER_LITERAL, line, initialColumn, values);\n  };\n\n  const handleLogicString = () => {\n    const initialColumn = column;\n    column += 1;\n    position += 1;\n    const token = handleQText();\n    column += 1;\n    position += 1;\n\n    token.token = TOKENS.STRING_LITERAL;\n    token.column = initialColumn;\n\n    return token;\n  };\n\n  const createSimpleToken = (token, length = 1) => {\n    const initialColumn = column;\n    column += length;\n    position += length;\n    return Token(token, line, initialColumn);\n  };\n\n  const handleLogicBlock = () => {\n    if (input[position] === '\"') {\n      return handleLogicString();\n    }\n\n    if (input[position] === '}') {\n      return handleLogicBlockStop();\n    }\n\n    if (checkSequence(input, position, '==')) {\n      return handleLogicOperator(TOKENS.EQUAL, 2);\n    }\n\n    if (checkSequence(input, position, '!=')) {\n      return handleLogicOperator(TOKENS.NOT_EQUAL, 2);\n    }\n\n    if (checkSequence(input, position, '&&')) {\n      return handleLogicOperator(TOKENS.AND, 2);\n    }\n\n    if (checkSequence(input, position, '||')) {\n      return handleLogicOperator(TOKENS.OR, 2);\n    }\n\n    if (checkSequence(input, position, '<=')) {\n      return handleLogicOperator(TOKENS.LE, 2);\n    }\n\n    if (checkSequence(input, position, '>=')) {\n      return handleLogicOperator(TOKENS.GE, 2);\n    }\n\n    if (checkSequence(input, position, '<')) {\n      return handleLogicOperator(TOKENS.LESS, 1);\n    }\n\n    if (checkSequence(input, position, '>')) {\n      return handleLogicOperator(TOKENS.GREATER, 1);\n    }\n\n    if (input[position] === '=') {\n      return createSimpleToken(TOKENS.ASSIGN);\n    }\n\n    if (checkSequence(input, position, '-=')) {\n      return createSimpleToken(TOKENS.ASSIGN_SUB, 2);\n    }\n\n    if (checkSequence(input, position, '+=')) {\n      return createSimpleToken(TOKENS.ASSIGN_SUM, 2);\n    }\n\n    if (checkSequence(input, position, '*=')) {\n      return createSimpleToken(TOKENS.ASSIGN_MULT, 2);\n    }\n\n    if (checkSequence(input, position, '/=')) {\n      return createSimpleToken(TOKENS.ASSIGN_DIV, 2);\n    }\n\n    if (checkSequence(input, position, '^=')) {\n      return createSimpleToken(TOKENS.ASSIGN_POW, 2);\n    }\n\n    if (checkSequence(input, position, '%=')) {\n      return createSimpleToken(TOKENS.ASSIGN_MOD, 2);\n    }\n\n    if (input[position] === '+') {\n      return createSimpleToken(TOKENS.PLUS, 1);\n    }\n\n    if (input[position] === '-') {\n      return createSimpleToken(TOKENS.MINUS, 1);\n    }\n\n    if (input[position] === '*') {\n      return createSimpleToken(TOKENS.MULT, 1);\n    }\n\n    if (input[position] === '/') {\n      return createSimpleToken(TOKENS.DIV, 1);\n    }\n\n    if (input[position] === '^') {\n      return createSimpleToken(TOKENS.POWER, 1);\n    }\n\n    if (input[position] === '%') {\n      return createSimpleToken(TOKENS.MOD, 1);\n    }\n\n    if (input[position] === ',') {\n      return createSimpleToken(TOKENS.COMMA, 1);\n    }\n\n    if (input[position] === '!') {\n      return handleLogicNot();\n    }\n\n    if (input[position].match(/[0-9]/)) {\n      return handleLogicNumber();\n    }\n\n    if (input[position].match(/[A-Za-z]/)) {\n      return handleLogicIdentifier();\n    }\n  };\n\n  const getFollowingLineBreak = () => {\n    let lookupPosition = position;\n    let lookupColumn = column;\n    while (input[lookupPosition] === ' ') {\n      lookupPosition += 1;\n      lookupColumn += 1;\n    }\n\n    if (input[lookupPosition] === '\\n') {\n      return Token(TOKENS.LINE_BREAK, line, lookupColumn);\n    }\n  };\n\n  const getLeadingLineBreak = () => {\n    let lookupPosition = position - 2;\n    while (input[lookupPosition] === ' ') {\n      lookupPosition -= 1;\n    }\n\n    if (input[lookupPosition] === '\\n') {\n      return Token(TOKENS.LINE_BREAK, line, 0);\n    }\n  };\n\n  // get next token\n  function getNextToken() {\n    if (!isCurrentMode(MODES.QSTRING) && input[position] === '-' && input[position + 1] === '-') {\n      return handleComments();\n    }\n\n    if (!isCurrentMode(MODES.QSTRING) && input[position] === '\\n') {\n      return handleLineBreaks();\n    }\n\n    if (!isCurrentMode(MODES.LOGIC) && ((column === 0 && input[position].match(/[\\t ]/)) || (column === 0 && indent.length > 1))) {\n      return handleIndent();\n    }\n\n    if (!isCurrentMode(MODES.QSTRING) && input[position] === '{') {\n      return handleLogicBlockStart();\n    }\n\n    if(isCurrentMode(MODES.LOGIC)) {\n      const response = handleLogicBlock();\n\n      if (response)  {\n        return response;\n      }\n    }\n\n    if (input[position] === '\"') {\n      return handleQuote();\n    }\n\n    if (isCurrentMode(MODES.QSTRING)) {\n      return handleQText();\n    }\n\n    if (input[position] === ' ') {\n      return handleSpace();\n    }\n\n    if (input[position] === '(') {\n      return handleStartVariations();\n    }\n\n    if (input[position] === ')') {\n      return handleStopVariations();\n    }\n\n    if (column === 0 && input[position] === '=' && input[position + 1] === '=') {\n      return handleBlock();\n    }\n\n    if (input[position] === '-' && input[position + 1] === '>') {\n      return handleDivert();\n    }\n\n    if (input[position] === '<' && input[position + 1] === '-') {\n      return handleDivertToParent();\n    }\n\n    if (isCurrentMode(MODES.VARIATIONS) && input[position] === '-') {\n      return handleVariationItem();\n    }\n\n    if (input[position] === '*' || input[position] === '+'|| input[position] === '>') {\n      return handleOption();\n    }\n\n    if (isCurrentMode(MODES.OPTION) && ['[', ']' ].includes(input[position])) {\n      return handleBrackets();\n    }\n\n    if (input[position] === '$') {\n      return handleLineId();\n    }\n\n    if (input[position] === '#') {\n      return handleTag();\n    }\n\n    return handleText();\n  }\n\n  return {\n    // returns a list with all tokens\n    getAll() {\n      let tokens = [];\n      while (position < length) {\n        const token = getNextToken(input, position, line, column, indent);\n        if (token) {\n          if (Array.isArray(token)) {\n            tokens = tokens.concat(token);\n          } else {\n            tokens.push(token);\n          }\n        }\n      }\n\n      position += 1;\n      tokens.push(Token(TOKENS.EOF, line, column));\n\n      return tokens;\n    },\n\n    // retuns a token each time\n    next() {\n      if (pendingTokens.length) {\n        return pendingTokens.shift();\n      }\n\n      while (position < length) {\n        const token = getNextToken(input, position, line, column, indent);\n        if (token) {\n          if (Array.isArray(token)) {\n            pendingTokens = token;\n            return pendingTokens.shift();\n          } else {\n            return token;\n          }\n        }\n      }\n\n      if (position === length) {\n        position += 1;\n        return Token(TOKENS.EOF, line, column);\n      }\n    }\n  }\n}\n\nexport function Token(token, line, column, value) {\n  return {\n    token,\n    value,\n    line,\n    column\n  };\n}\n\n\n","export const DocumentNode = (content = [], blocks = []) => {\n  return { type: 'document', content, blocks};\n};\n\nexport const ContentNode = (content) => {\n  return { type: 'content', content };\n};\n\nexport const BlockNode = (blockName, content) => {\n  return { type: 'block', name: blockName, content };\n}\n\nexport const LineNode = (value, speaker, id, tags) => {\n  return { type: 'line', value, speaker, id, tags };\n};\n\nexport const OptionsNode = (content, name, id, speaker, tags) => {\n  return { type: 'options', name, content, id, speaker, tags };\n}\n\nexport const OptionNode = (content, mode, name, id, speaker, tags) => {\n  return { type: 'option', name, mode, content, id, speaker, tags };\n}\n\nexport const DivertNode = (target) => {\n  if (target === 'END') {\n    target = '<end>';\n  }\n  return { type: 'divert', target };\n}\n\nexport const VariationsNode = (mode, content = []) => {\n  return { type: 'variations', mode, content };\n}\n\nexport const VariableNode = (name) => {\n  return { type: 'variable', name };\n}\n\nexport const NumberLiteralNode = (value) => {\n  return LiteralNode('number', Number(value));\n}\n\nexport const BooleanLiteralNode = (value) => {\n  return LiteralNode('boolean', value === 'true');\n}\n\nexport const StringLiteralNode = (value) => {\n  return LiteralNode('string', value);\n}\n\nexport const LiteralNode = (name, value) => {\n  return { type: 'literal', name, value };\n}\n\nexport const NullTokenNode = () => {\n  return { type: 'null' };\n}\n\nexport const ConditionalContentNode = (conditions, content) => {\n  return { type: 'conditional_content', conditions, content };\n}\n\nexport const ActionContentNode = (action, content) => {\n  return { type: 'action_content', action, content };\n}\n\nexport const ExpressionNode = (name, elements) => {\n  return { type: 'expression', name, elements };\n}\n\nexport const AssignmentsNode = (assignments) => {\n  return { type: 'assignments', assignments };\n}\n\nexport const AssignmentNode = (variable, operation, value) => {\n  return { type: 'assignment', variable, operation, value };\n}\n\nexport const EventsNode = (events) => {\n  return { type: 'events', events };\n}\n\nexport const EventNode = (name) => {\n  return { type: 'event', name };\n}\n","import { TOKENS, tokenize, getTokenFriendlyHint } from './lexer.js';\n\nimport {\n  DocumentNode,\n  ContentNode,\n  BlockNode,\n  LineNode,\n  OptionsNode,\n  OptionNode,\n  DivertNode,\n  VariationsNode,\n  VariableNode,\n  NumberLiteralNode,\n  BooleanLiteralNode,\n  StringLiteralNode,\n  NullTokenNode,\n  ConditionalContentNode,\n  ActionContentNode,\n  ExpressionNode,\n  AssignmentsNode,\n  AssignmentNode,\n  EventsNode,\n  EventNode,\n} from './nodes.js';\n\nconst variationsModes = ['sequence', 'once', 'cycle', 'shuffle', 'shuffle sequence', 'shuffle once', 'shuffle cycle' ];\nconst operators = {\n  [TOKENS.AND]: { precedence: 1, associative: 'LEFT' },\n  [TOKENS.OR]: { precedence: 1, associative: 'LEFT' },\n  [TOKENS.EQUAL]: { precedence: 2, associative: 'LEFT' },\n  [TOKENS.NOT_EQUAL]: { precedence: 2, associative: 'LEFT' },\n  [TOKENS.GREATER]: { precedence: 2, associative: 'LEFT' },\n  [TOKENS.LESS]: { precedence: 2, associative: 'LEFT' },\n  [TOKENS.GE]: { precedence: 2, associative: 'LEFT' },\n  [TOKENS.LE]: { precedence: 2, associative: 'LEFT' },\n  [TOKENS.PLUS]: { precedence: 3, associative: 'LEFT' },\n  [TOKENS.MINUS]: { precedence: 3, associative: 'LEFT' },\n  [TOKENS.MOD]: { precedence: 4, associative: 'LEFT' },\n  [TOKENS.MULT]: { precedence: 5, associative: 'LEFT' },\n  [TOKENS.DIV]: { precedence: 5, associative: 'LEFT' },\n  [TOKENS.POWER]: { precedence: 7, associative: 'RIGHT' },\n};\n\nconst assignmentOperators = {\n  [TOKENS.ASSIGN]: 'assign',\n  [TOKENS.ASSIGN_SUM]: 'assign_sum',\n  [TOKENS.ASSIGN_SUB]: 'assign_sub',\n  [TOKENS.ASSIGN_MULT]: 'assign_mult',\n  [TOKENS.ASSIGN_DIV]: 'assign_div',\n  [TOKENS.ASSIGN_POW]: 'assign_pow',\n  [TOKENS.ASSIGN_MOD]: 'assign_mod',\n};\n\n/**\n * Parses Clyde dialogue string to Clyde object\n *\n * @param {string} doc - Clyde document string\n * @return {Object} Clyde JSON representation\n */\nexport default function parse(doc) {\n  const tokens = tokenize(doc);\n  // console.log(tokenize(doc).getAll());\n  // console.log(JSON.stringify(test.getAll()));\n  let currentToken;\n  let lookaheadTokens = [];\n  let isMultilineEnabled = true;\n\n  const wrongTokenError = (token, expected) => {\n    throw new Error(`Unexpected token \"${getTokenFriendlyHint(token.token)}\" on line ${token.line+1} column ${token.column+1}. Expected ${expected.map(getTokenFriendlyHint).join(', ')} `);\n  }\n\n  const consume = (expected) => {\n    if (!lookaheadTokens.length) {\n      lookaheadTokens.push(tokens.next());\n    }\n\n    const lookahead = lookaheadTokens.shift();\n\n    if (expected && (!lookahead || !expected.includes(lookahead.token))) {\n      wrongTokenError(lookahead, expected);\n    }\n\n    currentToken = lookahead;\n    return currentToken;\n  };\n\n  const peek = (expected, offset = 0) => {\n    while (lookaheadTokens.length < (offset + 1)) {\n      const token = tokens.next();\n      if (token) {\n        lookaheadTokens.push(token);\n      } else {\n        break;\n      }\n    }\n    const lookahead = lookaheadTokens[offset];\n\n    if (!expected || (lookahead && expected.includes(lookahead.token))) {\n      return lookahead;\n    }\n  };\n\n  const Document = () => {\n    const expected = [\n      TOKENS.EOF,\n      TOKENS.SPEAKER,\n      TOKENS.TEXT,\n      TOKENS.OPTION,\n      TOKENS.STICKY_OPTION,\n      TOKENS.FALLBACK_OPTION,\n      TOKENS.DIVERT,\n      TOKENS.DIVERT_PARENT,\n      TOKENS.BRACKET_OPEN,\n      TOKENS.BRACE_OPEN,\n    ];\n    const next = peek();\n\n    switch (next.token) {\n      case TOKENS.EOF:\n        return DocumentNode();\n      case TOKENS.SPEAKER:\n      case TOKENS.TEXT:\n      case TOKENS.OPTION:\n      case TOKENS.STICKY_OPTION:\n      case TOKENS.FALLBACK_OPTION:\n      case TOKENS.DIVERT:\n      case TOKENS.DIVERT_PARENT:\n      case TOKENS.BRACKET_OPEN:\n      case TOKENS.BRACE_OPEN:\n      case TOKENS.LINE_BREAK:\n        const result =  DocumentNode([ContentNode(Lines())]);\n        if (peek([TOKENS.BLOCK])) {\n          result.blocks = Blocks();\n        }\n        return result;\n      case TOKENS.BLOCK:\n        return DocumentNode([], Blocks());\n      default:\n        wrongTokenError(next, expected);\n    };\n  };\n\n  const Blocks = () => {\n    consume([TOKENS.BLOCK]);\n    let blocks =  [\n      BlockNode(currentToken.value, ContentNode(Lines()))\n    ];\n\n    while (peek([TOKENS.BLOCK])) {\n      blocks = blocks.concat(Blocks());\n    }\n\n    return blocks;\n  };\n\n  const Lines = () => {\n    const acceptableNext = [\n      TOKENS.SPEAKER,\n      TOKENS.TEXT,\n      TOKENS.OPTION,\n      TOKENS.STICKY_OPTION,\n      TOKENS.FALLBACK_OPTION,\n      TOKENS.DIVERT,\n      TOKENS.DIVERT_PARENT,\n      TOKENS.BRACKET_OPEN,\n      TOKENS.BRACE_OPEN,\n      TOKENS.LINE_BREAK,\n    ];\n    let lines;\n    const tk = peek(acceptableNext);\n\n    if (!tk) {\n      return [];\n    }\n\n    switch (tk.token) {\n      case TOKENS.SPEAKER:\n      case TOKENS.TEXT:\n        consume([ TOKENS.SPEAKER, TOKENS.TEXT ]);\n        const line = Line();\n        if (peek([TOKENS.BRACE_OPEN])) {\n          consume([TOKENS.BRACE_OPEN]);\n          lines = [LineWithAction(line)];\n        } else {\n          lines = [line];\n        }\n        break;\n      case TOKENS.OPTION:\n      case TOKENS.STICKY_OPTION:\n      case TOKENS.FALLBACK_OPTION:\n        lines = [Options()];\n        break;\n      case TOKENS.DIVERT:\n      case TOKENS.DIVERT_PARENT:\n        lines = [Divert()];\n        break;\n      case TOKENS.BRACKET_OPEN:\n        consume([ TOKENS.BRACKET_OPEN ]);\n        lines = [Variations()];\n        break;\n      case TOKENS.LINE_BREAK:\n        consume([ TOKENS.LINE_BREAK ]);\n      case TOKENS.BRACE_OPEN:\n        consume([TOKENS.BRACE_OPEN]);\n        if (peek([TOKENS.KEYWORD_SET, TOKENS.KEYWORD_TRIGGER])) {\n          lines = [LineWithAction()];\n        } else {\n          if (peek([TOKENS.KEYWORD_WHEN])) {\n            consume([TOKENS.KEYWORD_WHEN]);\n          }\n          lines = [ConditionalLine()];\n        }\n        break;\n    }\n\n    if (peek(acceptableNext)) {\n      lines = lines.concat(Lines());\n    }\n\n    return lines;\n  }\n\n  const Line = () => {\n    return DialogueLine();\n  };\n\n  const DialogueLine = () => {\n    switch (currentToken.token) {\n      case TOKENS.SPEAKER:\n        return LineWithSpeaker();\n      case TOKENS.TEXT:\n        return TextLine();\n    }\n  };\n\n  const LineWithSpeaker = () => {\n    const { value } = currentToken;\n    consume([TOKENS.TEXT]);\n    const line = DialogueLine();\n    line.speaker =  value;\n    return line;\n  }\n\n  const TextLine = () => {\n    const { value } = currentToken;\n    const next = peek([TOKENS.LINE_ID, TOKENS.TAG]);\n    let line;\n\n    if (next) {\n      consume([TOKENS.LINE_ID, TOKENS.TAG]);\n      line = LineWithMetadata();\n      line.value = value;\n    } else {\n      line = LineNode(value);\n    }\n\n    if (isMultilineEnabled && peek([TOKENS.INDENT])) {\n      consume([TOKENS.INDENT]);\n\n      if (peek([TOKENS.OPTION, TOKENS.STICKY_OPTION, TOKENS.FALLBACK_OPTION])) {\n        const options = Options();\n        options.id = line.id;\n        options.name = line.value;\n        options.tags = line.tags;\n        line = options;\n      } else {\n        while (!peek([TOKENS.DEDENT, TOKENS.EOF])) {\n          consume([TOKENS.TEXT]);\n          const nextLine = TextLine();\n          line.value += ` ${nextLine.value}`;\n          if (nextLine.id) {\n            line.id = nextLine.id;\n          }\n\n          if (nextLine.tags) {\n            line.tags = nextLine.tags;\n          }\n        }\n        consume([TOKENS.DEDENT, TOKENS.EOF]);\n      }\n    }\n\n    return line;\n  }\n\n  const LineWithMetadata = () => {\n    switch (currentToken.token) {\n      case TOKENS.LINE_ID:\n        return LineWithId();\n      case TOKENS.TAG:\n        return LineWithTags();\n    }\n  };\n\n  const LineWithId = () => {\n    const { value } = currentToken;\n    const next = peek([TOKENS.TAG]);\n    if (next) {\n      consume([TOKENS.TAG]);\n      const line = LineWithTags();\n      line.id = value;\n      return line;\n    }\n    return LineNode(undefined, undefined, value);\n  };\n\n  const LineWithTags = () => {\n    const { value } = currentToken;\n    const next = peek([TOKENS.LINE_ID, TOKENS.TAG]);\n    if (next) {\n      consume([TOKENS.LINE_ID, TOKENS.TAG]);\n      const line = LineWithMetadata();\n      if (!line.tags) {\n        line.tags = [];\n      }\n      line.tags.unshift(value);\n      return line;\n    }\n    return LineNode(undefined, undefined, undefined, [value]);\n  };\n\n  const Options = () => {\n    const options = OptionsNode([]);\n\n    while (peek([TOKENS.OPTION, TOKENS.STICKY_OPTION, TOKENS.FALLBACK_OPTION])) {\n      options.content.push(Option());\n    }\n\n    if (peek([ TOKENS.DEDENT ])) {\n      consume([ TOKENS.DEDENT ]);\n    }\n\n    return options;\n  };\n\n  const optionType = {\n    [TOKENS.OPTION]: 'once',\n    [TOKENS.STICKY_OPTION]: 'sticky',\n    [TOKENS.FALLBACK_OPTION]: 'fallback',\n  }\n\n  const Option = () => {\n    consume([TOKENS.OPTION, TOKENS.STICKY_OPTION, TOKENS.FALLBACK_OPTION])\n    const type = optionType[currentToken.token];\n\n    const acceptableNext = [TOKENS.SPEAKER, TOKENS.TEXT, TOKENS.INDENT, TOKENS.SQR_BRACKET_OPEN, TOKENS.BRACE_OPEN];\n    let lines = [];\n    let mainItem;\n    let useFirstLineAsDisplayOnly = false;\n    let root;\n    let wrapper;\n\n    consume(acceptableNext);\n\n    if (currentToken.token === TOKENS.BRACE_OPEN) {\n      const block = NestedLogicBlocks();\n      root = block.root;\n      wrapper = block.wrapper;\n      consume(acceptableNext);\n    }\n\n    if (currentToken.token === TOKENS.SQR_BRACKET_OPEN) {\n      useFirstLineAsDisplayOnly = true;\n      consume(acceptableNext);\n    }\n\n    switch (currentToken.token) {\n      case TOKENS.SPEAKER:\n      case TOKENS.TEXT:\n        isMultilineEnabled = false;\n        mainItem = Line();\n        isMultilineEnabled = true;\n        if (useFirstLineAsDisplayOnly) {\n          consume([TOKENS.SQR_BRACKET_CLOSE]);\n        } else {\n          lines.push(mainItem);\n        }\n\n    }\n\n    if (peek([TOKENS.BRACE_OPEN])) {\n      consume([TOKENS.BRACE_OPEN]);\n      const block = NestedLogicBlocks();\n\n      if (!root) {\n        root = block.root;\n        wrapper = block.wrapper;\n      } else {\n        wrapper.content = block.wrapper;\n        wrapper = block.wrapper;\n      }\n\n      consume([TOKENS.LINE_BREAK]);\n    }\n\n    if (currentToken.token === TOKENS.INDENT || peek([TOKENS.INDENT])) {\n      if (currentToken.token !== TOKENS.INDENT) {\n        consume([TOKENS.INDENT])\n      }\n\n      lines = lines.concat(Lines());\n      if (!mainItem) {\n        mainItem = lines[0];\n      }\n      consume([TOKENS.DEDENT, TOKENS.EOF])\n    }\n\n    const node = OptionNode(\n      ContentNode(lines),\n      type,\n      mainItem.value,\n      mainItem.id,\n      mainItem.speaker,\n      mainItem.tags,\n    );\n\n    if (root) {\n      wrapper.content = node;\n      return root;\n    }\n\n    return node;\n  }\n\n  const NestedLogicBlocks = () => {\n    let root\n    let wrapper\n    while (currentToken.token === TOKENS.BRACE_OPEN) {\n      if (!root) {\n        root = LogicBlock();\n        wrapper = root;\n      } else {\n        let next = LogicBlock();\n        wrapper.content = next;\n        wrapper = next;\n      }\n      if (peek([TOKENS.BRACE_OPEN])) {\n        consume([TOKENS.BRACE_OPEN]);\n      }\n    }\n    return { root, wrapper };\n  };\n\n\n  const Divert = () => {\n    consume([ TOKENS.DIVERT, TOKENS.DIVERT_PARENT ]);\n    const divert = currentToken;\n    let token\n\n    switch (divert.token) {\n      case TOKENS.DIVERT:\n        token = DivertNode(divert.value);\n        break;\n      case TOKENS.DIVERT_PARENT:\n        token = DivertNode('<parent>');\n        break;\n    }\n\n    if (peek([TOKENS.LINE_BREAK])) {\n      consume([TOKENS.LINE_BREAK]);\n      return token;\n    }\n\n    if (peek([TOKENS.EOF])) {\n      return token;\n    }\n\n    if (peek([TOKENS.BRACE_OPEN])) {\n      consume([TOKENS.BRACE_OPEN]);\n      token = LineWithAction(token);\n    }\n\n    return token\n  };\n\n  const Variations = () => {\n    const variations = VariationsNode('cycle');\n\n    if (peek([TOKENS.VARIATIONS_MODE])) {\n      const mode = consume([TOKENS.VARIATIONS_MODE]);\n      if (!variationsModes.includes(mode.value)) {\n        throw new Error(`Wrong variation mode set \"${mode.value}\". Valid modes: ${variationsModes.join(', ')}.`);\n      };\n      variations.mode = mode.value;\n    }\n\n    while(peek([TOKENS.INDENT, TOKENS.MINUS])) {\n      if (peek([TOKENS.INDENT])) {\n        consume([TOKENS.INDENT]);\n        continue;\n      }\n      consume([TOKENS.MINUS])\n\n      let startsNextLine = false;\n      if (peek([TOKENS.INDENT])) {\n        consume([TOKENS.INDENT]);\n        startsNextLine = true;\n      }\n\n      variations.content.push(ContentNode(Lines()));\n      if (startsNextLine) {\n        const lastVariation = variations.content[variations.content.length - 1].content;\n        const lastContent = lastVariation[lastVariation.length - 1];\n        if (lastContent.type !== 'options') {\n          consume([TOKENS.DEDENT]);\n        }\n      }\n\n      if (peek([TOKENS.DEDENT])) {\n        consume([TOKENS.DEDENT]);\n      }\n    }\n    consume([TOKENS.BRACKET_CLOSE]);\n\n    return variations;\n  };\n\n  const LineWithAction = (line) => {\n    const token = peek([\n      TOKENS.KEYWORD_SET,\n      TOKENS.KEYWORD_TRIGGER,\n    ]);\n    const expression = LogicElement();\n\n    if (line) {\n      let content = line;\n\n      if (peek([TOKENS.BRACE_OPEN])) {\n        consume([TOKENS.BRACE_OPEN]);\n        content = LineWithAction(line);\n      }\n\n      if (peek([TOKENS.LINE_BREAK])) {\n        consume([TOKENS.LINE_BREAK]);\n      }\n\n      if (!token || token.token === TOKENS.KEYWORD_WHEN) {\n        return ConditionalContentNode(expression, content);\n      }\n      return ActionContentNode(expression, content);\n    }\n\n    if (peek([TOKENS.LINE_BREAK])) {\n      consume([TOKENS.LINE_BREAK]);\n      return expression;\n    }\n\n    if (peek([TOKENS.EOF])) {\n      return  expression;\n    }\n\n    if (peek([TOKENS.BRACE_OPEN])) {\n      consume([TOKENS.BRACE_OPEN]);\n      if (!token) {\n        return ConditionalContentNode(expression, LineWithAction());\n      }\n      return ActionContentNode(expression, LineWithAction());\n    }\n\n    consume([TOKENS.SPEAKER, TOKENS.TEXT]);\n\n    if (!token) {\n      return ConditionalContentNode(expression, Line());\n    }\n    return ActionContentNode(expression, Line());\n  };\n\n  const LogicElement = () => {\n    if (peek([TOKENS.KEYWORD_SET])) {\n      const assignments = Assignments()\n      return assignments\n    }\n\n    if (peek([TOKENS.KEYWORD_TRIGGER])) {\n      const events = Events();\n      return events;\n\n    }\n\n    if (peek([TOKENS.KEYWORD_WHEN])) {\n      consume([TOKENS.KEYWORD_WHEN]);\n    }\n\n    const condition = Condition();\n    return condition;\n  };\n\n  const LogicBlock = () => {\n    if (peek([TOKENS.KEYWORD_SET])) {\n      const assignments = Assignments()\n      return ActionContentNode(assignments);\n    }\n\n    if (peek([TOKENS.KEYWORD_TRIGGER])) {\n      const events = Events();\n      return ActionContentNode(events);\n\n    }\n\n    if (peek([TOKENS.KEYWORD_WHEN])) {\n      consume([TOKENS.KEYWORD_WHEN]);\n    }\n\n    const condition = Condition();\n    return ConditionalContentNode(condition);\n  };\n\n\n  const Assignments = () => {\n    consume([TOKENS.KEYWORD_SET]);\n    const assignments = [AssignmentExpression()];\n    while(peek([TOKENS.COMMA])) {\n      consume([TOKENS.COMMA]);\n      assignments.push(AssignmentExpression());\n    }\n    consume([TOKENS.BRACE_CLOSE]);\n    return AssignmentsNode(assignments);\n  };\n\n  const Events = () => {\n    consume([TOKENS.KEYWORD_TRIGGER]);\n    consume([TOKENS.IDENTIFIER]);\n    const events = [EventNode(currentToken.value)];\n\n    while(peek([TOKENS.COMMA])) {\n      consume([TOKENS.COMMA]);\n      consume([TOKENS.IDENTIFIER]);\n      events.push(EventNode(currentToken.value));\n    }\n\n    consume([TOKENS.BRACE_CLOSE]);\n\n    return EventsNode(events);\n  };\n\n  const ConditionalLine = () => {\n    const expression = Condition();\n\n    let content;\n\n    if (peek([TOKENS.DIVERT, TOKENS.DIVERT_PARENT])) {\n      content = Divert();\n    } else if (peek([TOKENS.LINE_BREAK])) {\n      consume([TOKENS.LINE_BREAK]);\n      consume([TOKENS.INDENT]);\n      content = ContentNode(Lines());\n      consume([TOKENS.DEDENT, TOKENS.EOF]);\n    } else if (peek([TOKENS.BRACE_OPEN])) {\n      consume([TOKENS.BRACE_OPEN]);\n      content = LineWithAction();\n    } else {\n      consume([TOKENS.SPEAKER, TOKENS.TEXT]);\n      content = Line();\n      if (peek([TOKENS.BRACE_OPEN])) {\n        consume([TOKENS.BRACE_OPEN]);\n        content = LineWithAction(content);\n      }\n    }\n\n    return ConditionalContentNode(\n      expression,\n      content\n    );\n  };\n\n  const Condition = () => {\n    const token = peek([\n      TOKENS.IDENTIFIER,\n      TOKENS.NOT,\n    ]);\n    let expression;\n    if (token) {\n      expression = Expression();\n    }\n    consume([TOKENS.BRACE_CLOSE]);\n    return expression;\n  };\n\n  const AssignmentExpression = () => {\n    consume([TOKENS.IDENTIFIER]);\n    const variable = VariableNode(currentToken.value);\n\n    if (peek([TOKENS.BRACE_CLOSE])) {\n      return variable;\n    }\n\n    const operators = Object.keys(assignmentOperators);\n\n    consume(operators);\n\n    if (peek([TOKENS.IDENTIFIER]) && peek([...operators, TOKENS.BRACE_CLOSE], 1)) {\n      return AssignmentNode(variable, assignmentOperators[currentToken.token], AssignmentExpression());\n    }\n    return AssignmentNode(variable, assignmentOperators[currentToken.token], Expression());\n  };\n\n  const Expression = (minPrecedence = 1) => {\n    const operatorTokens = Object.keys(operators);\n\n    let lhs = Operand();\n\n    if (!peek(operatorTokens)) {\n      return lhs;\n    }\n\n    consume(operatorTokens);\n\n    while (true) {\n      if (!operatorTokens.includes(currentToken.token)) {\n        break;\n      }\n\n      const operator = currentToken.token;\n\n      const { precedence, associative } = operators[currentToken.token];\n\n      if (precedence < minPrecedence) {\n        break;\n      }\n\n      const nextMinPrecedence = associative === 'LEFT' ? precedence + 1 : precedence;\n      const rhs = Expression(nextMinPrecedence);\n      lhs = Operator(operator, lhs, rhs);\n    }\n    return lhs;\n  };\n\n  const Operand = () => {\n    consume([\n      TOKENS.IDENTIFIER,\n      TOKENS.NOT,\n      TOKENS.NUMBER_LITERAL,\n      TOKENS.STRING_LITERAL,\n      TOKENS.BOOLEAN_LITERAL,\n      TOKENS.NULL_TOKEN\n    ]);\n\n    switch(currentToken.token) {\n      case TOKENS.NOT:\n        return ExpressionNode('not', [Operand()]);\n      case TOKENS.IDENTIFIER:\n        return VariableNode(currentToken.value);\n      case TOKENS.NUMBER_LITERAL:\n        return NumberLiteralNode(currentToken.value);\n      case TOKENS.STRING_LITERAL:\n        return StringLiteralNode(currentToken.value);\n      case TOKENS.BOOLEAN_LITERAL:\n        return BooleanLiteralNode(currentToken.value);\n      case TOKENS.NULL_TOKEN:\n        return NullTokenNode();\n    }\n  };\n\n  const Operator = (operator, lhs, rhs) => {\n    const labels = {\n      [TOKENS.PLUS]: 'add',\n      [TOKENS.MINUS]: 'sub',\n      [TOKENS.MULT]: 'mult',\n      [TOKENS.DIV]: 'div',\n      [TOKENS.MOD]: 'mod',\n      [TOKENS.POWER]: 'pow',\n      [TOKENS.AND]: 'and',\n      [TOKENS.OR]: 'or',\n      [TOKENS.EQUAL]: 'equal',\n      [TOKENS.NOT_EQUAL]: 'not_equal',\n      [TOKENS.GREATER]: 'greater_than',\n      [TOKENS.LESS]: 'less_than',\n      [TOKENS.GE]: 'greater_or_equal',\n      [TOKENS.LE]: 'less_or_equal',\n    };\n    return ExpressionNode(labels[operator], [lhs, rhs]);\n  };\n\n  const result = Document();\n  if (peek()) {\n    consume([ TOKENS.EOF ]);\n  }\n  return result;\n}\n","import styled from 'styled-components';\n\nexport const InfoBubble = styled.div `\n  text-align: center;\n  width: auto;\n  background-color: #eeeeee;\n  margin: 10px 10px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: default;\n`;\n\nexport const ErrorBubble = styled.div`\n  text-align: center;\n  width: auto;\n  background-color: #ffeeee;\n  margin: 10px 10px;\n  padding: 30px 20px;\n  border-radius: 5px;\n  cursor: default;\n  font-weight: 500;\n  display: flex;\n  justify-content: center;\n  white-space: pre-line;\n  line-height: 26px;\n`;\n","import React, { useState } from \"react\";\nimport styled from 'styled-components';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCog,\n  faRedoAlt,\n  faFastForward,\n  faBug,\n  faComment,\n  faComments,\n  faReceipt,\n  faGhost,\n  faHandSparkles,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport DropDownMenu, { DropDownItem } from '../screens/DropdownMenu';\n\nconst InterpreterToolbarWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  color: #444;\n  padding: 0px 10px;\n  height: 40px;\n\n  > svg {\n    cursor: pointer;\n    font-size: 1.5em;\n    margin: 0px 20px;\n    &:hover {\n      color: #555;\n    }\n  }\n`;\n\nconst IconWrapper = styled.span`\n  cursor: pointer;\n  position: relative;\n  margin: 0px 20px;\n  > svg {\n    font-size: 1.5em;\n    &:hover {\n      color: #222;\n    }\n  }\n`;\n\nexport default function InterpreterToolbar(properties) {\n  const {\n    doc,\n    currentBlock,\n    shouldShowExtraMetadata,\n    shouldShowDebugPane,\n    singleBubblePresentation,\n    setBlock,\n    clearTimeline,\n    showExtraMetadata,\n    hideExtraMetadata,\n    showDebugPane,\n    hideDebugPane,\n    enableSingleBubbleDialogue,\n    disableSingleBubbleDialogue,\n    dialogue,\n    addDialogueLine,\n    chooseOption,\n    clearEvents,\n  } = properties;\n\n  const [isMenuVisible, setMenuVisibility] = useState(false);\n\n  const selectBlock = (blockName) => {\n    setBlock(blockName);\n    clearTimeline();\n    dialogue.start(blockName);\n  };\n\n  const toggleMenu = () => {\n    setMenuVisibility(!isMenuVisible);\n  };\n\n  const toggleMultipleBubbles = () => {\n    if (singleBubblePresentation) {\n      disableSingleBubbleDialogue();\n    } else {\n      enableSingleBubbleDialogue();\n    }\n  };\n\n  const toggleExtraMetadata = () => {\n    if (shouldShowExtraMetadata) {\n      hideExtraMetadata();\n    } else {\n      showExtraMetadata();\n    }\n  };\n\n  const toggleDebugPane = () => {\n    if (shouldShowDebugPane) {\n      hideDebugPane();\n    } else {\n      showDebugPane();\n    }\n  };\n\n  const restart = () => {\n    dialogue.start(currentBlock);\n    clearTimeline();\n  };\n\n  const forwardToNextOption = () => {\n    const line = dialogue.getContent();\n    addDialogueLine(line);\n\n    if (!line || line.type === 'options') {\n      return line;\n    }\n\n    return forwardToNextOption();\n  };\n\n  const poltergeist = () => {\n    const optionList = forwardToNextOption();\n\n    if (!optionList) {\n      return;\n    }\n\n    const choice = Math.floor(Math.random() * optionList.options.length);\n    chooseOption(choice);\n    dialogue.choose(choice);\n\n    poltergeist();\n  };\n\n  const cleanMemory = () => {\n    dialogue.clearData();\n    addDialogueLine({ type: 'INTERPRETER_INFO', text: 'Memory cleared'})\n    dialogue.start(currentBlock);\n    clearEvents();\n    clearTimeline();\n  };\n\n  return (\n    <InterpreterToolbarWrapper>\n      <BlockList document={doc} currentBlock={currentBlock} onBlockSelected={selectBlock}/>\n      <FontAwesomeIcon icon={faRedoAlt} title=\"Restart dialogue\" onClick={restart}/>\n\n      <FontAwesomeIcon icon={faFastForward} title=\"Forward untill next choice\" onClick={forwardToNextOption}/>\n\n      <FontAwesomeIcon icon={faGhost} title=\"Execute Poltergeist mode (auto anwser)\" onClick={poltergeist}/>\n\n      <FontAwesomeIcon icon={faHandSparkles} title=\"Clear memory\" onClick={cleanMemory}/>\n\n      <FontAwesomeIcon\n        icon={ singleBubblePresentation ? faComments : faComment }\n        title={`Set ${singleBubblePresentation ? 'multi' : 'single'} bubble dialogue`}\n        onClick={toggleMultipleBubbles}\n      />\n\n      <IconWrapper>\n        <FontAwesomeIcon icon={faCog} onClick={toggleMenu} title=\"Interpreter options\"/>\n        { isMenuVisible ? (\n          <DropDownMenu onClick={toggleMenu} style={{ width: '280px' }}>\n\n            <DropDownItem\n              label=\"Toggle extra metadata\"\n              onClick={toggleExtraMetadata}\n              icon={faReceipt}\n              text={`${shouldShowExtraMetadata ? 'Hide' : 'Show'} metadata`}\n            />\n\n            <DropDownItem\n              label=\"Toggle debug pane\"\n              onClick={toggleDebugPane}\n              icon={faBug}\n              text={`${shouldShowDebugPane ? 'Hide' : 'Show'} debug pane`}\n              />\n           </DropDownMenu>\n          ) : ''\n        }\n      </IconWrapper>\n    </InterpreterToolbarWrapper>\n  );\n}\n\nfunction BlockList(props) {\n  const { document: doc, currentBlock, onBlockSelected } = props;\n  const list = [\n    ...(doc.content.length > 0 ? ['default'] : []),\n    ...doc.blocks.map(b => b.name)\n  ];\n\n  const selectBlock = (event) => {\n    const { value } = event.target;\n    if (value === 'default') {\n      onBlockSelected();\n      return;\n    }\n    onBlockSelected(event.target.value);\n  };\n\n  return (\n    <div>\n      <select value={currentBlock} onChange={selectBlock} aria-label=\"Block selector\">\n        { list.map((option, index) => (\n            <option key={index} value={option}>{option}</option>\n          )\n        )}\n      </select>\n    </div>\n  );\n}\n\n","import React from \"react\";\nimport styled from 'styled-components';\n\nimport { InfoBubble } from './Bubbles';\n\nconst DialogueBubble = styled.div`\n  width: auto;\n  background-color: #fff5da;\n  color: #34383c;\n  margin: 10px 10px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: default;\n  position: relative;\n`;\n\nconst DialogueContent = styled.div`\n`;\n\nconst DialogueSpeaker = styled.div`\n  margin-bottom: 5px;\n  font-weight: 500;\n`;\n\nconst DialogueOptionsList = styled.ol`\n  margin-left: 10px;\n  list-style-type: decimal;\n  list-style-position: inside;\n`;\n\nconst DialogueOption = styled.li`\n  position: relative;\n  opacity: ${p => p.optionSelected !== undefined && p.optionSelected !== p.index ? 0.5 : 1 };\n  ${p => p.optionSelected === p.index ? 'font-weight: 600;' : '' }\n  cursor: ${p => p.optionSelected === undefined ? 'pointer' : 'default' };\n  margin: 4px;\n\n  > span:hover {\n    ${p => p.optionSelected !== undefined ? '' : 'font-weight: 600;' }\n  }\n`;\n\nconst DialogueMetadataWrapper = styled.span`\n  color: #444;\n  font-weight: normal;\n  background-color: rgba(245,235,208, 1);\n  opacity: 0.8;\n  border-radius: 5px;\n  padding-right: 10px;\n  margin-left: 10px;\n\n  label {\n    margin-left: 10px;\n    font-weight: 500;\n  }\n`;\n\nexport default function DialogueEntry(props) {\n  const {\n    line,\n    onSelection,\n    showMetadata\n  } = props;\n\n  if (line === undefined) {\n    return <InfoBubble>DIALOGUE ENDED</InfoBubble>;\n  }\n\n  if (line.type === 'line') {\n    return <DialogueLine {...line} showMetadata={showMetadata}/>\n  }\n\n  if (line.type === 'options') {\n    return <DialogueOptions {...line} onSelection={onSelection} showMetadata={showMetadata}/>\n  }\n\n  return <InfoBubble>{line.text === '<DIALOGUE_CHANGED>' ? 'DIALOGUE CHANGED' : line.text }</InfoBubble>\n}\n\nfunction DialogueLine(props) {\n  const {\n    id,\n    tags,\n    speaker,\n    text,\n    showMetadata\n  } = props;\n\n  return (\n    <DialogueBubble>\n      { speaker ? <DialogueSpeaker>{speaker}</DialogueSpeaker> : undefined }\n      <DialogueContent>\n        {text} <DialogueMetadata id={id} tags={tags} isVisible={showMetadata}/>\n      </DialogueContent>\n    </DialogueBubble>\n  );\n}\n\nfunction DialogueOptions(props) {\n  const {\n    id,\n    tags,\n    speaker,\n    name,\n    options,\n    onSelection,\n    selected,\n    showMetadata\n  } = props;\n\n  const select = (option) => {\n    if (selected !== undefined) {\n      return;\n    }\n    onSelection(option);\n  };\n\n  return (\n    <DialogueBubble>\n      { speaker ? <DialogueSpeaker>{speaker}</DialogueSpeaker> : undefined }\n      <DialogueContent>\n        {name} <DialogueMetadata id={id} tags={tags} isVisible={showMetadata}/>\n        <DialogueOptionsList>\n          { options.map((option, index) => (\n            <DialogueOption\n              key={index}\n              optionSelected={selected}\n              index={index}\n            >\n              <span onClick={e => { e.stopPropagation(); select(index) }}>{option.label} <DialogueMetadata {...option} isVisible={showMetadata}/></span>\n\n            </DialogueOption>\n            ))}\n        </DialogueOptionsList>\n      </DialogueContent>\n    </DialogueBubble>\n  );\n}\n\nfunction DialogueMetadata({ id, tags, isVisible }) {\n  if (!isVisible || (id === undefined && tags === undefined )) {\n    return<span></span>;\n  }\n\n  return <DialogueMetadataWrapper aria-label=\"metadata\">\n    { id !== undefined ? <span aria-label=\"line id\"><label>id:</label> {id}</span>: undefined } { tags !== undefined ? <span aria-label=\"line tags\"><label>tags:</label> {tags.join(', ')}</span>: undefined }\n  </DialogueMetadataWrapper>\n}\n\n","import React, { useRef, useEffect } from \"react\";\nimport styled from 'styled-components';\n\nimport { InfoBubble } from './Bubbles';\nimport DialogueEntry from './DialogueEntry';\n\nconst InterpreterScreenWrapper = styled.div`\n  width: auto;\n  overflow: scroll;\n`;\n\nexport default function InterpreterTimeline(props) {\n  const {\n    timeline,\n    shouldShowExtraMetadata,\n    singleBubblePresentation,\n    addDialogueLine,\n    style,\n    dialogue,\n    chooseOption,\n  } = props;\n\n  const next = () => {\n    const line = dialogue.getContent();\n    if (line && line.type === 'options' && timeline.length > 0 && timeline[timeline.length - 1].type === 'options') {\n      return;\n    }\n\n    if (!line && !timeline[timeline.length - 1]) {\n      return;\n    }\n    addDialogueLine(line);\n  };\n\n  const choose = (option) => {\n    dialogue.choose(option);\n    chooseOption(option);\n    next();\n  };\n\n  const scrollableRef = useRef(null)\n\n  const scrollToBottom = () => {\n    scrollableRef.current.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n  useEffect(scrollToBottom, [timeline]);\n\n  return (\n      <InterpreterScreenWrapper onClick={next} style={style} aria-label=\"Interpreter Dialogue Timeline\">\n        {!timeline || !timeline.length ? <InfoBubble>Dialogue not started. Click for next line.</InfoBubble> : ''}\n        {\n          singleBubblePresentation ?\n            ( timeline.length ?  <DialogueEntry line={timeline[timeline.length - 1]} onSelection={choose} showMetadata={shouldShowExtraMetadata} /> : undefined )\n          :\n            timeline\n              .filter((line, key) => !(line && line.text === '<DIALOGUE_CHANGED>' && line.text === timeline[key - 1]?.text))\n              .map((line, key) => {\n                return <DialogueEntry line={line} key={key} onSelection={choose} showMetadata={shouldShowExtraMetadata}/>\n            })\n        }\n        <div ref={scrollableRef}/>\n      </InterpreterScreenWrapper>\n  );\n}\n\n","import React  from \"react\";\nimport styled from 'styled-components';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  // faSave,\n  faTimes,\n} from '@fortawesome/free-solid-svg-icons'\n\nconst DebugPaneWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  overflow: scroll;\n`;\n\nconst DebugPaneCloseButton = styled.div`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  cursor: pointer;\n`;\n\nconst DebugEntryTable = styled.table`\n  width: 90%;\n  margin: 10px;\n\n  thead > tr > td {\n    font-weight: 500;\n    padding-bottom: 5px;\n  }\n\n  tbody {\n    > tr:nth-child(even) {\n      background-color: #f3f3f3;\n    }\n    td {\n      padding: 2px 0px;\n    }\n  }\n`;\n\nexport default function DebugPane(properties) {\n  const {\n    events,\n    hideDebugPane,\n    ...props\n  } = properties;\n\n\n  const entries = events.reduce((entries, event) => {\n    const identifier = `${event.type}${event.data.name}`;\n    let record = entries[identifier];\n    if (!record) {\n      entries[identifier] = {\n        type: event.type,\n        name: event.data.name,\n        value: event.data.value,\n        eventTime: event.eventTime,\n      }\n      return entries;\n    }\n    record.eventTime = event.eventTime;\n\n    if (event.data.value) {\n      record.value = event.data.value;\n    }\n    return entries;\n  }, {});\n\n  const formatDate = (timestamp) => {\n    const date = new Date(timestamp);\n    return `${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()} ${date.toLocaleTimeString()}`;\n  };\n\n  return <DebugPaneWrapper aria-label=\"Debug pane\" {...props}>\n    <DebugPaneCloseButton>\n      <FontAwesomeIcon icon={faTimes} onClick={hideDebugPane} aria-label=\"Close debug pane\"/>\n    </DebugPaneCloseButton>\n\n    <DebugEntryTable>\n      <thead>\n        <tr>\n          <td>Type</td>\n          <td>Name</td>\n          <td>Value</td>\n          <td>Time</td>\n        </tr>\n      </thead>\n      <tbody>\n    {Object.keys(entries).map((key) => {\n      const entry = entries[key];\n      return <tr key={key}><td>{entry.type}</td><td>{entry.name}</td><td>{entry.value !== undefined ? entry.value.toString() : undefined}</td><td>{formatDate(entry.eventTime)}</td></tr>;\n    })}\n     </tbody>\n    </DebugEntryTable>\n  </DebugPaneWrapper>;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Interpreter as ClydeInterpreter } from '@clyde-lang/interpreter';\nimport { parse } from '@clyde-lang/parser';\n\nimport { InfoBubble, ErrorBubble } from './Bubbles';\nimport InterpreterToolbar from './InterpreterToolbar';\nimport InterpreterTimeline from './InterpreterTimeline';\nimport DebugPane from './DebugPane';\n\nimport SplitPane from '../screens/SplitPane';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nexport default function Interpreter(p) {\n  const {\n    content,\n    currentBlock,\n    timeline,\n    shouldShowExtraMetadata,\n    shouldShowDebugPane,\n    debugPaneDirection,\n    singleBubblePresentation,\n    clydeDocument,\n    setBlock,\n    addDialogueLine,\n    clearTimeline,\n    showExtraMetadata,\n    hideExtraMetadata,\n    showDebugPane,\n    hideDebugPane,\n    enableSingleBubbleDialogue,\n    disableSingleBubbleDialogue,\n    chooseOption,\n    notifyEvent,\n    clearEvents,\n    events,\n    ...props } = p;\n  const [lastContent, setLastContent] = useState('');\n  const [persistedDialogue, setDialogue] = useState();\n  let dialogue = persistedDialogue;\n  let doc;\n  let errorMessage;\n\n  const updateEventInfo = (data) => {\n    updateDebugInfo('event', data);\n  };\n\n  const updateVariableInfo = (data) => {\n    updateDebugInfo('variable', data);\n  };\n\n  const updateDebugInfo = (type, data) => {\n    notifyEvent({ type, data, eventTime: Date.now() });\n  };\n\n  try {\n    doc = parse(`${content || ''}`);\n\n    if (!dialogue || content !== lastContent) {\n      setLastContent(content);\n      dialogue = ClydeInterpreter(doc);\n      if (currentBlock) {\n        dialogue.start(currentBlock);\n        setBlock(currentBlock);\n      }\n      setDialogue(dialogue);\n\n      dialogue.on(dialogue.events.VARIABLE_CHANGED, updateVariableInfo);\n      dialogue.on(dialogue.events.EVENT_TRIGGERED, updateEventInfo);\n    }\n  } catch (e) {\n    errorMessage = e.message;\n    doc = parse(`${lastContent || ''}`);\n  }\n\n  return (\n    <Wrapper {...props} aria-label=\"Clyde interpreter\">\n      <InterpreterToolbar\n        doc={doc}\n        currentBlock={currentBlock}\n        timeline={timeline}\n        shouldShowExtraMetadata={shouldShowExtraMetadata}\n        shouldShowDebugPane={shouldShowDebugPane}\n        singleBubblePresentation={singleBubblePresentation}\n        setBlock={setBlock}\n        clearTimeline={clearTimeline}\n        showExtraMetadata={showExtraMetadata}\n        hideExtraMetadata={hideExtraMetadata}\n        showDebugPane={showDebugPane}\n        hideDebugPane={hideDebugPane}\n        enableSingleBubbleDialogue={enableSingleBubbleDialogue}\n        disableSingleBubbleDialogue={disableSingleBubbleDialogue}\n        addDialogueLine={addDialogueLine}\n        dialogue={dialogue}\n        chooseOption={chooseOption}\n        clearEvents={clearEvents}\n      />\n\n      <SplitPane\n        direction={debugPaneDirection}\n        defaultSizes={[80, 20]}\n        style={{height: 'calc(100% - 40px)'}}\n       >\n        { !errorMessage && content && content !== '' ?\n          <InterpreterTimeline\n            dialogue={dialogue}\n            currentBlock={currentBlock}\n            timeline={timeline}\n            shouldShowExtraMetadata={shouldShowExtraMetadata}\n            singleBubblePresentation={singleBubblePresentation}\n            setBlock={setBlock}\n            addDialogueLine={addDialogueLine}\n            clearTimeline={clearTimeline}\n            chooseOption={chooseOption}\n            />\n            : (errorMessage ? <ErrorBubble style={{ backgroundColor: '#eeefef' }}>{errorMessage}</ErrorBubble> :  <InfoBubble>Nothing to show.</InfoBubble>)}\n\n        { shouldShowDebugPane ?\n            <DebugPane events={events} hideDebugPane={hideDebugPane}/>\n        : undefined }\n      </SplitPane>\n    </Wrapper>\n  );\n}\n\nInterpreter.propTypes = {\n  currentBlock: PropTypes.string,\n  timeline: PropTypes.array,\n  shouldShowExtraMetadata: PropTypes.bool,\n  shouldShowDebugPane: PropTypes.bool,\n  singleBubblePresentation: PropTypes.bool,\n  clydeDocument: PropTypes.string,\n  setBlock: PropTypes.func,\n  addDialogueLine: PropTypes.func,\n  clearTimeline: PropTypes.func,\n  showExtraMetadata: PropTypes.func,\n  hideExtraMetadata: PropTypes.func,\n  showDebugPane: PropTypes.func,\n  hideDebugPane: PropTypes.func,\n  enableSingleBubbleDialogue: PropTypes.func,\n  disableSingleBubbleDialogue: PropTypes.func,\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ModalWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 9999;\n`;\n\nconst ModalInnerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  min-width: 500px;\n  min-height: 300px;\n  color: #333;\n  padding: 10px;\n`;\n\nconst ModalHeader = styled.div`\n  margin-bottom: 10px;\n  padding-bottom: 10px;\n  text-align: center;\n  border-bottom: 1px solid #ccc;\n`;\n\nconst ModalFooter = styled.div`\n  text-align: right;\n`;\n\nconst ModalContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ModalAction = styled.button`\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 8px 12px;\n\n  &:focus, &:hover {\n    background-color: #f1f1f1;\n  }\n`;\n\nexport default function Modal(props) {\n  const {\n    title,\n    actions,\n    children\n  } = props;\n\n  return (\n    <ModalWrapper>\n      <ModalInnerWrapper>\n        <ModalHeader>{title}</ModalHeader>\n        <ModalContent>{children}</ModalContent>\n        <ModalFooter>\n          {actions.map((action, key) => {\n            return <ModalAction key={key} onClick={action.onClick}>{action.label}</ModalAction>\n          })}\n        </ModalFooter>\n      </ModalInnerWrapper>\n    </ModalWrapper>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Modal from '../screens/Modal';\n\nconst Preference = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 4px 10px;\n\n  > input {\n    margin-right: 10px;\n  }\n\n  > select, > input[type=\"number\"] {\n    margin-left: 10px;\n  }\n`;\n\nexport default function EditorSettingsModal(props) {\n  const {\n    onCloseClick,\n    updatePreference,\n    preferences,\n  } = props;\n\n  const update = (item) => {\n    updatePreference(item.target.name, item.target.checked);\n  };\n\n  const updateNumber = (item) => {\n    updatePreference(item.target.name, Number(item.target.value));\n  };\n\n  const updateTheme = (item) => {\n    updatePreference(item.target.name, item.target.value);\n  };\n\n  const themes = [\n    { value: 'dracula', name: 'Dracula' },\n    { value: 'monokai', name: 'Monokai' },\n    { value: 'tomorrow_night_eighties', name: 'Tomorrow Night Eighties' },\n    { value: 'tomorrow', name: 'Tomorrow' },\n    { value: 'textmate', name: 'Textmate' },\n  ];\n\n  return  (\n  <Modal title=\"Editor preferences\" actions={[{ label: 'Close', onClick: () => onCloseClick() }]}>\n    <Preference>\n      <input\n        type=\"checkBox\"\n        name=\"highlightActiveLine\"\n        onChange={update}\n        checked={preferences.highlightActiveLine}\n      />\n      <label htmlFor=\"highlightActiveLine\">Highlight active line</label>\n    </Preference>\n    <Preference>\n      <input type=\"checkBox\"  name=\"showInvisibles\"\n        onChange={update}\n        checked={preferences.showInvisibles}\n    />\n    <label htmlFor=\"showInvisibles\">Show invisibles</label>\n    </Preference>\n    <Preference>\n      <input type=\"checkBox\"  name=\"vimMode\"\n        onChange={update}\n        checked={preferences.vimMode}\n    />\n    <label htmlFor=\"vimMode\">Enable vim mode</label>\n    </Preference>\n    <Preference>\n      <input type=\"checkBox\"  name=\"lineWrap\"\n        onChange={update}\n        checked={preferences.lineWrap}\n      />\n      <label htmlFor=\"line_wrap\">Enable line wrap</label>\n    </Preference>\n    <Preference>\n      <input type=\"checkBox\"  name=\"scrollPastEnd\"\n        onChange={update}\n        checked={preferences.scrollPastEnd}\n      />\n      <label htmlFor=\"scrollPastEnd\"></label> Enable scroll past end\n    </Preference>\n    <Preference>\n      <input type=\"checkBox\"  name=\"useSoftTabs\"\n        onChange={update}\n        checked={preferences.useSoftTabs}\n      />\n      <label htmlFor=\"useSoftTabs\">Enable soft tabs</label>\n    </Preference>\n    <Preference>\n      <label htmlFor=\"tabSize\">Tab size</label>\n      <input type=\"number\"  name=\"tabSize\" max=\"10\" min=\"1\" onChange={updateNumber} value={preferences.tabSize}/>\n    </Preference>\n    <Preference>\n      <label htmlFor=\"fontSize\">Font size</label>\n      <input type=\"number\" name=\"fontSize\" max=\"70\" min=\"1\" onChange={updateNumber} value={preferences.fontSize}/>px\n    </Preference>\n    <Preference>\n      <label htmlFor=\"theme\">Theme</label>\n      <select name=\"theme\" value={preferences.theme} onChange={updateTheme}>\n        { themes.map((theme, key) => <option key={key} value={theme.value}>{theme.name}</option>)}\n      </select>\n    </Preference>\n  </Modal>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCog,\n  faColumns,\n  faCode,\n  faEye,\n  faSlidersH,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport SplitPane from './SplitPane';\nimport DropDownMenu, { DropDownItem } from './DropdownMenu';\n\nimport Editor from '../editor/Editor';\nimport Interpreter from '../interpreter/Interpreter';\nimport EditorSettingsModal from '../editor/EditorSettingsModal';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  max-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 40px;\n  font-size: 1.5em;\n  color: #444;\n  padding-left: 10px;\n  align-items: center;\n`;\n\nconst IconWrapper = styled.span`\n  cursor: pointer;\n  position: relative;\n`;\n\nexport default function MainPanels(props) {\n  const {\n    // interface\n    isEditorEnabled = true,\n    isInterpreterEnabled = true,\n    toggleEditor,\n    toggleInterpreter,\n    interpreterSplitDirection = 'vertical',\n    changeInterpreterSplitDirection,\n    // editor\n    editorDefaultValue,\n    setDocumentContent,\n    editorPreferences,\n    updateEditorPreference,\n    // interpreter\n    currentBlock,\n    timeline,\n    shouldShowExtraMetadata,\n    shouldShowDebugPane,\n    singleBubblePresentation,\n    document: clydeDocument,\n    setBlock,\n    addDialogueLine,\n    clearTimeline,\n    showExtraMetadata,\n    hideExtraMetadata,\n    showDebugPane,\n    hideDebugPane,\n    enableSingleBubbleDialogue,\n    disableSingleBubbleDialogue,\n    chooseOption,\n    events,\n    notifyEvent,\n    clearEvents,\n  } = props;\n\n  const [isMenuVisible, setMenuVisibility] = useState(false);\n  const [isEditorSettingsVisible, setEditorSettingsVisibility] = useState(false);\n\n  const toggleSplitDirection = () => {\n    if (interpreterSplitDirection === 'vertical') {\n      changeInterpreterSplitDirection('horizontal');\n    } else {\n      changeInterpreterSplitDirection('vertical');\n    }\n  };\n\n  const toggleMenu = () => {\n    setMenuVisibility(!isMenuVisible);\n  };\n\n  const openEditorSettings = () => {\n    setEditorSettingsVisibility(true);\n  };\n\n  return (\n     <Wrapper>\n       <Header>\n         <IconWrapper>\n           <FontAwesomeIcon icon={faCog} onClick={toggleMenu} aria-label=\"Toggle settings menu\"/>\n           { isMenuVisible ? (\n              <DropDownMenu onClick={toggleMenu}>\n                <DropDownItem\n                  label=\"Change split direction\"\n                  onClick={toggleSplitDirection}\n                  icon={faColumns}\n                  text={`Split mode: ${interpreterSplitDirection}`}\n                />\n                { isInterpreterEnabled ?\n                    <DropDownItem\n                      label=\"Toggle editor\"\n                      onClick={() => toggleEditor(!isEditorEnabled)}\n                      icon={faCode}\n                      text={`${isEditorEnabled ? 'Hide' : 'Show' } editor`}\n                    /> : undefined\n                }\n                { isEditorEnabled ?\n                  <DropDownItem\n                    label=\"Toggle interpreter\"\n                    onClick={() => toggleInterpreter(!isInterpreterEnabled)}\n                    icon={faEye}\n                    text={`${isInterpreterEnabled ? 'Hide' : 'Show' } interpreter`}\n                  /> : undefined\n                }\n\n                <DropDownItem\n                  label=\"Editor preferences\"\n                  onClick={openEditorSettings}\n                  icon={faSlidersH}\n                  text=\"Editor preferences\"\n                />\n              </DropDownMenu>\n             ) : ''\n           }\n         </IconWrapper>\n        </Header>\n       <SplitPane\n         direction={interpreterSplitDirection}\n         defaultSizes={[50, 50]}\n         style={{height: 'calc(100% - 40px)'}}\n         aria-label=\"Main panels\">\n        { isEditorEnabled ?\n          <Editor\n              defaultValue={editorDefaultValue}\n              setDocumentContent={setDocumentContent}\n              notifyChange={addDialogueLine}\n              preferences={editorPreferences}\n           /> : undefined }\n        { isInterpreterEnabled ?\n           <Interpreter\n             content={editorDefaultValue}\n             currentBlock={currentBlock}\n             timeline={timeline}\n             shouldShowExtraMetadata={shouldShowExtraMetadata}\n             shouldShowDebugPane={shouldShowDebugPane}\n             singleBubblePresentation={singleBubblePresentation}\n             clydeDocument={clydeDocument}\n             setBlock={setBlock}\n             addDialogueLine={addDialogueLine}\n             clearTimeline={clearTimeline}\n             showExtraMetadata={showExtraMetadata}\n             hideExtraMetadata={hideExtraMetadata}\n             showDebugPane={showDebugPane}\n             hideDebugPane={hideDebugPane}\n             enableSingleBubbleDialogue={enableSingleBubbleDialogue}\n             disableSingleBubbleDialogue={disableSingleBubbleDialogue}\n             chooseOption={chooseOption}\n             events={events}\n             notifyEvent={notifyEvent}\n             clearEvents={clearEvents}\n         />: undefined }\n       </SplitPane>\n      { isEditorSettingsVisible ?\n        <EditorSettingsModal updatePreference={updateEditorPreference} preferences={editorPreferences} onCloseClick={() => setEditorSettingsVisibility(false)} />\n      : undefined }\n    </Wrapper>\n  );\n};\n\nMainPanels.propTypes = {\n  isEditorEnabled: PropTypes.bool,\n  isInterpreterEnabled: PropTypes.bool,\n  toggleProjectTree: PropTypes.func,\n  toggleEditor: PropTypes.func,\n  toggleInterpreter: PropTypes.func,\n  interpreterSplitDirection: PropTypes.string,\n  editorDefaultValue: PropTypes.string,\n  setDocumentContent: PropTypes.func,\n\n  currentBlock: PropTypes.string,\n  timeline: PropTypes.array,\n  shouldShowExtraMetadata: PropTypes.bool,\n  shouldShowDebugPane: PropTypes.bool,\n  singleBubblePresentation: PropTypes.bool,\n  clydeDocument: PropTypes.string,\n\n  setBlock: PropTypes.func,\n  addDialogueLine: PropTypes.func,\n  clearTimeline: PropTypes.func,\n  showExtraMetadata: PropTypes.func,\n  hideExtraMetadata: PropTypes.func,\n  showDebugPane: PropTypes.func,\n  hideDebugPane: PropTypes.func,\n  enableSingleBubbleDialogue: PropTypes.func,\n  disableSingleBubbleDialogue: PropTypes.func,\n\n  notifyEvent: PropTypes.func,\n  clearEvents: PropTypes.func,\n};\n\n","import { connect } from 'react-redux';\n\nimport MainPanels from './MainPanels';\n\nimport {\n  toggleEditor,\n  toggleInterpreter,\n  changeInterpreterSplitDirection\n} from '../redux/interface';\n\nimport {\n  setBlock,\n  addDialogueLine,\n  clearTimeline,\n  showExtraMetadata,\n  hideExtraMetadata,\n  showDebugPane,\n  hideDebugPane,\n  enableSingleBubbleDialogue,\n  disableSingleBubbleDialogue,\n  chooseOption,\n  notifyEvent,\n  clearEvents,\n} from '../redux/interpreter';\n\nimport {\n  setDocumentContent,\n  updatePreference\n} from '../redux/editor';\n\nconst mapStateToProps = (state, props) => ({\n  ...state.interfaceConfig,\n  editorDefaultValue: state.editor.currentValue,\n  editorPreferences: state.editor.preferences,\n  ...state.interpreter,\n  ...props\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleEditor: (state) => {\n    dispatch(toggleEditor({state}));\n  },\n  toggleInterpreter: (state) => {\n    dispatch(toggleInterpreter({state}));\n  },\n  changeInterpreterSplitDirection: (direction) => {\n    dispatch(changeInterpreterSplitDirection({direction}));\n  },\n  setBlock: (blockName) => {\n    dispatch(setBlock(blockName));\n  },\n  addDialogueLine: (line) => {\n    dispatch(addDialogueLine(line));\n  },\n  clearTimeline: () => {\n    dispatch(clearTimeline());\n  },\n  showExtraMetadata: () => {\n    dispatch(showExtraMetadata());\n  },\n  hideExtraMetadata: () => {\n    dispatch(hideExtraMetadata());\n  },\n  showDebugPane: () => {\n    dispatch(showDebugPane());\n  },\n  hideDebugPane: () => {\n    dispatch(hideDebugPane());\n  },\n  enableSingleBubbleDialogue: () => {\n    dispatch(enableSingleBubbleDialogue());\n  },\n  disableSingleBubbleDialogue: () => {\n    dispatch(disableSingleBubbleDialogue());\n  },\n  chooseOption: (optionIndex) => {\n    dispatch(chooseOption(optionIndex));\n  },\n  setDocumentContent: (content) => {\n    dispatch(setDocumentContent(content));\n  },\n  notifyEvent: (event) => {\n    dispatch(notifyEvent(event));\n  },\n  clearEvents: () => {\n    dispatch(clearEvents());\n  },\n  updateEditorPreference: (name, value) => {\n    dispatch(updatePreference({ name, value }));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainPanels);\n\n","export const APP_LOCAL_STORAGE_KEY = 'clyde_editor_data';\n\nexport const saveState =(state) => {\n  try {\n    localStorage.setItem(APP_LOCAL_STORAGE_KEY, JSON.stringify(state));\n  } catch (_e) {\n  }\n};\n\nexport const loadState = () => {\n  try {\n    const persistedSate = localStorage.getItem(APP_LOCAL_STORAGE_KEY);\n    if (persistedSate === null) {\n      return undefined;\n    }\n    return JSON.parse(persistedSate);\n  } catch (_e) {\n    return undefined;\n  }\n};\n\nexport const clearState = () => {\n  try {\n    localStorage.removeItem(APP_LOCAL_STORAGE_KEY);\n  } catch (_e) {\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { Provider } from 'react-redux';\n\nimport throttle from 'lodash/throttle';\n\nimport reducer from './redux/reducers';\nimport MainPanelsContainer from './screens/MainPanelsContainer';\n\nimport { loadState, saveState } from './storage/local-storage';\n\nconst load = () => {\n  const data = loadState() || { editor: {} };\n\n\n  if (!data.editor?.currentValue) {\n    data.editor.currentValue = `--\n--\n-- This is a sample dialogue.\n--\n\nNarrator: Hello there!\nPlayer: Hi!\nNarrator: What do you want to talk about?\n  + [Life]\n    -> about life <-\n  + [The universe]\n    -> about the universe <-\n  * [Everything else... #some_tag]\n    -> about everything else <-\n  + [Earth]\n    -> about earth <-\n  + [Nothing]\n    -> goodbye <-\n\n\n== about life\nPlayer: I want to talk about life!\nNarrator: Well! That's complicated...\n<-\n\n\n== about the universe\nPlayer: I want to talk about the universe!\n( shuffle\n  - Narrator: That's too complex!\n  - Narrator: Maybe another time.\n  - Narrator: It's big...\n              I think that's all.\n)\n<-\n\n\n== about everything else\nPlayer: What about everything else?\nNarrator: I don't have time for this... #bored\n<-\n\n== about earth\nPlayer: What do you know about earth?\n( sequence\n - Narrator: It's mostly harmless.\n - Narrator: This again?\n             I've already told you, mostly harmless.\n -\n   Narrator: Why do you want to know so much about it?\n   Player: I don't know...\n   Narrator: So.. don't ask!\n\n - Narrator: I'm not talking about this anymore.\n)\n<-\n\n== goodbye\n{ not alreadyIntroduced }\n  Narrator: It was nice to meet you!\n  Player: I can say the same. See you around!\n  { set alreadyIntroduced = true }\nPlayer: Bye!\nNarrator: Good bye!\n`;\n  }\n\n  return {\n    editor: data.editor,\n    interpreter: {\n      document: undefined,\n      events: [],\n      timeline: [],\n      ...data.interpreter\n    }\n  };\n};\n\nconst store = configureStore({\n  reducer,\n  devTools: process.env.NODE_ENV !== 'production',\n  preloadedState: load(),\n});\n\nstore.subscribe(throttle(() => {\n  const state = store.getState();\n  const {\n    shouldShowExtraMetadata,\n    shouldShowDebugPane,\n    debugPaneDirection,\n    singleBubblePresentation,\n  } = state.interpreter;\n\n  saveState({\n    editor: {\n      preferences: state.editor.preferences,\n      currentValue: state.editor.currentValue\n    },\n    interpreter: {\n      shouldShowExtraMetadata,\n      shouldShowDebugPane,\n      debugPaneDirection,\n      singleBubblePresentation,\n    },\n  });\n}, 1000));\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <MainPanelsContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","import App from './App';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  max-height: 100vh;\n  max-width: 1200px;\n  display: flex;\n  flex-direction: column;\n  padding: 10px 5px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h1`\n  font-size: 2em;\n  font-weight: 500;\n`;\n\nconst AboutBlock = styled.div`\n  font-family: 'Lato', sans-serif;\n  margin: 10px 40px;\n  p {\n    margin-bottom: 10px;\n  }\n\n  a {\n    margin: 5px 10px;\n  }\n`;\n\nconst AboutContent = styled.div`\n  margin-top: 30px;\n`;\n\nexport default function WebsiteApp() {\n  return (\n    <Wrapper>\n      <AboutBlock>\n        <Title>Clyde Dialogue Language</Title>\n        <AboutContent>\n          <p>\n            Clyde is a language for writing dialogues.\n            <a href=\"https://github.com/viniciusgerevini/clyde\">Github</a>\n            <a href=\"https://github.com/viniciusgerevini/clyde/blob/master/LANGUAGE.md\">Language Docs</a>\n            <a href=\"https://github.com/viniciusgerevini/clyde/tree/master/cli\">CLI</a>\n            <a href=\"https://github.com/viniciusgerevini/godot-clyde-dialogue\">Godot Plugin</a>\n          </p>\n        </AboutContent>\n\n      </AboutBlock>\n        <App/>\n    </Wrapper>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.css';\nimport './index.css';\n// import App from './App';\nimport App from './WebsiteApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}