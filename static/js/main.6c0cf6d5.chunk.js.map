{"version":3,"sources":["redux/interface.js","redux/editor.js","redux/interpreter.js","redux/reducers.js","screens/SplitPane.js","screens/DropdownMenu.js","editor/clyde-ace-mode.js","editor/Editor.js","../../interpreter/src/logic_interpreter.js","../../interpreter/src/memory.js","../../interpreter/src/events.js","../../parser/src/lexer.js","../../parser/src/nodes.js","../../parser/src/parser.js","interpreter/Bubbles.js","interpreter/InterpreterToolbar.js","interpreter/DialogueEntry.js","interpreter/InterpreterTimeline.js","interpreter/DebugPane.js","interpreter/Interpreter.js","../../interpreter/src/interpreter.js","screens/Modal.js","editor/EditorSettingsModal.js","screens/MainPanels.js","screens/MainPanelsContainer.js","storage/local-storage.js","App.js","WebsiteApp.js","index.js"],"names":["toggleEditor","createAction","toggleInterpreter","changeInterpreterSplitDirection","interfaceReducers","createReducer","isEditorEnabled","isInterpreterEnabled","interpreterSplitDirection","state","action","payload","direction","setDocumentContent","updatePreference","editorReducers","currentValue","preferences","theme","fontSize","tabSize","highlightActiveLine","lineWrap","useSoftTabs","showInvisibles","scrollPastEnd","vimMode","name","value","setBlock","addDialogueLine","clearTimeline","showExtraMetadata","hideExtraMetadata","showDebugPane","hideDebugPane","enableSingleBubbleDialogue","disableSingleBubbleDialogue","chooseOption","notifyEvent","clearEvents","interpreterReducers","currentBlock","undefined","timeline","shouldShowExtraMetadata","shouldShowDebugPane","singleBubblePresentation","document","events","_action","length","type","selected","combineReducers","interfaceConfig","editor","interpreter","Wrapper","styled","div","props","Gutter","SplitPane","defaultSizes","style","children","Array","isArray","visibleChildren","filter","item","sizes","map","s","spaceUsed","reduce","acc","index","indexOf","lastIndex","size","Math","floor","fill","calculateSizes","panes","visibleIndex","push","React","cloneElement","key","flexBasis","flexGrow","ItemWrapper","DropDownMenu","onClick","Children","toArray","DropDownItem","label","icon","text","aria-label","ClydeHighlightRules","literals","token","regex","logicalOperators","logicBlockEnd","next","logicBlockConstants","identifiers","this","$rules","logicBlock","assignmentBlock","eventBlock","normalizeRules","EditorWrapper","defaultConfig","Editor","defaultValue","notifyChange","useResizeObserver","ref","width","height","mode","onBeforeLoad","ace","define","acequire","exports","oop","TextHighlightRules","inherits","TextMode","Mode","HighlightRules","ClydeMode","$id","lineCommentStart","getNextLineIndent","line","tab","indent","$getIndent","tokens","getTokenizer","getLineTokens","match","onChange","editorProps","$blockScrolling","debounceChangePeriod","keyboardHandler","setOptions","showPrintMargin","wrapBehavioursEnabled","wrap","navigateWithinSoftTabs","LogicInterpreter","mem","expressionHandlers","cond","getNodeValue","elements","checkCondition","Error","conditionHandlers","condition","checkExpression","checkVariable","operationHandlers","setVariable","getVariable","_n","_v","a","operation","nodeValueHandlers","node","handleAssignement","assignment","variable","source","SPECIAL_VARIABLE_NAMES","Memory","listeners","init","access","variables","internal","setAsAccessed","id","wasAlreadyAccessed","includes","getInternalVariable","triggerEvent","VARIABLE_CHANGED","previousValue","setInternalVariable","getAll","load","data","clear","EVENT_TRIGGERED","Events","forEach","l","addListener","callback","removeListener","splice","TOKENS","MODES","tokenFriendlyHint","getTokenFriendlyHint","hint","tokenize","input","position","column","pendingTokens","modes","stackMode","unshift","popMode","shift","isCurrentMode","checkSequence","string","initialPosition","slice","handleQText","initialLine","initialColumn","currentChar","Token","join","trim","optionTypes","keywords","handleLogicDescriptiveOperator","toLowerCase","handleLogicOperator","createSimpleToken","handleLogicBlock","handleLogicString","linebreak","getFollowingLineBreak","handleLogicBlockStop","handleLogicNot","values","handleLogicNumber","handleLogicIdentifier","lookupPosition","lookupColumn","getLeadingLineBreak","getNextToken","handleComments","handleLineBreaks","indentation","previousIndent","handleIndent","handleLogicBlockStart","response","handleSpace","handleStartVariations","handleStopVariations","handleBlock","handleDivert","handleDivertToParent","handleVariationItem","handleOption","handleBrackets","handleLineId","handleTag","handleText","concat","DocumentNode","content","blocks","ContentNode","LineNode","speaker","tags","DivertNode","target","VariableNode","LiteralNode","ConditionalContentNode","conditions","ActionContentNode","ExpressionNode","AssignmentNode","EventNode","variationsModes","operators","precedence","associative","assignmentOperators","parse","doc","currentToken","lookaheadTokens","isMultilineEnabled","wrongTokenError","expected","consume","lookahead","peek","offset","Blocks","blockName","Lines","lines","acceptableNext","tk","Line","LineWithAction","Options","Divert","Variations","ConditionalLine","DialogueLine","LineWithSpeaker","TextLine","LineWithMetadata","options","nextLine","LineWithId","LineWithTags","Option","optionType","mainItem","root","wrapper","useFirstLineAsDisplayOnly","block","NestedLogicBlocks","LogicBlock","divert","variations","VariationsNode","startsNextLine","lastVariation","expression","LogicElement","Assignments","Condition","assignments","AssignmentExpression","AssignmentsNode","EventsNode","Expression","Object","keys","minPrecedence","operatorTokens","lhs","Operand","operator","nextMinPrecedence","rhs","Operator","Number","StringLiteralNode","BooleanLiteralNode","labels","result","Document","InfoBubble","ErrorBubble","InterpreterToolbarWrapper","IconWrapper","span","InterpreterToolbar","properties","dialogue","useState","isMenuVisible","setMenuVisibility","toggleMenu","forwardToNextOption","getContent","BlockList","onBlockSelected","start","faRedoAlt","title","faFastForward","faGhost","poltergeist","optionList","choice","random","choose","faHandSparkles","clearData","faComments","faComment","faCog","faReceipt","faBug","list","b","event","option","DialogueBubble","DialogueContent","DialogueSpeaker","DialogueOptionsList","ol","DialogueOption","li","p","optionSelected","DialogueMetadataWrapper","DialogueEntry","onSelection","showMetadata","DialogueOptions","DialogueMetadata","isVisible","e","stopPropagation","select","InterpreterScreenWrapper","InterpreterTimeline","scrollableRef","useRef","useEffect","current","scrollIntoView","behavior","DebugPaneWrapper","DebugPaneCloseButton","DebugEntryTable","table","DebugPane","entries","identifier","record","eventTime","formatDate","timestamp","date","Date","getFullYear","getMonth","getDate","toLocaleTimeString","faTimes","entry","toString","Interpreter","errorMessage","debugPaneDirection","clydeDocument","lastContent","setLastContent","persistedDialogue","setDialogue","updateDebugInfo","now","stack","textDictionary","anchors","logic","_index","initializeStack","contentIndex","nodeHandlers","handleDocumentNode","handleContentNode","handleOptionsNode","handleOptionNode","handleLineNode","handleActionContent","fallback","handleConditionalContent","handleVariations","handleBlockNode","handleAssignementNode","handleEventNode","variationHandlers","SHUFFLE_VISITED_KEY","LAST_VISITED_KEY","visitedItems","remainingOptions","handleNextNode","generateIndex","stackHead","addToStack","contentNode","pop","optionsNode","getVisibleOptions","selectOption","replaceVariables","translateText","t","_optionNode","attempt","c","lineNode","actionNode","handleAction","conditionalNode","fallbackNode","prepareOption","replace","on","eventName","off","getData","loadData","loadDictionary","dictionary","ClydeInterpreter","message","backgroundColor","ModalWrapper","ModalInnerWrapper","ModalHeader","ModalFooter","ModalContent","ModalAction","button","Modal","actions","Preference","EditorSettingsModal","onCloseClick","update","checked","updateNumber","htmlFor","max","min","Header","connect","editorDefaultValue","editorPreferences","dispatch","optionIndex","updateEditorPreference","isEditorSettingsVisible","setEditorSettingsVisibility","faColumns","faCode","faEye","faSlidersH","APP_LOCAL_STORAGE_KEY","store","configureStore","reducer","devTools","process","preloadedState","persistedSate","localStorage","getItem","JSON","_e","loadState","subscribe","throttle","getState","setItem","stringify","saveState","App","MainPanelsContainer","Title","h1","AboutBlock","AboutContent","WebsiteApp","href","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6c0cf6d5.chunk.js","sourcesContent":["import { createAction, createReducer } from \"@reduxjs/toolkit\";\n\nexport const toggleEditor = createAction('editor/interface/toggle_editor');\nexport const toggleInterpreter = createAction('editor/interface/toggle_intepreter');\nexport const changeInterpreterSplitDirection = createAction('editor/interface/change_interpreter_split_direction');\n\nexport function createEmptyState() {\n  return {\n    isEditorEnabled: true,\n    isInterpreterEnabled: true,\n    interpreterSplitDirection: 'vertical'\n  };\n}\n\nconst toggleEditorReducer = (state, action) => {\n  state.isEditorEnabled = action.payload.state;\n  return state;\n};\n\nconst toggleInterpreterReducer = (state, action) => {\n  state.isInterpreterEnabled = action.payload.state;\n  return state;\n};\n\nconst changeInterpreterSplitDirectionReducer = (state, action) => {\n  state.interpreterSplitDirection = action.payload.direction;\n  return state;\n};\n\nconst interfaceReducers = createReducer(createEmptyState(), {\n  [toggleEditor]: toggleEditorReducer,\n  [toggleInterpreter]: toggleInterpreterReducer,\n  [changeInterpreterSplitDirection]: changeInterpreterSplitDirectionReducer,\n});\n\nexport default interfaceReducers;\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\n\nexport const setDocumentContent = createAction('editor/editor/set_document_content');\nexport const updatePreference = createAction('editor/editor/update_preference');\n\nexport function createEmptyState() {\n  return {\n    currentValue: '',\n    preferences: {\n      theme: 'dracula',\n      fontSize: 16,\n      tabSize: 4,\n      highlightActiveLine: false,\n      lineWrap: false,\n      useSoftTabs: true,\n      showInvisibles: false,\n      scrollPastEnd: false,\n      vimMode: false,\n    }\n  };\n}\n\nconst setDocumentContentReducer = (state, action) => {\n  state.currentValue = action.payload;\n  return state;\n};\n\nconst updatePreferenceReducer = (state, action) => {\n  state.preferences[action.payload.name] = action.payload.value;\n  return state;\n};\n\nconst editorReducers = createReducer(createEmptyState(), {\n  [setDocumentContent]: setDocumentContentReducer,\n  [updatePreference]: updatePreferenceReducer,\n});\n\nexport default editorReducers;\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\n\nexport const setBlock = createAction('editor/interpreter/set_dialogue_block');\nexport const addDialogueLine = createAction('editor/interpreter/add_dialogue_line');\nexport const clearTimeline = createAction('editor/interpreter/clear_timeline');\nexport const showExtraMetadata = createAction('editor/interpreter/show_metadata');\nexport const hideExtraMetadata = createAction('editor/interpreter/hide_metadata');\nexport const showDebugPane = createAction('editor/interpreter/show_debug_pane');\nexport const hideDebugPane = createAction('editor/interpreter/hide_debug_pane');\nexport const enableSingleBubbleDialogue = createAction('editor/interpreter/enable_single_bubble_dialogue');\nexport const disableSingleBubbleDialogue = createAction('editor/interpreter/disable_single_bubble_dialogue');\nexport const chooseOption = createAction('editor/interpreter/choose_option');\nexport const notifyEvent = createAction('editor/interpreter/notify_event');\nexport const clearEvents = createAction('editor/interpreter/clear_events');\n\n\nexport function createEmptyState() {\n  return {\n    currentBlock: undefined,\n    timeline: [],\n    shouldShowExtraMetadata: false,\n    shouldShowDebugPane: false,\n    singleBubblePresentation: false,\n    document: undefined,\n    events: []\n  };\n}\n\nconst setBlockReducer = (state, action) => {\n  state.currentBlock = action.payload;\n  return state;\n};\n\nconst addDialogueLineReducer = (state, action) => {\n  state.timeline = [...state.timeline, action.payload];\n  return state;\n};\n\nconst clearTimelineReducer = (state, _action) => {\n  state.timeline = [];\n  return state;\n};\n\nconst showExtraMetadataReducer = (state) => {\n  state.shouldShowExtraMetadata = true;\n  return state;\n};\n\nconst hideExtraMetadataReducer = (state) => {\n  state.shouldShowExtraMetadata = false;\n  return state;\n};\n\nconst showDebugPaneReducer = (state) => {\n  state.shouldShowDebugPane = true;\n  return state;\n};\n\nconst hideDebugPaneReducer = (state) => {\n  state.shouldShowDebugPane = false;\n  return state;\n};\n\nconst enableSingleBubbleDialogueReducer = (state) => {\n  state.singleBubblePresentation = true;\n  return state;\n};\n\nconst disableSingleBubbleDialogReducer = (state) => {\n  state.singleBubblePresentation = false;\n  return state;\n};\n\nconst chooseOptionReducer = (state, action) => {\n  if (!state.timeline.length || state.timeline[state.timeline.length -1].type !== 'options') {\n    return state;\n  }\n  state.timeline[state.timeline.length -1].selected = action.payload;\n  return state;\n};\n\nconst notifyEventReducer = (state, action) => {\n  state.events = [...state.events, action.payload];\n  return state;\n};\n\nconst clearEventsReducer = (state, _action) => {\n  state.events = [];\n  return state;\n};\n\nconst interpreterReducers = createReducer(createEmptyState(), {\n  [setBlock]: setBlockReducer,\n  [addDialogueLine]: addDialogueLineReducer,\n  [clearTimeline]: clearTimelineReducer,\n  [showExtraMetadata]: showExtraMetadataReducer,\n  [hideExtraMetadata]: hideExtraMetadataReducer,\n  [showDebugPane]: showDebugPaneReducer,\n  [hideDebugPane]: hideDebugPaneReducer,\n  [enableSingleBubbleDialogue]: enableSingleBubbleDialogueReducer,\n  [disableSingleBubbleDialogue]: disableSingleBubbleDialogReducer,\n  [chooseOption]: chooseOptionReducer,\n  [notifyEvent]: notifyEventReducer,\n  [clearEvents]: clearEventsReducer,\n});\n\nexport default interpreterReducers;\n","import { combineReducers } from 'redux';\nimport interfaceConfig from './interface';\nimport editor from './editor';\nimport interpreter from './interpreter';\n\nexport default combineReducers({\n  interfaceConfig,\n  editor,\n  interpreter\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst GUTTER_SIZE = 4;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: stretch;\n  flex-grow: 1;\n  height: auto;\n  flex-direction: ${props => props.direction === 'horizontal' ? 'column' : 'row' };\n  max-height: 100%;\n`;\n\nconst Gutter = styled.div`\n  background-color: #eee;\n  background-repeat: no-repeat;\n  background-position: 50%;\n  flex-basis: ${GUTTER_SIZE}px;\n  cursor: ${props => props.direction === 'horizontal' ? 'row-resize' : 'col-resize' };\n`;\n// TODO\n// - gutter drag resize\n// - make sure sizes are kept when items disappear\n\nexport default function SplitPane(props) {\n  const {\n    direction = 'vertical',\n    defaultSizes,\n    style\n  } = props;\n\n  const children = Array.isArray(props.children) ? props.children : [props.children];\n\n  const visibleChildren = children.filter(item => item && item !== '');\n\n  const calculateSizes = () => {\n    if (visibleChildren.length === 1) {\n      return ['100%'];\n    }\n\n    if (defaultSizes) {\n      let sizes = defaultSizes.map(s => `calc(${s}% - 2px)`);\n      if (defaultSizes.length === visibleChildren.length) {\n        return sizes;\n      }\n\n      const spaceUsed = visibleChildren.reduce((acc, item) => {\n        const index = children.indexOf(item);\n        return acc + defaultSizes[index];\n      }, 0);\n\n      if (spaceUsed < 100) {\n        const lastIndex = children.indexOf(visibleChildren[visibleChildren.length - 1]);\n        sizes[lastIndex] = `calc(${defaultSizes[lastIndex] + (100 - spaceUsed)}% - 2px)`\n      }\n\n      return sizes;\n    }\n\n    const size = Math.floor(100 / visibleChildren.length);\n    return Array(children.length).fill(`calc(${size}% - 2px)`);\n  };\n\n  const sizes = calculateSizes();\n\n  const panes = children.reduce((acc, item, index) => {\n    // console.log(item);\n    if (!item) {\n      return acc;\n    }\n\n    const visibleIndex = visibleChildren.indexOf(item);\n\n    if (visibleIndex > 0 && visibleIndex < (visibleChildren.length)) {\n      acc.push(<Gutter direction={direction}/>);\n    }\n\n    acc.push(React.cloneElement(item, {key: index, style: { flexBasis: sizes[index], flexGrow: 1}}));\n\n    return acc;\n  }, []);\n\n  return (\n    <Wrapper direction={direction} style={style}>\n      {panes.map((item, key) => React.cloneElement(item, {key}))}\n    </Wrapper>\n  );\n};\n\nSplitPane.propTypes = {\n  direction: PropTypes.string,\n  defaultSizes: PropTypes.array\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  display: 'flex';\n  flex-direction: column;\n  width: auto;\n  min-width: 230px;\n  z-index: 9999;\n  background-color: #fff;\n  font-size: 1rem;\n  padding: 10px 0px;\n  border: 1px solid #eee;\n  border-radius: 5px;\n`;\n\nconst ItemWrapper = styled.div`\n  padding: 6px 15px;\n  display: flex;\n  flex-direction: row;\n\n  &:hover {\n    background-color: #eee;\n  }\n\n  > svg {\n    flex-basis: 30px;\n    margin-right: 5px;\n  }\n`;\n\nexport default function DropDownMenu(props) {\n  const {\n    children,\n    onClick,\n    style\n  } = props;\n\n  return (\n    <Wrapper onClick={onClick} style={style}>\n      {React.Children.toArray(children)}\n    </Wrapper>\n  );\n};\n\nexport function DropDownItem(props) {\n  const {\n    label,\n    icon,\n    onClick,\n    text\n  } = props;\n\n  return (\n    <ItemWrapper\n      aria-label={label}\n      onClick={onClick}\n    >\n      <FontAwesomeIcon icon={icon}/> {text}\n    </ItemWrapper>\n  );\n}\n","export default function setupClydeMode(ace) {\n\n  ace.define('ace/mode/clyde_highlight_rules', ['require', 'exports', 'ace/lib/oop', 'ace/mode/text_highlight_rules'], (acequire, exports) => {\n    const oop = acequire('ace/lib/oop');\n    const TextHighlightRules = acequire('ace/mode/text_highlight_rules').TextHighlightRules;\n\n\n    oop.inherits(ClydeHighlightRules, TextHighlightRules);\n\n    exports.ClydeHighlightRules = ClydeHighlightRules;\n  });\n\n  ace.define('ace/mode/clyde', ['require', 'exports', 'ace/lib/oop', 'ace/mode/text', 'ace/mode/clyde_highlight_rules'], (acequire, exports) => {\n    const oop = acequire('ace/lib/oop');\n    const TextMode = acequire('ace/mode/text').Mode;\n    const HighlightRules = acequire('ace/mode/clyde_highlight_rules').ClydeHighlightRules;\n\n    const ClydeMode = function ClydeMode() {\n      this.$id = \"ace/mode/clyde\"\n      this.HighlightRules = HighlightRules;\n      this.lineCommentStart = '--';\n\n      this.getNextLineIndent = function(state, line, tab) {\n        let indent = this.$getIndent(line);\n\n        const { tokens } = this.getTokenizer().getLineTokens(line, state);\n\n        if (tokens.length && tokens[tokens.length-1].type === 'comment') {\n          return indent;\n        }\n\n        if (state === \"start\") {\n          const match = line.match(/^\\s*(\\(|\\*|\\+)/);\n          if (match) {\n            indent += tab;\n          }\n        }\n\n        return indent;\n      };\n    };\n\n    oop.inherits(ClydeMode, TextMode); // ACE's way of doing inheritance\n\n    exports.Mode = ClydeMode;\n  });\n};\n\n\n\nfunction ClydeHighlightRules() {\n  // regexp must not have capturing parentheses. Use (?:) instead.\n  // regexps are ordered -> the first match is used\n  const literals = [\n    { // boolean\n      token : 'constant.language.boolean',\n      regex : /(true|false)/,\n    },\n    { // numbers\n      token : 'constant.numeric',\n      regex : /[0-9,.]+/,\n    },\n    { // string\n      token : 'constant.string',\n      regex : /(\".*\")/,\n    },\n  ];\n\n  const logicalOperators = [\n    { // operators\n      token : 'keyword.operator',\n      regex : /(isnt|ISNT)/,\n    },\n    { // operators\n      token : 'keyword.operator',\n      regex : /(and|or|not|is|AND|OR|NOT|IS)/,\n    },\n    { // operators\n      token : 'keyword.operator',\n      regex : /(&&|\\|\\||<=|>=|==|!=)/,\n    },\n    { // operators\n      token : 'keyword.operator',\n      regex : /(\\*|\\+|-|\\^|\\/|%|<|>|!)/,\n    },\n  ]\n\n  const assignmentOperators = [\n    { // operators\n      token : 'keyword.operator',\n      regex : /(\\+=|-=|\\*=|\\/=|%=|\\^=)/,\n    },\n    { // operators\n      token : 'keyword.operator',\n      regex : /(=)/,\n    },\n  ];\n\n  const logicBlockEnd = [\n    { // assignment block end\n      token : 'keyword',\n      regex : /(\\})/,\n      next: 'start'\n    },\n  ];\n\n  const logicBlockConstants = [\n    {\n      token : 'support.constant',\n      regex : /OPTIONS_COUNT/\n    },\n  ];\n\n  const identifiers = [\n    {\n      token : 'identifier',\n      regex : /[a-zA-Z_][a-zA-Z0-9_]+/\n    },\n  ];\n\n\n  this.$rules = {\n    \"start\" : [\n      {\n        token : 'comment',\n        regex : /^\\s*--.*$/\n      },\n\n      { // Block definition\n        token : [\"keyword\", \"text\", \"variable\"],\n        regex : /^(==)(\\s*)([a-zA-Z0-9_ ]+)$/\n      },\n\n      { // Divert to end\n        token : [\"text\", \"keyword\", \"text\", \"support.constant\"],\n        regex : /(\\s*)(->)(\\s*)(END)$/\n      },\n\n      { // Divert\n        token : [\"text\", \"keyword\", \"text\", \"variable\"],\n        regex : /(\\s*)(->)(\\s*)([a-zA-Z0-9_ ]+)/\n      },\n\n      { // Divert to parent\n        token : [\"text\", \"keyword\", \"text\"],\n        regex : /(\\s*)(<-)(\\s*)/\n      },\n\n      { // Variations start\n        token : [\"text\", \"keyword\", \"text\", \"support.constant\"],\n        regex : /^(\\s*)(\\()(\\s*)((?:shuffle|once|sequence|shuffle once|shuffle sequence)*)$/\n      },\n\n      { // Variations end\n        token : [\"text\", \"keyword\"],\n        regex : /^(\\s*)(\\))$/\n      },\n\n      { // option\n        token : \"keyword.control\",\n        regex : /^(\\s*[*+>])/\n      },\n\n      { // Logic block start\n        token : \"keyword\",\n        regex : /(\\{)/,\n        next: 'logicBlock'\n      },\n\n      { // tag block\n        token : 'constant.string',\n        regex : /#[a-zA-Z0-9_]+/\n      },\n\n      { // Line\n        token : ['variable', 'text', 'variable'],\n        regex: /((?:\\s*[a-zA-Z0-9_] +:)?\\s*)(\".*\")((?:\\$[a-zA-Z0-9_]+)?)/,\n      },\n      { // Line\n        token : ['variable', 'text', 'variable'],\n        regex: /((?:\\s*[a-zA-Z0-9_ ]+:)?\\s*)([^\\r\\n#${]+)((?:\\$[a-zA-Z0-9_]+)?)/,\n      }\n    ],\n    logicBlock: [\n      { // assignment block start\n        token : 'keyword.control',\n        regex : /(set)/,\n        next: 'assignmentBlock'\n      },\n      { // event block start\n        token : 'keyword.control',\n        regex : /(trigger)/,\n        next: 'eventBlock'\n      },\n      { // event block start\n        token : 'keyword.control',\n        regex : /(when)/,\n      },\n      ...logicBlockConstants,\n      ...logicalOperators,\n      ...literals,\n      ...identifiers,\n      ...logicBlockEnd\n    ],\n    assignmentBlock: [\n      ...logicBlockConstants,\n      ...logicalOperators,\n      ...assignmentOperators,\n      ...literals,\n      ...identifiers,\n      ...logicBlockEnd\n    ],\n    eventBlock: [\n      ...identifiers,\n      ...logicBlockEnd\n    ],\n  };\n\n  this.normalizeRules();\n}\n","import React from \"react\";\nimport AceEditor from \"react-ace\";\nimport useResizeObserver from \"use-resize-observer\";\nimport styled from 'styled-components';\n\nimport \"ace-builds/src-noconflict/theme-dracula\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport \"ace-builds/src-noconflict/theme-tomorrow_night_eighties\";\nimport \"ace-builds/src-noconflict/theme-textmate\";\n\nimport \"ace-builds/src-noconflict/keybinding-vim\";\n\nimport ClydeMode from './clyde-ace-mode';\n\nconst EditorWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst defaultConfig = {\n  theme: 'dracula',\n  fontSize: 16,\n  tabSize: 4,\n  highlightActiveLine: false,\n  lineWrap: false,\n  useSoftTabs: true,\n  showInvisibles: false,\n  scrollPastEnd: false\n};\n\nexport default function Editor({ defaultValue, setDocumentContent, notifyChange, preferences = defaultConfig, ...props}) {\n  const { ref, width = 500, height = 500 } = useResizeObserver();\n\n  const onBeforeLoad = (editor) => {\n    ClydeMode(editor);\n  };\n\n  const onChange = (value) => {\n    setDocumentContent(value);\n    if (value !== defaultValue) {\n      notifyChange({ text: '<DIALOGUE_CHANGED>'});\n    }\n  };\n\n  return (\n    <EditorWrapper ref={ref} {...props} aria-label=\"Text editor\">\n      <AceEditor\n        defaultValue={defaultValue}\n        mode=\"clyde\"\n        theme={preferences.theme}\n        onBeforeLoad={onBeforeLoad}\n        onChange={onChange}\n        name=\"mainEditor\"\n        width={`${width}px`}\n        height={`${height}px`}\n        editorProps={{ $blockScrolling: true }}\n        fontSize={preferences.fontSize}\n        tabSize={preferences.tabSize}\n        debounceChangePeriod={1000}\n        keyboardHandler={preferences.vimMode ? 'vim' : undefined}\n        highlightActiveLine={preferences.highlightActiveLine}\n        setOptions={{\n          showPrintMargin: false,\n          wrapBehavioursEnabled: preferences.lineWrap,\n          wrap: preferences.lineWrap,\n          useSoftTabs: preferences.useSoftTabs,\n          showInvisibles: preferences.showInvisibles,\n          scrollPastEnd: preferences.scrollPastEnd,\n          navigateWithinSoftTabs: true,\n        }}\n      />\n    </EditorWrapper>\n  );\n}\n","export const LogicInterpreter = (mem) => {\n  const SPECIAL_VARIABLE_NAMES = [ 'OPTIONS_COUNT' ];\n\n  const expressionHandlers = {\n    'equal': cond => getNodeValue(cond.elements[0]) === getNodeValue(cond.elements[1]),\n    'not_equal': cond => getNodeValue(cond.elements[0]) !== getNodeValue(cond.elements[1]),\n    'greater_than': cond => getNodeValue(cond.elements[0]) > getNodeValue(cond.elements[1]),\n    'greater_or_equal': cond => getNodeValue(cond.elements[0]) >= getNodeValue(cond.elements[1]),\n    'less_than': cond => getNodeValue(cond.elements[0]) < getNodeValue(cond.elements[1]),\n    'less_or_equal': cond => getNodeValue(cond.elements[0]) <= getNodeValue(cond.elements[1]),\n    'and': cond => checkCondition(cond.elements[0]) && checkCondition(cond.elements[1]),\n    'or': cond => checkCondition(cond.elements[0]) || checkCondition(cond.elements[1]),\n    'not': cond => !checkCondition(cond.elements[0]),\n    'mult': cond => getNodeValue(cond.elements[0]) * getNodeValue(cond.elements[1]),\n    'div': cond => getNodeValue(cond.elements[0]) / getNodeValue(cond.elements[1]),\n    'sub': cond => getNodeValue(cond.elements[0]) - getNodeValue(cond.elements[1]),\n    'add': cond => getNodeValue(cond.elements[0]) + getNodeValue(cond.elements[1]),\n    'pow': cond => getNodeValue(cond.elements[0]) ** getNodeValue(cond.elements[1]),\n    'mod': cond => getNodeValue(cond.elements[0]) % getNodeValue(cond.elements[1]),\n    'error': cond => { throw new Error(`Unknown expression \"${cond.name}\"`) }\n  };\n\n  const conditionHandlers = {\n    'expression': condition => checkExpression(condition),\n    'variable': condition => checkVariable(condition),\n    'error': condition => { throw new Error(`Unknown condition type \"${condition.type}\"`) }\n  };\n\n  const operationHandlers = {\n    'assign': (name, value) => mem.setVariable(name, value),\n    'assign_sum': (name, value) => mem.setVariable(name, mem.getVariable(name) + value),\n    'assign_sub': (name, value) => mem.setVariable(name, mem.getVariable(name) - value),\n    'assign_mult': (name, value) => mem.setVariable(name, mem.getVariable(name) * value),\n    'assign_div': (name, value) => mem.setVariable(name, mem.getVariable(name) / value),\n    'assign_pow': (name, value) => mem.setVariable(name, mem.getVariable(name) ** value),\n    'assign_mod': (name, value) => mem.setVariable(name, mem.getVariable(name) % value),\n    'error': (_n, _v, a) => { throw new Error(`Unknown operation \"${a.operation}\"`) }\n  };\n\n  const nodeValueHandlers = {\n    'literal': node => node.value,\n    'variable': node => mem.getVariable(node.name),\n    'assignment': node => handleAssignement(node),\n    'expression': node => checkExpression(node),\n    'error': node => { throw new Error(`Unknown node \"${node.type}\"`) }\n  };\n\n  const handleAssignement = (assignment) => {\n    const variable = assignment.variable;\n    const source = assignment.value;\n    const value = getNodeValue(source);\n\n    return (operationHandlers[assignment.operation] || operationHandlers['error'])(variable.name, value, assignment);\n  };\n\n  const getNodeValue = (source) =>\n    (nodeValueHandlers[source.type] || nodeValueHandlers['error'])(source);\n\n  const checkCondition = (condition) =>\n    (conditionHandlers[condition.type] || conditionHandlers['error'])(condition);\n\n  const checkExpression = (condition) =>\n    (expressionHandlers[condition.name] || expressionHandlers['error'])(condition);\n\n  const checkVariable = (variable) => mem.getVariable(variable.name);\n\n  return {\n    checkCondition,\n    handleAssignement,\n    SPECIAL_VARIABLE_NAMES\n  };\n};\n\n","const SPECIAL_VARIABLE_NAMES = [ 'OPTIONS_COUNT' ];\n\nexport function Memory(listeners, init) {\n  let mem = init || {\n    access: {},\n    variables: {},\n    internal: {}\n  };\n\n  return {\n    setAsAccessed(id) {\n      mem.access[id] = true;\n    },\n\n    wasAlreadyAccessed(id) {\n      return !!mem.access[id];\n    },\n\n    getVariable(id, defaultValue) {\n      if (SPECIAL_VARIABLE_NAMES.includes(id)) {\n        return this.getInternalVariable(id, defaultValue);\n      }\n\n      const value = mem.variables[id];\n      if (value === undefined) {\n        return defaultValue;\n      }\n      return value;\n    },\n\n    setVariable(id, value) {\n      listeners.triggerEvent(listeners.events.VARIABLE_CHANGED, { name: id, value, previousValue: mem.variables[id] });\n      return mem.variables[id] = value;\n    },\n\n    setInternalVariable(id, value) {\n      return mem.internal[id] = value;\n    },\n\n    getInternalVariable(id, defaultValue) {\n      const value = mem.internal[id];\n      if (value === undefined) {\n        return defaultValue;\n      }\n      return value;\n    },\n\n    getAll() {\n      return mem;\n    },\n\n    load(data) {\n      mem = data;\n    },\n\n    clear() {\n      mem = {\n        access: {},\n        variables: {},\n        internal: {}\n      };\n    },\n  };\n};\n\n","export const events = {\n  VARIABLE_CHANGED: 'variable_changed',\n  EVENT_TRIGGERED: 'event_triggered'\n};\n\nexport function Events() {\n  const listeners = {\n    [events.VARIABLE_CHANGED]: [],\n    [events.EVENT_TRIGGERED]: [],\n  };\n\n  return {\n    events,\n    triggerEvent(name, data) {\n      listeners[name].forEach(l => l(data));\n    },\n    addListener(name, callback) {\n      listeners[name].push(callback);\n      return callback;\n    },\n    removeListener(name, callback) {\n      const index = listeners[name].indexOf(callback);\n      if (index === -1) {\n        throw new Error('Listener not defined');\n      }\n      listeners[name].splice(index, 1);\n    }\n  }\n}\n","export const TOKENS = {\n  TEXT: 'TEXT',\n  INDENT: 'INDENT',\n  DEDENT: 'DEDENT',\n  OPTION: 'OPTION',\n  STICKY_OPTION: 'STICKY_OPTION',\n  FALLBACK_OPTION: 'FALLBACK_OPTION',\n  SQR_BRACKET_OPEN: 'SQR_BRACKET_OPEN',\n  SQR_BRACKET_CLOSE: 'SQR_BRACKET_CLOSE',\n  BRACKET_OPEN: 'BRACKET_OPEN',\n  BRACKET_CLOSE: 'BRACKET_CLOSE',\n  EOF: 'EOF',\n  SPEAKER: 'SPEAKER',\n  LINE_ID: 'LINE_ID',\n  TAG: 'TAG',\n  BLOCK: 'BLOCK',\n  DIVERT: 'DIVERT',\n  DIVERT_PARENT: 'DIVERT_PARENT',\n  VARIATIONS_MODE: 'VARIATIONS_MODE',\n  MINUS: '-',\n  PLUS: '+',\n  MULT: '*',\n  DIV: '/',\n  POWER: '^',\n  MOD: '%',\n  BRACE_OPEN: '{',\n  BRACE_CLOSE: '}',\n  AND: 'AND',\n  OR: 'OR',\n  NOT:'NOT',\n  EQUAL: '==, is',\n  NOT_EQUAL: '!=, isnt',\n  GE: '>=',\n  LE: '<=',\n  GREATER: 'GREATER',\n  LESS: 'LESS',\n  NUMBER_LITERAL: 'number',\n  NULL_TOKEN: 'null',\n  BOOLEAN_LITERAL: 'boolean',\n  STRING_LITERAL: 'string',\n  IDENTIFIER: 'identifier',\n  KEYWORD_SET: 'set',\n  KEYWORD_TRIGGER: 'trigger',\n  KEYWORD_WHEN: 'when',\n  ASSIGN: '=',\n  ASSIGN_SUM: '+=',\n  ASSIGN_SUB: '-=',\n  ASSIGN_DIV: '/=',\n  ASSIGN_MULT: '*=',\n  ASSIGN_POW: '^=',\n  ASSIGN_MOD: '%=',\n  COMMA: ',',\n  LINE_BREAK: 'line break',\n}\n\nconst MODES = {\n  DEFAULT: 'DEFAULT',\n  OPTION: 'OPTION',\n  QSTRING: 'QSTRING',\n  LOGIC: 'LOGIC',\n  VARIATIONS: 'VARIATIONS',\n};\n\nconst tokenFriendlyHint = {\n  [TOKENS.TEXT]: 'text',\n  [TOKENS.INDENT]: 'INDENT',\n  [TOKENS.DEDENT]: 'DEDENT',\n  [TOKENS.OPTION]: '*',\n  [TOKENS.STICKY_OPTION]: '+',\n  [TOKENS.FALLBACK_OPTION]: '>',\n  [TOKENS.SQR_BRACKET_OPEN]: '[',\n  [TOKENS.SQR_BRACKET_CLOSE]: ']',\n  [TOKENS.BRACKET_OPEN]: '(',\n  [TOKENS.BRACKET_CLOSE]: ')',\n  [TOKENS.EOF]: 'EOF',\n  [TOKENS.SPEAKER]: '<speaker name>:',\n  [TOKENS.LINE_ID]: '$id',\n  [TOKENS.TAG]: '#tag',\n  [TOKENS.BLOCK]: '== <block name>',\n  [TOKENS.DIVERT]: '-> <target name>',\n  [TOKENS.DIVERT_PARENT]: '<-',\n  [TOKENS.VARIATIONS_MODE]: '<variations mode>',\n  [TOKENS.BRACE_OPEN]: '{',\n  [TOKENS.BRACE_CLOSE]: '}',\n  [TOKENS.AND]: '&&, and',\n  [TOKENS.OR]: '||, or',\n  [TOKENS.NOT]:' not, !',\n  [TOKENS.EQUAL]: '==, is',\n  [TOKENS.NOT_EQUAL]: '!=, isnt',\n  [TOKENS.GE]: '>=',\n  [TOKENS.LE]: '<=',\n  [TOKENS.GREATER]: '>',\n  [TOKENS.LESS]: '<',\n}\n\nexport function getTokenFriendlyHint(token) {\n  const hint = tokenFriendlyHint[token];\n  if (!hint) {\n    return token;\n  }\n  return hint;\n}\n\nexport function tokenize(input) {\n  let indent = [0];\n  let position = 0;\n  let line = 0;\n  let column = 0;\n  let length = input.length;\n  let pendingTokens = [];\n  const modes = [\n    MODES.DEFAULT\n  ];\n\n  const stackMode = (mode) => {\n    modes.unshift(mode);\n  };\n\n  const popMode = () => {\n    if (modes.length > 1) {\n      modes.shift();\n    }\n  };\n\n  const isCurrentMode = (mode) => {\n    return modes[0] === mode;\n  };\n\n  const checkSequence = (string, initialPosition, value) => {\n    const sequence = string.slice(initialPosition, initialPosition + value.length);\n    return sequence === value;\n  };\n\n\n  // handle indentation\n  const handleIndent = () => {\n    let initialLine = line;\n\n    let indentation = 0;\n    while (input[position] && input[position].match(/[\\t ]/)) {\n      indentation += 1;\n      position += 1;\n    }\n    if (indentation > indent[0]) {\n        const previousIndent = indent[0];\n        column += indentation;\n        indent.unshift(indentation);\n        return Token(TOKENS.INDENT, initialLine, previousIndent);\n    }\n\n    if (indentation === indent[0]) {\n      column = indent[0]\n      return;\n    }\n\n    let tokens = [];\n    while (indentation < indent[0]) {\n        indent.shift();\n        column = indent[0];\n        tokens.push(Token(TOKENS.DEDENT, line, column));\n    }\n\n    return tokens;\n  };\n\n  // handle comments\n  const handleComments = () => {\n    while (input[position] && input[position] !== '\\n') {\n      position += 1;\n    }\n    position += 1;\n    line += 1;\n  };\n\n  // handle line breaks\n  const handleLineBreaks = () => {\n    while (input[position] === '\\n') {\n      line += 1;\n      position += 1;\n      column = 0;\n    }\n\n    if (isCurrentMode(MODES.OPTION)) {\n      popMode();\n    }\n  };\n\n  // handle spaces\n  const handleSpace = () => {\n    while (input[position] === ' ') {\n      position += 1;\n      column += 1;\n    }\n  };\n\n  // handle text\n  const handleText = () => {\n    const initialLine = line;\n    const initialColumn = column;\n    let value = [];\n\n    while (position < input.length) {\n      const currentChar = input[position];\n\n      if (['\\n', '$', '#', '{' ].includes(currentChar) || (isCurrentMode(MODES.OPTION) && currentChar === ']')) {\n        break;\n      }\n\n      if (currentChar === '\\\\' && input[position + 1] !== 'n') {\n        value.push(input[position + 1]);\n        position += 2;\n        column += 2;\n        continue;\n      }\n\n      if (currentChar === ':') {\n        position += 1;\n        column += 1;\n        return Token(TOKENS.SPEAKER, initialLine, initialColumn, value.join('').trim());\n      }\n\n      value.push(currentChar);\n\n      position += 1;\n      column += 1;\n    }\n\n\n    return Token(TOKENS.TEXT, initialLine, initialColumn, value.join('').trim());\n  };\n\n  // handle text in quotes\n  const handleQText = () => {\n    const initialLine = line;\n    const initialColumn = column;\n    let value = [];\n\n    while (position < input.length) {\n      const currentChar = input[position];\n\n\n      if (currentChar === '\"') {\n        break;\n      }\n\n      if (currentChar === '\\\\' && input[position + 1] === '\"') {\n        value.push(input[position + 1]);\n        position += 2;\n        column += 2;\n        continue;\n      }\n\n      value.push(currentChar);\n\n      position += 1;\n      column += 1;\n    }\n\n\n    return Token(TOKENS.TEXT, initialLine, initialColumn, value.join('').trim());\n  };\n\n  // handle quote\n  const handleQuote = () => {\n    column += 1;\n    position += 1;\n    if (isCurrentMode(MODES.QSTRING)) {\n      popMode();\n    } else {\n      stackMode(MODES.QSTRING);\n    }\n  };\n\n  const optionTypes = {\n    '*': TOKENS.OPTION,\n    '+': TOKENS.STICKY_OPTION,\n    '>': TOKENS.FALLBACK_OPTION,\n  };\n\n  // handle options\n  const handleOption = () => {\n    const token = optionTypes[input[position]];\n\n    const initialColumn = column;\n    column += 1;\n    position += 1;\n    stackMode(MODES.OPTION);\n    return Token(token, line, initialColumn);\n  };\n\n  // handle brackets\n  const handleBrackets = () => {\n    const token = input[position] === '[' ? TOKENS.SQR_BRACKET_OPEN : TOKENS.SQR_BRACKET_CLOSE;\n    const initialColumn = column;\n    column += 1;\n    position += 1;\n    return Token(token, line, initialColumn);\n  };\n\n  const handleLineId = () => {\n    const initialColumn = column;\n    let values = [];\n    position += 1;\n    column += 1;\n\n    while (input[position] && input[position].match(/[A-Z|a-z|0-9|_]/)) {\n      values.push(input[position]);\n      position += 1;\n      column += 1;\n    }\n    return Token(TOKENS.LINE_ID, line, initialColumn, values.join(''));\n  };\n\n  const handleTag = () => {\n    const initialColumn = column;\n    let values = [];\n    position += 1;\n    column += 1;\n\n    while (input[position] && input[position].match(/[A-Z|a-z|0-9|_]/)) {\n      values.push(input[position]);\n      position += 1;\n      column += 1;\n    }\n    return Token(TOKENS.TAG, line, initialColumn, values.join(''));\n  };\n\n  const handleBlock = () => {\n    const initialColumn = column;\n    let values = [];\n    position += 2;\n    column += 2;\n\n    while (input[position] && input[position].match(/[A-Z|a-z|0-9|_| ]/)) {\n      values.push(input[position]);\n      position += 1;\n      column += 1;\n    }\n    return Token(TOKENS.BLOCK, line, initialColumn, values.join('').trim());\n  };\n\n  const handleDivert = () => {\n    const initialColumn = column;\n    let values = [];\n    position += 2;\n    column += 2;\n\n    while (input[position] && input[position].match(/[A-Z|a-z|0-9|_| ]/)) {\n      values.push(input[position]);\n      position += 1;\n      column += 1;\n    }\n    return Token(TOKENS.DIVERT, line, initialColumn, values.join('').trim());\n  };\n\n  const handleDivertToParent = () => {\n    const initialColumn = column;\n    position += 2;\n    column += 2;\n\n    return Token(TOKENS.DIVERT_PARENT, line, initialColumn);\n  };\n\n  const handleStartVariations = () => {\n    const initialColumn = column;\n    const values = [];\n    column += 1;\n    position += 1;\n    stackMode(MODES.VARIATIONS);\n\n    while (input[position] && input[position].match(/[A-Z|a-z| ]/)) {\n      values.push(input[position]);\n      position += 1;\n      column += 1;\n    }\n\n    const tokens = [\n      Token(TOKENS.BRACKET_OPEN, line, initialColumn)\n    ];\n\n    const value = values.join('').trim();\n\n    if (value.length) {\n      tokens.push(Token(TOKENS.VARIATIONS_MODE, line, initialColumn + 2, value));\n    }\n\n    return tokens;\n  };\n\n  const handleStopVariations = () => {\n    const initialColumn = column;\n    column += 1;\n    position += 1;\n    popMode();\n    return Token(TOKENS.BRACKET_CLOSE, line, initialColumn);\n  };\n\n  const handleVariationItem = () => {\n    const initialColumn = column;\n    column += 1;\n    position += 1;\n    return Token(TOKENS.MINUS, line, initialColumn);\n  };\n\n\n  const handleLogicBlockStart = () => {\n    const initialColumn = column;\n    column += 1;\n    position += 1;\n    stackMode(MODES.LOGIC);\n    const token = Token(TOKENS.BRACE_OPEN, line, initialColumn);\n    const linebreak = getLeadingLineBreak();\n    if (linebreak) {\n      return [ linebreak, token ];\n    }\n    return token;\n  };\n\n  const handleLogicBlockStop = () => {\n    const initialColumn = column;\n    column += 1;\n    position += 1;\n    popMode();\n    const token = Token(TOKENS.BRACE_CLOSE, line, initialColumn);\n    const linebreak = getFollowingLineBreak();\n    if (linebreak) {\n      return [ token, linebreak ];\n    }\n    return token;\n  };\n\n  const keywords = [\n    'is', 'isnt', 'or', 'and', 'not', 'true', 'false', 'null',\n    'set', 'trigger', 'when'\n  ];\n\n  const handleLogicIdentifier = () => {\n    const initialColumn = column;\n    let values = '';\n\n    while (input[position] && input[position].match(/[A-Z|a-z|0-9|_]/)) {\n      values += input[position];\n      position += 1;\n      column += 1;\n    }\n\n    if (keywords.includes(values.toLowerCase())) {\n      return handleLogicDescriptiveOperator(values, initialColumn);\n    }\n\n    return Token(TOKENS.IDENTIFIER, line, initialColumn, values.trim());\n  };\n\n  const handleLogicDescriptiveOperator = (value, initialColumn) => {\n    switch(value.toLowerCase()) {\n      case 'not':\n        return Token(TOKENS.NOT, line, initialColumn);\n      case 'and':\n        return Token(TOKENS.AND, line, initialColumn);\n      case 'or':\n        return Token(TOKENS.OR, line, initialColumn);\n      case 'is':\n        return Token(TOKENS.EQUAL, line, initialColumn);\n      case 'isnt':\n        return Token(TOKENS.NOT_EQUAL, line, initialColumn);\n      case 'true':\n      case 'false':\n        return Token(TOKENS.BOOLEAN_LITERAL, line, initialColumn, value);\n      case 'null':\n        return Token(TOKENS.NULL_TOKEN, line, initialColumn);\n      case 'set':\n        return Token(TOKENS.KEYWORD_SET, line, initialColumn);\n      case 'trigger':\n        return Token(TOKENS.KEYWORD_TRIGGER, line, initialColumn);\n      case 'when':\n        return Token(TOKENS.KEYWORD_WHEN, line, initialColumn);\n    }\n\n  };\n\n  const handleLogicNot = () => {\n    const initialColumn = column;\n    column += 1;\n    position += 1;\n    return Token(TOKENS.NOT, line, initialColumn);\n  };\n\n  const handleLogicOperator = (token, length) => {\n    const initialColumn = column;\n    column += length;\n    position += length;\n    return Token(token, line, initialColumn);\n  };\n\n  const handleLogicNumber = () => {\n    const initialColumn = column;\n    let values = '';\n\n    while (input[position] && input[position].match(/[0-9|.]/)) {\n      values += input[position];\n      position += 1;\n      column += 1;\n    }\n\n    return Token(TOKENS.NUMBER_LITERAL, line, initialColumn, values);\n  };\n\n  const handleLogicString = () => {\n    const initialColumn = column;\n    column += 1;\n    position += 1;\n    const token = handleQText();\n    column += 1;\n    position += 1;\n\n    token.token = TOKENS.STRING_LITERAL;\n    token.column = initialColumn;\n\n    return token;\n  };\n\n  const createSimpleToken = (token, length = 1) => {\n    const initialColumn = column;\n    column += length;\n    position += length;\n    return Token(token, line, initialColumn);\n  };\n\n  const handleLogicBlock = () => {\n    if (input[position] === '\"') {\n      return handleLogicString();\n    }\n\n    if (input[position] === '}') {\n      return handleLogicBlockStop();\n    }\n\n    if (checkSequence(input, position, '==')) {\n      return handleLogicOperator(TOKENS.EQUAL, 2);\n    }\n\n    if (checkSequence(input, position, '!=')) {\n      return handleLogicOperator(TOKENS.NOT_EQUAL, 2);\n    }\n\n    if (checkSequence(input, position, '&&')) {\n      return handleLogicOperator(TOKENS.AND, 2);\n    }\n\n    if (checkSequence(input, position, '||')) {\n      return handleLogicOperator(TOKENS.OR, 2);\n    }\n\n    if (checkSequence(input, position, '<=')) {\n      return handleLogicOperator(TOKENS.LE, 2);\n    }\n\n    if (checkSequence(input, position, '>=')) {\n      return handleLogicOperator(TOKENS.GE, 2);\n    }\n\n    if (checkSequence(input, position, '<')) {\n      return handleLogicOperator(TOKENS.LESS, 1);\n    }\n\n    if (checkSequence(input, position, '>')) {\n      return handleLogicOperator(TOKENS.GREATER, 1);\n    }\n\n    if (input[position] === '=') {\n      return createSimpleToken(TOKENS.ASSIGN);\n    }\n\n    if (checkSequence(input, position, '-=')) {\n      return createSimpleToken(TOKENS.ASSIGN_SUB, 2);\n    }\n\n    if (checkSequence(input, position, '+=')) {\n      return createSimpleToken(TOKENS.ASSIGN_SUM, 2);\n    }\n\n    if (checkSequence(input, position, '*=')) {\n      return createSimpleToken(TOKENS.ASSIGN_MULT, 2);\n    }\n\n    if (checkSequence(input, position, '/=')) {\n      return createSimpleToken(TOKENS.ASSIGN_DIV, 2);\n    }\n\n    if (checkSequence(input, position, '^=')) {\n      return createSimpleToken(TOKENS.ASSIGN_POW, 2);\n    }\n\n    if (checkSequence(input, position, '%=')) {\n      return createSimpleToken(TOKENS.ASSIGN_MOD, 2);\n    }\n\n    if (input[position] === '+') {\n      return createSimpleToken(TOKENS.PLUS, 1);\n    }\n\n    if (input[position] === '-') {\n      return createSimpleToken(TOKENS.MINUS, 1);\n    }\n\n    if (input[position] === '*') {\n      return createSimpleToken(TOKENS.MULT, 1);\n    }\n\n    if (input[position] === '/') {\n      return createSimpleToken(TOKENS.DIV, 1);\n    }\n\n    if (input[position] === '^') {\n      return createSimpleToken(TOKENS.POWER, 1);\n    }\n\n    if (input[position] === '%') {\n      return createSimpleToken(TOKENS.MOD, 1);\n    }\n\n    if (input[position] === ',') {\n      return createSimpleToken(TOKENS.COMMA, 1);\n    }\n\n    if (input[position] === '!') {\n      return handleLogicNot();\n    }\n\n    if (input[position].match(/[0-9]/)) {\n      return handleLogicNumber();\n    }\n\n    if (input[position].match(/[A-Za-z]/)) {\n      return handleLogicIdentifier();\n    }\n  };\n\n  const getFollowingLineBreak = () => {\n    let lookupPosition = position;\n    let lookupColumn = column;\n    while (input[lookupPosition] === ' ') {\n      lookupPosition += 1;\n      lookupColumn += 1;\n    }\n\n    if (input[lookupPosition] === '\\n') {\n      return Token(TOKENS.LINE_BREAK, line, lookupColumn);\n    }\n  };\n\n  const getLeadingLineBreak = () => {\n    let lookupPosition = position - 2;\n    while (input[lookupPosition] === ' ') {\n      lookupPosition -= 1;\n    }\n\n    if (input[lookupPosition] === '\\n') {\n      return Token(TOKENS.LINE_BREAK, line, 0);\n    }\n  };\n\n  // get next token\n  function getNextToken() {\n    if (!isCurrentMode(MODES.QSTRING) && input[position] === '-' && input[position + 1] === '-') {\n      return handleComments();\n    }\n\n    if (!isCurrentMode(MODES.QSTRING) && input[position] === '\\n') {\n      return handleLineBreaks();\n    }\n\n    if (!isCurrentMode(MODES.LOGIC) && ((column === 0 && input[position].match(/[\\t ]/)) || (column === 0 && indent.length > 1))) {\n      return handleIndent();\n    }\n\n    if (!isCurrentMode(MODES.QSTRING) && input[position] === '{') {\n      return handleLogicBlockStart();\n    }\n\n    if(isCurrentMode(MODES.LOGIC)) {\n      const response = handleLogicBlock();\n\n      if (response)  {\n        return response;\n      }\n    }\n\n    if (input[position] === '\"') {\n      return handleQuote();\n    }\n\n    if (isCurrentMode(MODES.QSTRING)) {\n      return handleQText();\n    }\n\n    if (input[position] === ' ') {\n      return handleSpace();\n    }\n\n    if (input[position] === '(') {\n      return handleStartVariations();\n    }\n\n    if (input[position] === ')') {\n      return handleStopVariations();\n    }\n\n    if (column === 0 && input[position] === '=' && input[position + 1] === '=') {\n      return handleBlock();\n    }\n\n    if (input[position] === '-' && input[position + 1] === '>') {\n      return handleDivert();\n    }\n\n    if (input[position] === '<' && input[position + 1] === '-') {\n      return handleDivertToParent();\n    }\n\n    if (isCurrentMode(MODES.VARIATIONS) && input[position] === '-') {\n      return handleVariationItem();\n    }\n\n    if (input[position] === '*' || input[position] === '+'|| input[position] === '>') {\n      return handleOption();\n    }\n\n    if (isCurrentMode(MODES.OPTION) && ['[', ']' ].includes(input[position])) {\n      return handleBrackets();\n    }\n\n    if (input[position] === '$') {\n      return handleLineId();\n    }\n\n    if (input[position] === '#') {\n      return handleTag();\n    }\n\n    return handleText();\n  }\n\n  return {\n    // returns a list with all tokens\n    getAll() {\n      let tokens = [];\n      while (position < length) {\n        const token = getNextToken(input, position, line, column, indent);\n        if (token) {\n          if (Array.isArray(token)) {\n            tokens = tokens.concat(token);\n          } else {\n            tokens.push(token);\n          }\n        }\n      }\n\n      position += 1;\n      tokens.push(Token(TOKENS.EOF, line, column));\n\n      return tokens;\n    },\n\n    // retuns a token each time\n    next() {\n      if (pendingTokens.length) {\n        return pendingTokens.shift();\n      }\n\n      while (position < length) {\n        const token = getNextToken(input, position, line, column, indent);\n        if (token) {\n          if (Array.isArray(token)) {\n            pendingTokens = token;\n            return pendingTokens.shift();\n          } else {\n            return token;\n          }\n        }\n      }\n\n      if (position === length) {\n        position += 1;\n        return Token(TOKENS.EOF, line, column);\n      }\n    }\n  }\n}\n\nexport function Token(token, line, column, value) {\n  return {\n    token,\n    value,\n    line,\n    column\n  };\n}\n\n\n","export const DocumentNode = (content = [], blocks = []) => {\n  return { type: 'document', content, blocks};\n};\n\nexport const ContentNode = (content) => {\n  return { type: 'content', content };\n};\n\nexport const BlockNode = (blockName, content) => {\n  return { type: 'block', name: blockName, content };\n}\n\nexport const LineNode = (value, speaker, id, tags) => {\n  return { type: 'line', value, speaker, id, tags };\n};\n\nexport const OptionsNode = (content, name, id, speaker, tags) => {\n  return { type: 'options', name, content, id, speaker, tags };\n}\n\nexport const OptionNode = (content, mode, name, id, speaker, tags) => {\n  return { type: 'option', name, mode, content, id, speaker, tags };\n}\n\nexport const DivertNode = (target) => {\n  if (target === 'END') {\n    target = '<end>';\n  }\n  return { type: 'divert', target };\n}\n\nexport const VariationsNode = (mode, content = []) => {\n  return { type: 'variations', mode, content };\n}\n\nexport const VariableNode = (name) => {\n  return { type: 'variable', name };\n}\n\nexport const NumberLiteralNode = (value) => {\n  return LiteralNode('number', Number(value));\n}\n\nexport const BooleanLiteralNode = (value) => {\n  return LiteralNode('boolean', value === 'true');\n}\n\nexport const StringLiteralNode = (value) => {\n  return LiteralNode('string', value);\n}\n\nexport const LiteralNode = (name, value) => {\n  return { type: 'literal', name, value };\n}\n\nexport const NullTokenNode = () => {\n  return { type: 'null' };\n}\n\nexport const ConditionalContentNode = (conditions, content) => {\n  return { type: 'conditional_content', conditions, content };\n}\n\nexport const ActionContentNode = (action, content) => {\n  return { type: 'action_content', action, content };\n}\n\nexport const ExpressionNode = (name, elements) => {\n  return { type: 'expression', name, elements };\n}\n\nexport const AssignmentsNode = (assignments) => {\n  return { type: 'assignments', assignments };\n}\n\nexport const AssignmentNode = (variable, operation, value) => {\n  return { type: 'assignment', variable, operation, value };\n}\n\nexport const EventsNode = (events) => {\n  return { type: 'events', events };\n}\n\nexport const EventNode = (name) => {\n  return { type: 'event', name };\n}\n","import { TOKENS, tokenize, getTokenFriendlyHint } from './lexer.js';\n\nimport {\n  DocumentNode,\n  ContentNode,\n  BlockNode,\n  LineNode,\n  OptionsNode,\n  OptionNode,\n  DivertNode,\n  VariationsNode,\n  VariableNode,\n  NumberLiteralNode,\n  BooleanLiteralNode,\n  StringLiteralNode,\n  NullTokenNode,\n  ConditionalContentNode,\n  ActionContentNode,\n  ExpressionNode,\n  AssignmentsNode,\n  AssignmentNode,\n  EventsNode,\n  EventNode,\n} from './nodes.js';\n\nconst variationsModes = ['sequence', 'once', 'cycle', 'shuffle', 'shuffle sequence', 'shuffle once', 'shuffle cycle' ];\nconst operators = {\n  [TOKENS.AND]: { precedence: 1, associative: 'LEFT' },\n  [TOKENS.OR]: { precedence: 1, associative: 'LEFT' },\n  [TOKENS.EQUAL]: { precedence: 2, associative: 'LEFT' },\n  [TOKENS.NOT_EQUAL]: { precedence: 2, associative: 'LEFT' },\n  [TOKENS.GREATER]: { precedence: 2, associative: 'LEFT' },\n  [TOKENS.LESS]: { precedence: 2, associative: 'LEFT' },\n  [TOKENS.GE]: { precedence: 2, associative: 'LEFT' },\n  [TOKENS.LE]: { precedence: 2, associative: 'LEFT' },\n  [TOKENS.PLUS]: { precedence: 3, associative: 'LEFT' },\n  [TOKENS.MINUS]: { precedence: 3, associative: 'LEFT' },\n  [TOKENS.MOD]: { precedence: 4, associative: 'LEFT' },\n  [TOKENS.MULT]: { precedence: 5, associative: 'LEFT' },\n  [TOKENS.DIV]: { precedence: 5, associative: 'LEFT' },\n  [TOKENS.POWER]: { precedence: 7, associative: 'RIGHT' },\n};\n\nconst assignmentOperators = {\n  [TOKENS.ASSIGN]: 'assign',\n  [TOKENS.ASSIGN_SUM]: 'assign_sum',\n  [TOKENS.ASSIGN_SUB]: 'assign_sub',\n  [TOKENS.ASSIGN_MULT]: 'assign_mult',\n  [TOKENS.ASSIGN_DIV]: 'assign_div',\n  [TOKENS.ASSIGN_POW]: 'assign_pow',\n  [TOKENS.ASSIGN_MOD]: 'assign_mod',\n};\n\nexport default function parse(doc) {\n  const tokens = tokenize(doc);\n  // console.log(tokenize(doc).getAll());\n  // console.log(JSON.stringify(test.getAll()));\n  let currentToken;\n  let lookaheadTokens = [];\n  let isMultilineEnabled = true;\n\n  const wrongTokenError = (token, expected) => {\n    throw new Error(`Unexpected token \"${getTokenFriendlyHint(token.token)}\" on line ${token.line+1} column ${token.column+1}. Expected ${expected.map(getTokenFriendlyHint).join(', ')} `);\n  }\n\n  const consume = (expected) => {\n    if (!lookaheadTokens.length) {\n      lookaheadTokens.push(tokens.next());\n    }\n\n    const lookahead = lookaheadTokens.shift();\n\n    if (expected && (!lookahead || !expected.includes(lookahead.token))) {\n      wrongTokenError(lookahead, expected);\n    }\n\n    currentToken = lookahead;\n    return currentToken;\n  };\n\n  const peek = (expected, offset = 0) => {\n    while (lookaheadTokens.length < (offset + 1)) {\n      const token = tokens.next();\n      if (token) {\n        lookaheadTokens.push(token);\n      } else {\n        break;\n      }\n    }\n    const lookahead = lookaheadTokens[offset];\n\n    if (!expected || (lookahead && expected.includes(lookahead.token))) {\n      return lookahead;\n    }\n  };\n\n  const Document = () => {\n    const expected = [\n      TOKENS.EOF,\n      TOKENS.SPEAKER,\n      TOKENS.TEXT,\n      TOKENS.OPTION,\n      TOKENS.STICKY_OPTION,\n      TOKENS.FALLBACK_OPTION,\n      TOKENS.DIVERT,\n      TOKENS.DIVERT_PARENT,\n      TOKENS.BRACKET_OPEN,\n      TOKENS.BRACE_OPEN,\n    ];\n    const next = peek();\n\n    switch (next.token) {\n      case TOKENS.EOF:\n        return DocumentNode();\n      case TOKENS.SPEAKER:\n      case TOKENS.TEXT:\n      case TOKENS.OPTION:\n      case TOKENS.STICKY_OPTION:\n      case TOKENS.FALLBACK_OPTION:\n      case TOKENS.DIVERT:\n      case TOKENS.DIVERT_PARENT:\n      case TOKENS.BRACKET_OPEN:\n      case TOKENS.BRACE_OPEN:\n      case TOKENS.LINE_BREAK:\n        const result =  DocumentNode([ContentNode(Lines())]);\n        if (peek([TOKENS.BLOCK])) {\n          result.blocks = Blocks();\n        }\n        return result;\n      case TOKENS.BLOCK:\n        return DocumentNode([], Blocks());\n      default:\n        wrongTokenError(next, expected);\n    };\n  };\n\n  const Blocks = () => {\n    consume([TOKENS.BLOCK]);\n    let blocks =  [\n      BlockNode(currentToken.value, ContentNode(Lines()))\n    ];\n\n    while (peek([TOKENS.BLOCK])) {\n      blocks = blocks.concat(Blocks());\n    }\n\n    return blocks;\n  };\n\n  const Lines = () => {\n    const acceptableNext = [\n      TOKENS.SPEAKER,\n      TOKENS.TEXT,\n      TOKENS.OPTION,\n      TOKENS.STICKY_OPTION,\n      TOKENS.FALLBACK_OPTION,\n      TOKENS.DIVERT,\n      TOKENS.DIVERT_PARENT,\n      TOKENS.BRACKET_OPEN,\n      TOKENS.BRACE_OPEN,\n      TOKENS.LINE_BREAK,\n    ];\n    let lines;\n    const tk = peek(acceptableNext);\n\n    if (!tk) {\n      return [];\n    }\n\n    switch (tk.token) {\n      case TOKENS.SPEAKER:\n      case TOKENS.TEXT:\n        consume([ TOKENS.SPEAKER, TOKENS.TEXT ]);\n        const line = Line();\n        if (peek([TOKENS.BRACE_OPEN])) {\n          consume([TOKENS.BRACE_OPEN]);\n          lines = [LineWithAction(line)];\n        } else {\n          lines = [line];\n        }\n        break;\n      case TOKENS.OPTION:\n      case TOKENS.STICKY_OPTION:\n      case TOKENS.FALLBACK_OPTION:\n        lines = [Options()];\n        break;\n      case TOKENS.DIVERT:\n      case TOKENS.DIVERT_PARENT:\n        lines = [Divert()];\n        break;\n      case TOKENS.BRACKET_OPEN:\n        consume([ TOKENS.BRACKET_OPEN ]);\n        lines = [Variations()];\n        break;\n      case TOKENS.LINE_BREAK:\n        consume([ TOKENS.LINE_BREAK ]);\n      case TOKENS.BRACE_OPEN:\n        consume([TOKENS.BRACE_OPEN]);\n        if (peek([TOKENS.KEYWORD_SET, TOKENS.KEYWORD_TRIGGER])) {\n          lines = [LineWithAction()];\n        } else {\n          lines = [ConditionalLine()];\n        }\n        break;\n    }\n\n    if (peek(acceptableNext)) {\n      lines = lines.concat(Lines());\n    }\n\n    return lines;\n  }\n\n  const Line = () => {\n    return DialogueLine();\n  };\n\n  const DialogueLine = () => {\n    switch (currentToken.token) {\n      case TOKENS.SPEAKER:\n        return LineWithSpeaker();\n      case TOKENS.TEXT:\n        return TextLine();\n    }\n  };\n\n  const LineWithSpeaker = () => {\n    const { value } = currentToken;\n    consume([TOKENS.TEXT]);\n    const line = DialogueLine();\n    line.speaker =  value;\n    return line;\n  }\n\n  const TextLine = () => {\n    const { value } = currentToken;\n    const next = peek([TOKENS.LINE_ID, TOKENS.TAG]);\n    let line;\n\n    if (next) {\n      consume([TOKENS.LINE_ID, TOKENS.TAG]);\n      line = LineWithMetadata();\n      line.value = value;\n    } else {\n      line = LineNode(value);\n    }\n\n    if (isMultilineEnabled && peek([TOKENS.INDENT])) {\n      consume([TOKENS.INDENT]);\n\n      if (peek([TOKENS.OPTION, TOKENS.STICKY_OPTION, TOKENS.FALLBACK_OPTION])) {\n        const options = Options();\n        options.id = line.id;\n        options.name = line.value;\n        options.tags = line.tags;\n        line = options;\n      } else {\n        while (!peek([TOKENS.DEDENT, TOKENS.EOF])) {\n          consume([TOKENS.TEXT]);\n          const nextLine = TextLine();\n          line.value += ` ${nextLine.value}`;\n          if (nextLine.id) {\n            line.id = nextLine.id;\n          }\n\n          if (nextLine.tags) {\n            line.tags = nextLine.tags;\n          }\n        }\n        consume([TOKENS.DEDENT, TOKENS.EOF]);\n      }\n    }\n\n    return line;\n  }\n\n  const LineWithMetadata = () => {\n    switch (currentToken.token) {\n      case TOKENS.LINE_ID:\n        return LineWithId();\n      case TOKENS.TAG:\n        return LineWithTags();\n    }\n  };\n\n  const LineWithId = () => {\n    const { value } = currentToken;\n    const next = peek([TOKENS.TAG]);\n    if (next) {\n      consume([TOKENS.TAG]);\n      const line = LineWithTags();\n      line.id = value;\n      return line;\n    }\n    return LineNode(undefined, undefined, value);\n  };\n\n  const LineWithTags = () => {\n    const { value } = currentToken;\n    const next = peek([TOKENS.LINE_ID, TOKENS.TAG]);\n    if (next) {\n      consume([TOKENS.LINE_ID, TOKENS.TAG]);\n      const line = LineWithMetadata();\n      if (!line.tags) {\n        line.tags = [];\n      }\n      line.tags.unshift(value);\n      return line;\n    }\n    return LineNode(undefined, undefined, undefined, [value]);\n  };\n\n  const Options = () => {\n    const options = OptionsNode([]);\n\n    while (peek([TOKENS.OPTION, TOKENS.STICKY_OPTION, TOKENS.FALLBACK_OPTION])) {\n      options.content.push(Option());\n    }\n\n    if (peek([ TOKENS.DEDENT ])) {\n      consume([ TOKENS.DEDENT ]);\n    }\n\n    return options;\n  };\n\n  const optionType = {\n    [TOKENS.OPTION]: 'once',\n    [TOKENS.STICKY_OPTION]: 'sticky',\n    [TOKENS.FALLBACK_OPTION]: 'fallback',\n  }\n\n  const Option = () => {\n    consume([TOKENS.OPTION, TOKENS.STICKY_OPTION, TOKENS.FALLBACK_OPTION])\n    const type = optionType[currentToken.token];\n\n    const acceptableNext = [TOKENS.SPEAKER, TOKENS.TEXT, TOKENS.INDENT, TOKENS.SQR_BRACKET_OPEN, TOKENS.BRACE_OPEN];\n    let lines = [];\n    let mainItem;\n    let useFirstLineAsDisplayOnly = false;\n    let root;\n    let wrapper;\n\n    consume(acceptableNext);\n\n    if (currentToken.token === TOKENS.BRACE_OPEN) {\n      const block = NestedLogicBlocks();\n      root = block.root;\n      wrapper = block.wrapper;\n      consume(acceptableNext);\n    }\n\n    if (currentToken.token === TOKENS.SQR_BRACKET_OPEN) {\n      useFirstLineAsDisplayOnly = true;\n      consume(acceptableNext);\n    }\n\n    switch (currentToken.token) {\n      case TOKENS.SPEAKER:\n      case TOKENS.TEXT:\n        isMultilineEnabled = false;\n        mainItem = Line();\n        isMultilineEnabled = true;\n        if (useFirstLineAsDisplayOnly) {\n          consume([TOKENS.SQR_BRACKET_CLOSE]);\n        } else {\n          lines.push(mainItem);\n        }\n\n    }\n\n    if (peek([TOKENS.BRACE_OPEN])) {\n      consume([TOKENS.BRACE_OPEN]);\n      const block = NestedLogicBlocks();\n\n      if (!root) {\n        root = block.root;\n        wrapper = block.wrapper;\n      } else {\n        wrapper.content = block.wrapper;\n        wrapper = block.wrapper;\n      }\n\n      consume([TOKENS.LINE_BREAK]);\n    }\n\n    if (currentToken.token === TOKENS.INDENT || peek([TOKENS.INDENT])) {\n      if (currentToken.token !== TOKENS.INDENT) {\n        consume([TOKENS.INDENT])\n      }\n\n      lines = lines.concat(Lines());\n      if (!mainItem) {\n        mainItem = lines[0];\n      }\n      consume([TOKENS.DEDENT, TOKENS.EOF])\n    }\n\n    const node = OptionNode(\n      ContentNode(lines),\n      type,\n      mainItem.value,\n      mainItem.id,\n      mainItem.speaker,\n      mainItem.tags,\n    );\n\n    if (root) {\n      wrapper.content = node;\n      return root;\n    }\n\n    return node;\n  }\n\n  const NestedLogicBlocks = () => {\n    let root\n    let wrapper\n    while (currentToken.token === TOKENS.BRACE_OPEN) {\n      if (!root) {\n        root = LogicBlock();\n        wrapper = root;\n      } else {\n        let next = LogicBlock();\n        wrapper.content = next;\n        wrapper = next;\n      }\n      if (peek([TOKENS.BRACE_OPEN])) {\n        consume([TOKENS.BRACE_OPEN]);\n      }\n    }\n    return { root, wrapper };\n  };\n\n\n  const Divert = () => {\n    consume([ TOKENS.DIVERT, TOKENS.DIVERT_PARENT ]);\n    const divert = currentToken;\n\n    switch (divert.token) {\n      case TOKENS.DIVERT:\n        return DivertNode(divert.value);\n      case TOKENS.DIVERT_PARENT:\n        return DivertNode('<parent>');\n    }\n  };\n\n  const Variations = () => {\n    const variations = VariationsNode('cycle');\n\n    if (peek([TOKENS.VARIATIONS_MODE])) {\n      const mode = consume([TOKENS.VARIATIONS_MODE]);\n      if (!variationsModes.includes(mode.value)) {\n        throw new Error(`Wrong variation mode set \"${mode.value}\". Valid modes: ${variationsModes.join(', ')}.`);\n      };\n      variations.mode = mode.value;\n    }\n\n    while(peek([TOKENS.INDENT, TOKENS.MINUS])) {\n      if (peek([TOKENS.INDENT])) {\n        consume([TOKENS.INDENT]);\n        continue;\n      }\n      consume([TOKENS.MINUS])\n\n      let startsNextLine = false;\n      if (peek([TOKENS.INDENT])) {\n        consume([TOKENS.INDENT]);\n        startsNextLine = true;\n      }\n\n      variations.content.push(ContentNode(Lines()));\n      if (startsNextLine) {\n        const lastVariation = variations.content[variations.content.length - 1].content;\n        const lastContent = lastVariation[lastVariation.length - 1];\n        if (lastContent.type !== 'options') {\n          consume([TOKENS.DEDENT]);\n        }\n      }\n\n      if (peek([TOKENS.DEDENT])) {\n        consume([TOKENS.DEDENT]);\n      }\n    }\n    consume([TOKENS.BRACKET_CLOSE]);\n\n    return variations;\n  };\n\n  const LineWithAction = (line) => {\n    const token = peek([\n      TOKENS.KEYWORD_SET,\n      TOKENS.KEYWORD_TRIGGER,\n    ]);\n    const expression = LogicElement();\n\n    if (line) {\n      let content = line;\n\n      if (peek([TOKENS.BRACE_OPEN])) {\n        consume([TOKENS.BRACE_OPEN]);\n        content = LineWithAction(line);\n      }\n\n      if (peek([TOKENS.LINE_BREAK])) {\n        consume([TOKENS.LINE_BREAK]);\n      }\n\n      if (!token || token.token === TOKENS.KEYWORD_WHEN) {\n        return ConditionalContentNode(expression, content);\n      }\n      return ActionContentNode(expression, content);\n    }\n\n    if (peek([TOKENS.LINE_BREAK])) {\n      consume([TOKENS.LINE_BREAK]);\n      return expression;\n    }\n\n    if (peek([TOKENS.EOF])) {\n      return  expression;\n    }\n\n    if (peek([TOKENS.BRACE_OPEN])) {\n      consume([TOKENS.BRACE_OPEN]);\n      if (!token) {\n        return ConditionalContentNode(expression, LineWithAction());\n      }\n      return ActionContentNode(expression, LineWithAction());\n    }\n\n    consume([TOKENS.SPEAKER, TOKENS.TEXT]);\n\n    if (!token) {\n      return ConditionalContentNode(expression, Line());\n    }\n    return ActionContentNode(expression, Line());\n  };\n\n  const LogicElement = () => {\n    if (peek([TOKENS.KEYWORD_SET])) {\n      const assignments = Assignments()\n      return assignments\n    }\n\n    if (peek([TOKENS.KEYWORD_TRIGGER])) {\n      const events = Events();\n      return events;\n\n    }\n\n    if (peek([TOKENS.KEYWORD_WHEN])) {\n      consume([TOKENS.KEYWORD_WHEN]);\n    }\n\n    const condition = Condition();\n    return condition;\n  };\n\n  const LogicBlock = () => {\n    if (peek([TOKENS.KEYWORD_SET])) {\n      const assignments = Assignments()\n      return ActionContentNode(assignments);\n    }\n\n    if (peek([TOKENS.KEYWORD_TRIGGER])) {\n      const events = Events();\n      return ActionContentNode(events);\n\n    }\n\n    if (peek([TOKENS.KEYWORD_WHEN])) {\n      consume([TOKENS.KEYWORD_WHEN]);\n    }\n\n    const condition = Condition();\n    return ConditionalContentNode(condition);\n  };\n\n\n  const Assignments = () => {\n    consume([TOKENS.KEYWORD_SET]);\n    const assignments = [AssignmentExpression()];\n    while(peek([TOKENS.COMMA])) {\n      consume([TOKENS.COMMA]);\n      assignments.push(AssignmentExpression());\n    }\n    consume([TOKENS.BRACE_CLOSE]);\n    return AssignmentsNode(assignments);\n  };\n\n  const Events = () => {\n    consume([TOKENS.KEYWORD_TRIGGER]);\n    consume([TOKENS.IDENTIFIER]);\n    const events = [EventNode(currentToken.value)];\n\n    while(peek([TOKENS.COMMA])) {\n      consume([TOKENS.COMMA]);\n      consume([TOKENS.IDENTIFIER]);\n      events.push(EventNode(currentToken.value));\n    }\n\n    consume([TOKENS.BRACE_CLOSE]);\n\n    return EventsNode(events);\n  };\n\n  const ConditionalLine = () => {\n    const expression = Condition();\n\n    let content;\n\n    if (peek([TOKENS.DIVERT, TOKENS.DIVERT_PARENT])) {\n      content = Divert();\n    } else if (peek([TOKENS.LINE_BREAK])) {\n      consume([TOKENS.LINE_BREAK]);\n      consume([TOKENS.INDENT]);\n      content = ContentNode(Lines());\n      consume([TOKENS.DEDENT, TOKENS.EOF]);\n    } else if (peek([TOKENS.BRACE_OPEN])) {\n      consume([TOKENS.BRACE_OPEN]);\n      content = LineWithAction();\n    } else {\n      consume([TOKENS.SPEAKER, TOKENS.TEXT]);\n      content = Line();\n      if (peek([TOKENS.BRACE_OPEN])) {\n        consume([TOKENS.BRACE_OPEN]);\n        content = LineWithAction(content);\n      }\n    }\n\n    return ConditionalContentNode(\n      expression,\n      content\n    );\n  };\n\n  const Condition = () => {\n    const token = peek([\n      TOKENS.IDENTIFIER,\n      TOKENS.NOT,\n    ]);\n    let expression;\n    if (token) {\n      expression = Expression();\n    }\n    consume([TOKENS.BRACE_CLOSE]);\n    return expression;\n  };\n\n  const AssignmentExpression = () => {\n    consume([TOKENS.IDENTIFIER]);\n    const variable = VariableNode(currentToken.value);\n\n    if (peek([TOKENS.BRACE_CLOSE])) {\n      return variable;\n    }\n\n    const operators = Object.keys(assignmentOperators);\n\n    consume(operators);\n\n    if (peek([TOKENS.IDENTIFIER]) && peek([...operators, TOKENS.BRACE_CLOSE], 1)) {\n      return AssignmentNode(variable, assignmentOperators[currentToken.token], AssignmentExpression());\n    }\n    return AssignmentNode(variable, assignmentOperators[currentToken.token], Expression());\n  };\n\n  const Expression = (minPrecedence = 1) => {\n    const operatorTokens = Object.keys(operators);\n\n    let lhs = Operand();\n\n    if (!peek(operatorTokens)) {\n      return lhs;\n    }\n\n    consume(operatorTokens);\n\n    while (true) {\n      if (!operatorTokens.includes(currentToken.token)) {\n        break;\n      }\n\n      const operator = currentToken.token;\n\n      const { precedence, associative } = operators[currentToken.token];\n\n      if (precedence < minPrecedence) {\n        break;\n      }\n\n      const nextMinPrecedence = associative === 'LEFT' ? precedence + 1 : precedence;\n      const rhs = Expression(nextMinPrecedence);\n      lhs = Operator(operator, lhs, rhs);\n    }\n    return lhs;\n  };\n\n  const Operand = () => {\n    consume([\n      TOKENS.IDENTIFIER,\n      TOKENS.NOT,\n      TOKENS.NUMBER_LITERAL,\n      TOKENS.STRING_LITERAL,\n      TOKENS.BOOLEAN_LITERAL,\n      TOKENS.NULL_TOKEN\n    ]);\n\n    switch(currentToken.token) {\n      case TOKENS.NOT:\n        return ExpressionNode('not', [Operand()]);\n      case TOKENS.IDENTIFIER:\n        return VariableNode(currentToken.value);\n      case TOKENS.NUMBER_LITERAL:\n        return NumberLiteralNode(currentToken.value);\n      case TOKENS.STRING_LITERAL:\n        return StringLiteralNode(currentToken.value);\n      case TOKENS.BOOLEAN_LITERAL:\n        return BooleanLiteralNode(currentToken.value);\n      case TOKENS.NULL_TOKEN:\n        return NullTokenNode();\n    }\n  };\n\n  const Operator = (operator, lhs, rhs) => {\n    const labels = {\n      [TOKENS.PLUS]: 'add',\n      [TOKENS.MINUS]: 'sub',\n      [TOKENS.MULT]: 'mult',\n      [TOKENS.DIV]: 'div',\n      [TOKENS.MOD]: 'mod',\n      [TOKENS.POWER]: 'pow',\n      [TOKENS.AND]: 'and',\n      [TOKENS.OR]: 'or',\n      [TOKENS.EQUAL]: 'equal',\n      [TOKENS.NOT_EQUAL]: 'not_equal',\n      [TOKENS.GREATER]: 'greater_than',\n      [TOKENS.LESS]: 'less_than',\n      [TOKENS.GE]: 'greater_or_equal',\n      [TOKENS.LE]: 'less_or_equal',\n    };\n    return ExpressionNode(labels[operator], [lhs, rhs]);\n  };\n\n  const result = Document();\n  if (peek()) {\n    consume([ TOKENS.EOF ]);\n  }\n  return result;\n}\n","import styled from 'styled-components';\n\nexport const InfoBubble = styled.div `\n  text-align: center;\n  width: auto;\n  background-color: #eeeeee;\n  margin: 10px 10px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: default;\n`;\n\nexport const ErrorBubble = styled.div`\n  text-align: center;\n  width: auto;\n  background-color: #ffeeee;\n  margin: 10px 10px;\n  padding: 30px 20px;\n  border-radius: 5px;\n  cursor: default;\n  font-weight: 500;\n  display: flex;\n  justify-content: center;\n  white-space: pre-line;\n  line-height: 26px;\n`;\n","import React, { useState } from \"react\";\nimport styled from 'styled-components';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCog,\n  faRedoAlt,\n  faFastForward,\n  faBug,\n  faComment,\n  faComments,\n  faReceipt,\n  faGhost,\n  faHandSparkles,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport DropDownMenu, { DropDownItem } from '../screens/DropdownMenu';\n\nconst InterpreterToolbarWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  color: #444;\n  padding: 0px 10px;\n  height: 40px;\n\n  > svg {\n    cursor: pointer;\n    font-size: 1.5em;\n    margin: 0px 20px;\n    &:hover {\n      color: #555;\n    }\n  }\n`;\n\nconst IconWrapper = styled.span`\n  cursor: pointer;\n  position: relative;\n  margin: 0px 20px;\n  > svg {\n    font-size: 1.5em;\n    &:hover {\n      color: #222;\n    }\n  }\n`;\n\nexport default function InterpreterToolbar(properties) {\n  const {\n    doc,\n    currentBlock,\n    shouldShowExtraMetadata,\n    shouldShowDebugPane,\n    singleBubblePresentation,\n    setBlock,\n    clearTimeline,\n    showExtraMetadata,\n    hideExtraMetadata,\n    showDebugPane,\n    hideDebugPane,\n    enableSingleBubbleDialogue,\n    disableSingleBubbleDialogue,\n    dialogue,\n    addDialogueLine,\n    chooseOption,\n    clearEvents,\n  } = properties;\n\n  const [isMenuVisible, setMenuVisibility] = useState(false);\n\n  const selectBlock = (blockName) => {\n    setBlock(blockName);\n    clearTimeline();\n    dialogue.start(blockName);\n  };\n\n  const toggleMenu = () => {\n    setMenuVisibility(!isMenuVisible);\n  };\n\n  const toggleMultipleBubbles = () => {\n    if (singleBubblePresentation) {\n      disableSingleBubbleDialogue();\n    } else {\n      enableSingleBubbleDialogue();\n    }\n  };\n\n  const toggleExtraMetadata = () => {\n    if (shouldShowExtraMetadata) {\n      hideExtraMetadata();\n    } else {\n      showExtraMetadata();\n    }\n  };\n\n  const toggleDebugPane = () => {\n    if (shouldShowDebugPane) {\n      hideDebugPane();\n    } else {\n      showDebugPane();\n    }\n  };\n\n  const restart = () => {\n    dialogue.start(currentBlock);\n    clearTimeline();\n  };\n\n  const forwardToNextOption = () => {\n    const line = dialogue.getContent();\n    addDialogueLine(line);\n\n    if (!line || line.type === 'options') {\n      return line;\n    }\n\n    return forwardToNextOption();\n  };\n\n  const poltergeist = () => {\n    const optionList = forwardToNextOption();\n\n    if (!optionList) {\n      return;\n    }\n\n    const choice = Math.floor(Math.random() * optionList.options.length);\n    chooseOption(choice);\n    dialogue.choose(choice);\n\n    poltergeist();\n  };\n\n  const cleanMemory = () => {\n    dialogue.clearData();\n    addDialogueLine({ type: 'INTERPRETER_INFO', text: 'Memory cleared'})\n    dialogue.start(currentBlock);\n    clearEvents();\n    clearTimeline();\n  };\n\n  return (\n    <InterpreterToolbarWrapper>\n      <BlockList document={doc} currentBlock={currentBlock} onBlockSelected={selectBlock}/>\n      <FontAwesomeIcon icon={faRedoAlt} title=\"Restart dialogue\" onClick={restart}/>\n\n      <FontAwesomeIcon icon={faFastForward} title=\"Forward untill next choice\" onClick={forwardToNextOption}/>\n\n      <FontAwesomeIcon icon={faGhost} title=\"Execute Poltergeist mode (auto anwser)\" onClick={poltergeist}/>\n\n      <FontAwesomeIcon icon={faHandSparkles} title=\"Clear memory\" onClick={cleanMemory}/>\n\n      <FontAwesomeIcon\n        icon={ singleBubblePresentation ? faComments : faComment }\n        title={`Set ${singleBubblePresentation ? 'multi' : 'single'} bubble dialogue`}\n        onClick={toggleMultipleBubbles}\n      />\n\n      <IconWrapper>\n        <FontAwesomeIcon icon={faCog} onClick={toggleMenu} title=\"Interpreter options\"/>\n        { isMenuVisible ? (\n          <DropDownMenu onClick={toggleMenu} style={{ width: '280px' }}>\n\n            <DropDownItem\n              label=\"Toggle extra metadata\"\n              onClick={toggleExtraMetadata}\n              icon={faReceipt}\n              text={`${shouldShowExtraMetadata ? 'Hide' : 'Show'} metadata`}\n            />\n\n            <DropDownItem\n              label=\"Toggle debug pane\"\n              onClick={toggleDebugPane}\n              icon={faBug}\n              text={`${shouldShowDebugPane ? 'Hide' : 'Show'} debug pane`}\n              />\n           </DropDownMenu>\n          ) : ''\n        }\n      </IconWrapper>\n    </InterpreterToolbarWrapper>\n  );\n}\n\nfunction BlockList(props) {\n  const { document: doc, currentBlock, onBlockSelected } = props;\n  const list = [\n    ...(doc.content.length > 0 ? ['default'] : []),\n    ...doc.blocks.map(b => b.name)\n  ];\n\n  const selectBlock = (event) => {\n    const { value } = event.target;\n    if (value === 'default') {\n      onBlockSelected();\n      return;\n    }\n    onBlockSelected(event.target.value);\n  };\n\n  return (\n    <div>\n      <select value={currentBlock} onChange={selectBlock} aria-label=\"Block selector\">\n        { list.map((option, index) => (\n            <option key={index} value={option}>{option}</option>\n          )\n        )}\n      </select>\n    </div>\n  );\n}\n\n","import React from \"react\";\nimport styled from 'styled-components';\n\nimport { InfoBubble } from './Bubbles';\n\nconst DialogueBubble = styled.div`\n  width: auto;\n  background-color: #fff5da;\n  color: #34383c;\n  margin: 10px 10px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: default;\n  position: relative;\n`;\n\nconst DialogueContent = styled.div`\n`;\n\nconst DialogueSpeaker = styled.div`\n  margin-bottom: 5px;\n  font-weight: 500;\n`;\n\nconst DialogueOptionsList = styled.ol`\n  margin-left: 10px;\n  list-style-type: decimal;\n  list-style-position: inside;\n`;\n\nconst DialogueOption = styled.li`\n  position: relative;\n  opacity: ${p => p.optionSelected !== undefined && p.optionSelected !== p.index ? 0.5 : 1 };\n  ${p => p.optionSelected === p.index ? 'font-weight: 600;' : '' }\n  cursor: ${p => p.optionSelected === undefined ? 'pointer' : 'default' };\n  margin: 4px;\n\n  > span:hover {\n    ${p => p.optionSelected !== undefined ? '' : 'font-weight: 600;' }\n  }\n`;\n\nconst DialogueMetadataWrapper = styled.span`\n  color: #444;\n  font-weight: normal;\n  background-color: rgba(245,235,208, 1);\n  opacity: 0.8;\n  border-radius: 5px;\n  padding-right: 10px;\n  margin-left: 10px;\n\n  label {\n    margin-left: 10px;\n    font-weight: 500;\n  }\n`;\n\nexport default function DialogueEntry(props) {\n  const {\n    line,\n    onSelection,\n    showMetadata\n  } = props;\n\n  if (line === undefined) {\n    return <InfoBubble>DIALOGUE ENDED</InfoBubble>;\n  }\n\n  if (line.type === 'line') {\n    return <DialogueLine {...line} showMetadata={showMetadata}/>\n  }\n\n  if (line.type === 'options') {\n    return <DialogueOptions {...line} onSelection={onSelection} showMetadata={showMetadata}/>\n  }\n\n  return <InfoBubble>{line.text === '<DIALOGUE_CHANGED>' ? 'DIALOGUE CHANGED' : line.text }</InfoBubble>\n}\n\nfunction DialogueLine(props) {\n  const {\n    id,\n    tags,\n    speaker,\n    text,\n    showMetadata\n  } = props;\n\n  return (\n    <DialogueBubble>\n      { speaker ? <DialogueSpeaker>{speaker}</DialogueSpeaker> : undefined }\n      <DialogueContent>\n        {text} <DialogueMetadata id={id} tags={tags} isVisible={showMetadata}/>\n      </DialogueContent>\n    </DialogueBubble>\n  );\n}\n\nfunction DialogueOptions(props) {\n  const {\n    id,\n    tags,\n    speaker,\n    name,\n    options,\n    onSelection,\n    selected,\n    showMetadata\n  } = props;\n\n  const select = (option) => {\n    if (selected !== undefined) {\n      return;\n    }\n    onSelection(option);\n  };\n\n  return (\n    <DialogueBubble>\n      { speaker ? <DialogueSpeaker>{speaker}</DialogueSpeaker> : undefined }\n      <DialogueContent>\n        {name} <DialogueMetadata id={id} tags={tags} isVisible={showMetadata}/>\n        <DialogueOptionsList>\n          { options.map((option, index) => (\n            <DialogueOption\n              key={index}\n              optionSelected={selected}\n              index={index}\n            >\n              <span onClick={e => { e.stopPropagation(); select(index) }}>{option.label} <DialogueMetadata {...option} isVisible={showMetadata}/></span>\n\n            </DialogueOption>\n            ))}\n        </DialogueOptionsList>\n      </DialogueContent>\n    </DialogueBubble>\n  );\n}\n\nfunction DialogueMetadata({ id, tags, isVisible }) {\n  if (!isVisible || (id === undefined && tags === undefined )) {\n    return<span></span>;\n  }\n\n  return <DialogueMetadataWrapper aria-label=\"metadata\">\n    { id !== undefined ? <span aria-label=\"line id\"><label>id:</label> {id}</span>: undefined } { tags !== undefined ? <span aria-label=\"line tags\"><label>tags:</label> {tags.join(', ')}</span>: undefined }\n  </DialogueMetadataWrapper>\n}\n\n","import React, { useRef, useEffect } from \"react\";\nimport styled from 'styled-components';\n\nimport { InfoBubble } from './Bubbles';\nimport DialogueEntry from './DialogueEntry';\n\nconst InterpreterScreenWrapper = styled.div`\n  width: auto;\n  overflow: scroll;\n`;\n\nexport default function InterpreterTimeline(props) {\n  const {\n    timeline,\n    shouldShowExtraMetadata,\n    singleBubblePresentation,\n    addDialogueLine,\n    style,\n    dialogue,\n    chooseOption,\n  } = props;\n\n  const next = () => {\n    const line = dialogue.getContent();\n    if (line && line.type === 'options' && timeline.length > 0 && timeline[timeline.length - 1].type === 'options') {\n      return;\n    }\n\n    if (!line && !timeline[timeline.length - 1]) {\n      return;\n    }\n    addDialogueLine(line);\n  };\n\n  const choose = (option) => {\n    dialogue.choose(option);\n    chooseOption(option);\n    next();\n  };\n\n  const scrollableRef = useRef(null)\n\n  const scrollToBottom = () => {\n    scrollableRef.current.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n  useEffect(scrollToBottom, [timeline]);\n\n  return (\n      <InterpreterScreenWrapper onClick={next} style={style} aria-label=\"Interpreter Dialogue Timeline\">\n        {!timeline || !timeline.length ? <InfoBubble>Dialogue not started. Click for next line.</InfoBubble> : ''}\n        {\n          singleBubblePresentation ?\n            ( timeline.length ?  <DialogueEntry line={timeline[timeline.length - 1]} onSelection={choose} showMetadata={shouldShowExtraMetadata} /> : undefined )\n          :\n            timeline\n              .filter((line, key) => !(line && line.text === '<DIALOGUE_CHANGED>' && line.text === timeline[key - 1]?.text))\n              .map((line, key) => {\n                return <DialogueEntry line={line} key={key} onSelection={choose} showMetadata={shouldShowExtraMetadata}/>\n            })\n        }\n        <div ref={scrollableRef}/>\n      </InterpreterScreenWrapper>\n  );\n}\n\n","import React  from \"react\";\nimport styled from 'styled-components';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  // faSave,\n  faTimes,\n} from '@fortawesome/free-solid-svg-icons'\n\nconst DebugPaneWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  overflow: scroll;\n`;\n\nconst DebugPaneCloseButton = styled.div`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  cursor: pointer;\n`;\n\nconst DebugEntryTable = styled.table`\n  width: 90%;\n  margin: 10px;\n\n  thead > tr > td {\n    font-weight: 500;\n    padding-bottom: 5px;\n  }\n\n  tbody {\n    > tr:nth-child(even) {\n      background-color: #f3f3f3;\n    }\n    td {\n      padding: 2px 0px;\n    }\n  }\n`;\n\nexport default function DebugPane(properties) {\n  const {\n    events,\n    hideDebugPane,\n    ...props\n  } = properties;\n\n\n  const entries = events.reduce((entries, event) => {\n    const identifier = `${event.type}${event.data.name}`;\n    let record = entries[identifier];\n    if (!record) {\n      entries[identifier] = {\n        type: event.type,\n        name: event.data.name,\n        value: event.data.value,\n        eventTime: event.eventTime,\n      }\n      return entries;\n    }\n    record.eventTime = event.eventTime;\n\n    if (event.data.value) {\n      record.value = event.data.value;\n    }\n    return entries;\n  }, {});\n\n  const formatDate = (timestamp) => {\n    const date = new Date(timestamp);\n    return `${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()} ${date.toLocaleTimeString()}`;\n  };\n\n  return <DebugPaneWrapper aria-label=\"Debug pane\" {...props}>\n    <DebugPaneCloseButton>\n      <FontAwesomeIcon icon={faTimes} onClick={hideDebugPane} aria-label=\"Close debug pane\"/>\n    </DebugPaneCloseButton>\n\n    <DebugEntryTable>\n      <thead>\n        <tr>\n          <td>Type</td>\n          <td>Name</td>\n          <td>Value</td>\n          <td>Time</td>\n        </tr>\n      </thead>\n      <tbody>\n    {Object.keys(entries).map((key) => {\n      const entry = entries[key];\n      return <tr key={key}><td>{entry.type}</td><td>{entry.name}</td><td>{entry.value !== undefined ? entry.value.toString() : undefined}</td><td>{formatDate(entry.eventTime)}</td></tr>;\n    })}\n     </tbody>\n    </DebugEntryTable>\n  </DebugPaneWrapper>;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Interpreter as ClydeInterpreter } from 'clyde-interpreter';\nimport { parse } from 'clyde-parser';\n\nimport { InfoBubble, ErrorBubble } from './Bubbles';\nimport InterpreterToolbar from './InterpreterToolbar';\nimport InterpreterTimeline from './InterpreterTimeline';\nimport DebugPane from './DebugPane';\n\nimport SplitPane from '../screens/SplitPane';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nexport default function Interpreter(p) {\n  const {\n    content,\n    currentBlock,\n    timeline,\n    shouldShowExtraMetadata,\n    shouldShowDebugPane,\n    debugPaneDirection,\n    singleBubblePresentation,\n    clydeDocument,\n    setBlock,\n    addDialogueLine,\n    clearTimeline,\n    showExtraMetadata,\n    hideExtraMetadata,\n    showDebugPane,\n    hideDebugPane,\n    enableSingleBubbleDialogue,\n    disableSingleBubbleDialogue,\n    chooseOption,\n    notifyEvent,\n    clearEvents,\n    events,\n    ...props } = p;\n  const [lastContent, setLastContent] = useState('');\n  const [persistedDialogue, setDialogue] = useState();\n  let dialogue = persistedDialogue;\n  let doc;\n  let errorMessage;\n\n  const updateEventInfo = (data) => {\n    updateDebugInfo('event', data);\n  };\n\n  const updateVariableInfo = (data) => {\n    updateDebugInfo('variable', data);\n  };\n\n  const updateDebugInfo = (type, data) => {\n    notifyEvent({ type, data, eventTime: Date.now() });\n  };\n\n  try {\n    doc = parse(`${content || ''}`);\n\n    if (!dialogue || content !== lastContent) {\n      setLastContent(content);\n      dialogue = ClydeInterpreter(doc);\n      if (currentBlock) {\n        dialogue.start(currentBlock);\n        setBlock(currentBlock);\n      }\n      setDialogue(dialogue);\n\n      dialogue.on(dialogue.events.VARIABLE_CHANGED, updateVariableInfo);\n      dialogue.on(dialogue.events.EVENT_TRIGGERED, updateEventInfo);\n    }\n  } catch (e) {\n    errorMessage = e.message;\n    doc = parse(`${lastContent || ''}`);\n  }\n\n  return (\n    <Wrapper {...props} aria-label=\"Clyde interpreter\">\n      <InterpreterToolbar\n        doc={doc}\n        currentBlock={currentBlock}\n        timeline={timeline}\n        shouldShowExtraMetadata={shouldShowExtraMetadata}\n        shouldShowDebugPane={shouldShowDebugPane}\n        singleBubblePresentation={singleBubblePresentation}\n        setBlock={setBlock}\n        clearTimeline={clearTimeline}\n        showExtraMetadata={showExtraMetadata}\n        hideExtraMetadata={hideExtraMetadata}\n        showDebugPane={showDebugPane}\n        hideDebugPane={hideDebugPane}\n        enableSingleBubbleDialogue={enableSingleBubbleDialogue}\n        disableSingleBubbleDialogue={disableSingleBubbleDialogue}\n        addDialogueLine={addDialogueLine}\n        dialogue={dialogue}\n        chooseOption={chooseOption}\n        clearEvents={clearEvents}\n      />\n\n      <SplitPane\n        direction={debugPaneDirection}\n        defaultSizes={[80, 20]}\n        style={{height: 'calc(100% - 40px)'}}\n       >\n        { !errorMessage && content && content !== '' ?\n          <InterpreterTimeline\n            dialogue={dialogue}\n            currentBlock={currentBlock}\n            timeline={timeline}\n            shouldShowExtraMetadata={shouldShowExtraMetadata}\n            singleBubblePresentation={singleBubblePresentation}\n            setBlock={setBlock}\n            addDialogueLine={addDialogueLine}\n            clearTimeline={clearTimeline}\n            chooseOption={chooseOption}\n            />\n            : (errorMessage ? <ErrorBubble style={{ backgroundColor: '#eeefef' }}>{errorMessage}</ErrorBubble> :  <InfoBubble>Nothing to show.</InfoBubble>)}\n\n        { shouldShowDebugPane ?\n            <DebugPane events={events} hideDebugPane={hideDebugPane}/>\n        : undefined }\n      </SplitPane>\n    </Wrapper>\n  );\n}\n\nInterpreter.propTypes = {\n  currentBlock: PropTypes.string,\n  timeline: PropTypes.array,\n  shouldShowExtraMetadata: PropTypes.bool,\n  shouldShowDebugPane: PropTypes.bool,\n  singleBubblePresentation: PropTypes.bool,\n  clydeDocument: PropTypes.string,\n  setBlock: PropTypes.func,\n  addDialogueLine: PropTypes.func,\n  clearTimeline: PropTypes.func,\n  showExtraMetadata: PropTypes.func,\n  hideExtraMetadata: PropTypes.func,\n  showDebugPane: PropTypes.func,\n  hideDebugPane: PropTypes.func,\n  enableSingleBubbleDialogue: PropTypes.func,\n  disableSingleBubbleDialogue: PropTypes.func,\n};\n","import { LogicInterpreter } from'./logic_interpreter.js';\nimport { Memory } from './memory.js';\nimport { Events, events } from './events.js';\n\nexport { events } from './events.js';\n\nexport function Interpreter(doc, data, dictionary = {}) {\n  let textDictionary = dictionary;\n  const anchors = {\n  };\n  const listeners = Events();\n  const mem = Memory(listeners, data);\n  let stack;\n  const logic = LogicInterpreter(mem);\n\n\n  doc._index = 1;\n  doc.blocks.forEach((block, index) => {\n    block._index = index + 2;\n    anchors[block.name] = block;\n  });\n\n  const initializeStack = (root = doc) => {\n    stack = [{\n      current: root,\n      contentIndex: -1\n    }]\n  };\n\n  const nodeHandlers = {\n    'document': () => handleDocumentNode(),\n    'content': node => handleContentNode(node),\n    'options': node => handleOptionsNode(node),\n    'option': node => handleOptionNode(node),\n    'line': node => handleLineNode(node),\n    'action_content': node => handleActionContent(node),\n    'conditional_content': (node, fallback) => handleConditionalContent(node, fallback),\n    'variations': node => handleVariations(node),\n    'block': node => handleBlockNode(node),\n    'divert': node => handleDivert(node),\n    'assignments': node => handleAssignementNode(node),\n    'events': node => handleEventNode(node),\n    'error': node => { throw new Error(`Unkown node type \"${node.type}\"`) },\n  };\n\n  const variationHandlers = {\n    'cycle': (variations) => {\n      let current = mem.getInternalVariable(variations._index, -1);\n      if (current < variations.content.length - 1) {\n        current += 1;\n      } else {\n        current = 0\n      }\n      mem.setInternalVariable(variations._index, current);\n      return current;\n    },\n    'once': (variations) => {\n      const current = mem.getInternalVariable(variations._index, -1);\n      const index = current + 1;\n      if (index <= variations.content.length - 1) {\n        mem.setInternalVariable(variations._index, index);\n        return index;\n      }\n      return -1;\n    },\n    'sequence': (variations) => {\n      let current = mem.getInternalVariable(variations._index, -1);\n      if (current < variations.content.length - 1) {\n        current += 1;\n        mem.setInternalVariable(variations._index, current);\n      }\n      return current;\n    },\n    'shuffle': (variations, mode = 'sequence' ) => {\n      const SHUFFLE_VISITED_KEY = `${variations._index}_shuffle_visited`;\n      const LAST_VISITED_KEY = `${variations._index}_last_index`;\n      let visitedItems = mem.getInternalVariable(SHUFFLE_VISITED_KEY, []);\n      const remainingOptions = variations.content.filter(a => !visitedItems.includes(a._index));\n\n      if (remainingOptions.length === 0) {\n        if (mode === 'once') {\n          return -1;\n        }\n        if (mode === 'cycle') {\n          mem.setInternalVariable(SHUFFLE_VISITED_KEY, []);\n          return variationHandlers['shuffle'](variations, mode);\n        }\n        return mem.getInternalVariable(LAST_VISITED_KEY, -1);\n      }\n\n      const random = Math.floor(Math.random() * remainingOptions.length);\n      const index = variations.content.indexOf(remainingOptions[random]);\n\n      visitedItems.push(remainingOptions[random]._index);\n\n      mem.setInternalVariable(LAST_VISITED_KEY, index);\n      mem.setInternalVariable(SHUFFLE_VISITED_KEY, visitedItems);\n\n      return index;\n    },\n    'shuffle sequence': (variations) => {\n      return variationHandlers['shuffle'](variations, 'sequence');\n    },\n    'shuffle once': (variations) => {\n      return variationHandlers['shuffle'](variations, 'once');\n    },\n    'shuffle cycle': (variations) => {\n      return variationHandlers['shuffle'](variations, 'cycle');\n    }\n  };\n\n  const handleNextNode = (node, fallback) => (nodeHandlers[node.type] || nodeHandlers['error'])(node, fallback);\n\n  const generateIndex = () => (10 * stackHead().current._index) + stackHead().contentIndex;\n\n  const addToStack = (node) => {\n    if (stackHead().current !== node) {\n      stack.push({\n        current: node,\n        contentIndex: -1\n      })\n    }\n  };\n\n  const handleDocumentNode = () => {\n    const node = stackHead();\n    const contentIndex = node.contentIndex + 1;\n    if (contentIndex < node.current.content.length) {\n      node.contentIndex = contentIndex\n      return handleNextNode(node.current.content[contentIndex]);\n    }\n  }\n\n  const handleContentNode = (contentNode) => {\n    if (stackHead().current !== contentNode) {\n      if (!contentNode._index) {\n        contentNode._index = generateIndex();\n      }\n      stack.push({\n        current: contentNode,\n        contentIndex: -1\n      })\n    }\n\n    const node = stackHead();\n    const contentIndex = node.contentIndex + 1;\n    if (contentIndex < node.current.content.length) {\n      node.contentIndex = contentIndex\n      return handleNextNode(node.current.content[contentIndex]);\n    }\n    stack.pop();\n    return handleNextNode(stackHead().current);\n  };\n\n  const handleBlockNode = (block) => {\n    addToStack(block);\n\n    const node = stackHead();\n    const contentIndex = node.contentIndex + 1;\n\n    if (contentIndex < node.current.content.content.length) {\n      node.contentIndex = contentIndex\n      return handleNextNode(node.current.content.content[contentIndex]);\n    }\n  };\n\n  const handleDivert = (divert) => {\n    if (divert.target === '<parent>') {\n\n      while (!['document', 'block', 'option', 'options'].includes(stackHead().current.type)) {\n        stack.pop();\n      }\n\n      if (stack.length > 1) {\n        stack.pop();\n        return handleNextNode(stackHead().current);\n      }\n    } else if (divert.target === '<end>') {\n      initializeStack();\n      stackHead().contentIndex = stackHead().current.content.length;\n    } else {\n      return handleNextNode(anchors[divert.target]);\n    }\n  };\n\n  const handleAssignementNode = (assignment) => {\n    assignment.assignments.forEach(logic.handleAssignement)\n    return handleNextNode(stackHead().current);\n  };\n\n  const handleEventNode = (events) => {\n    events.events.forEach(event => {\n      listeners.triggerEvent(\n        listeners.events.EVENT_TRIGGERED,\n        { name: event.name });\n    });\n    return handleNextNode(stackHead().current);\n  };\n\n  const handleOptionsNode = (optionsNode) => {\n    if (!optionsNode._index) {\n      optionsNode._index = generateIndex();\n      mem.setInternalVariable('OPTIONS_COUNT', optionsNode.content.length);\n    }\n    addToStack(optionsNode);\n    const options = getVisibleOptions(optionsNode);\n    mem.setInternalVariable('OPTIONS_COUNT', options.length);\n\n    if (options.length === 0) {\n      stack.pop();\n      return handleNextNode(stackHead().current);\n    }\n\n    if (options.length === 1 && options[0].mode === 'fallback') {\n      selectOption(0);\n      return handleNextNode(stackHead().current);\n    }\n\n    return {\n      type: 'options',\n      speaker: optionsNode.speaker,\n      id: optionsNode.id,\n      tags: optionsNode.tags,\n      name: replaceVariables(translateText(optionsNode.name, optionsNode.id)),\n      options: options.map(t => t.type === 'action_content' ? t.content : t).map((t) => ({\n        label: replaceVariables(translateText(t.name, t.id)),\n        speaker: t.speaker,\n        tags: t.tags,\n        id: t.id\n      }))\n    };\n  };\n\n  const handleOptionNode = (_optionNode) => {\n    // this is called when the contents inside the option\n    // were read. option list default behavior is to quit\n    // so we need to remove both option and option list from the stack.\n    stack.pop();\n    stack.pop();\n    return handleNextNode(stackHead().current);\n  };\n\n  const handleVariations = (variations, attempt = 0 ) => {\n    if (!variations._index) {\n      variations._index = generateIndex();\n      variations.content.forEach((c, index) => {\n        c._index = generateIndex() * 100 + index;\n      });\n    }\n\n    const next = variationHandlers[variations.mode](variations);\n\n    if (next === -1 || attempt > variations.content.length) {\n      return handleNextNode(stackHead().current);\n    }\n\n    if (variations.content[next].content.length === 1 && variations.content[next].content[0].type === 'conditional_content') {\n      if (!logic.checkCondition(variations.content[next].content[0].conditions)) {\n        return handleVariations(variations, attempt + 1);\n      }\n    }\n\n    return handleNextNode(variations.content[next]);\n  };\n\n\n  const handleLineNode = (lineNode) => {\n    if (!lineNode._index) {\n      lineNode._index = generateIndex();\n    }\n    return {\n      type: 'line',\n      tags: lineNode.tags,\n      id: lineNode.id,\n      speaker: lineNode.speaker,\n      text: replaceVariables(translateText(lineNode.value, lineNode.id))\n    };\n  }\n\n  const handleActionContent = (actionNode) => {\n    handleAction(actionNode);\n    return handleNextNode(actionNode.content);\n  };\n\n  const handleAction = (actionNode) => {\n    if (actionNode.action.type === 'events') {\n      actionNode.action.events.forEach(event => {\n        listeners.triggerEvent(\n          listeners.events.EVENT_TRIGGERED,\n          { name: event.name });\n      });\n    } else {\n      actionNode.action.assignments.forEach(logic.handleAssignement)\n    }\n  }\n\n  const handleConditionalContent = (conditionalNode, fallbackNode = stackHead().current) => {\n    if (logic.checkCondition(conditionalNode.conditions)) {\n      return handleNextNode(conditionalNode.content);\n    }\n    return handleNextNode(fallbackNode);\n  };\n\n  const selectOption = (contentIndex) => {\n    const node = stackHead();\n    if (node.current.type === 'options') {\n      const content = getVisibleOptions(node.current);\n\n      if (contentIndex >= content.length) {\n        throw new Error(`Index ${contentIndex} not available.`)\n      }\n\n      mem.setAsAccessed(content[contentIndex]._index);\n      mem.setInternalVariable('OPTIONS_COUNT', getVisibleOptions(node.current).length);\n      content[contentIndex].content._index = content[contentIndex]._index;\n\n      if (content[contentIndex].type === 'action_content') {\n        handleAction(content[contentIndex]);\n        addToStack(content[contentIndex].content);\n        addToStack(content[contentIndex].content.content);\n      } else {\n        addToStack(content[contentIndex]);\n        addToStack(content[contentIndex].content);\n      }\n\n    } else {\n      throw new Error('Nothing to select.');\n    }\n  }\n\n  const stackHead = () => stack[stack.length - 1];\n\n  const getVisibleOptions = (options) => {\n    return options.content\n      .map(prepareOption)\n      .filter((t) => {\n        return t && !(t.mode === 'once' && mem.wasAlreadyAccessed(t._index));\n      });\n  };\n\n  const prepareOption = (option, index) => {\n    if (!option._index) {\n      option._index = generateIndex() * 100 + index;\n    }\n\n    if (option.type === 'conditional_content') {\n      option.content._index = option._index;\n      if (logic.checkCondition(option.conditions)) {\n        return prepareOption(option.content, index)\n      }\n      return;\n    }\n\n    if (option.type === 'action_content') {\n      option.content._index = option._index;\n      option.mode = option.content.mode;\n      const content = prepareOption(option.content, index);\n      if (!content) {\n        return\n      }\n      return option;\n    }\n    return option;\n  };\n\n  const translateText = (text, id) => {\n    if (id && textDictionary[id]) {\n      return textDictionary[id];\n    }\n    return text;\n  };\n\n  const replaceVariables = (text) => {\n    if (text) {\n      (text.match(/\\%([A-z0-9]*)\\%/g) || [])\n        .map(match => {\n          const name = match.replace(/\\%/g, '');\n          let value;\n          value = mem.getVariable(name);\n          return { name: match, value };\n        })\n        .forEach( variable => {\n          text = text.replace(variable.name, variable.value === undefined ? '' : variable.value);\n        });\n    }\n    return text;\n  };\n\n  initializeStack();\n\n  return {\n    events,\n    on(eventName, callback) {\n      return listeners.addListener(eventName, callback);\n    },\n    off(eventName, callback) {\n      listeners.removeListener(eventName, callback);\n    },\n    getData() {\n      return mem.getAll();\n    },\n    loadData(data) {\n      mem.load(data);\n    },\n    clearData() {\n      mem.clear();\n    },\n    loadDictionary(dictionary) {\n      textDictionary = dictionary;\n    },\n    getContent() {\n      return handleNextNode(stackHead().current)\n    },\n    choose(index) {\n      return selectOption(index)\n    },\n    setVariable(name, value) {\n      mem.setVariable(name, value);\n    },\n    getVariable(name) {\n      return mem.getVariable(name);\n    },\n    start(blockName) {\n      if (blockName) {\n        initializeStack(anchors[blockName]);\n      } else {\n        initializeStack();\n      }\n    }\n  }\n}\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ModalWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 9999;\n`;\n\nconst ModalInnerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  min-width: 500px;\n  min-height: 300px;\n  color: #333;\n  padding: 10px;\n`;\n\nconst ModalHeader = styled.div`\n  margin-bottom: 10px;\n  padding-bottom: 10px;\n  text-align: center;\n  border-bottom: 1px solid #ccc;\n`;\n\nconst ModalFooter = styled.div`\n  text-align: right;\n`;\n\nconst ModalContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ModalAction = styled.button`\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 8px 12px;\n\n  &:focus, &:hover {\n    background-color: #f1f1f1;\n  }\n`;\n\nexport default function Modal(props) {\n  const {\n    title,\n    actions,\n    children\n  } = props;\n\n  return (\n    <ModalWrapper>\n      <ModalInnerWrapper>\n        <ModalHeader>{title}</ModalHeader>\n        <ModalContent>{children}</ModalContent>\n        <ModalFooter>\n          {actions.map((action, key) => {\n            return <ModalAction key={key} onClick={action.onClick}>{action.label}</ModalAction>\n          })}\n        </ModalFooter>\n      </ModalInnerWrapper>\n    </ModalWrapper>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Modal from '../screens/Modal';\n\nconst Preference = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 4px 10px;\n\n  > input {\n    margin-right: 10px;\n  }\n\n  > select, > input[type=\"number\"] {\n    margin-left: 10px;\n  }\n`;\n\nexport default function EditorSettingsModal(props) {\n  const {\n    onCloseClick,\n    updatePreference,\n    preferences,\n  } = props;\n\n  const update = (item) => {\n    updatePreference(item.target.name, item.target.checked);\n  };\n\n  const updateNumber = (item) => {\n    updatePreference(item.target.name, Number(item.target.value));\n  };\n\n  const updateTheme = (item) => {\n    updatePreference(item.target.name, item.target.value);\n  };\n\n  const themes = [\n    { value: 'dracula', name: 'Dracula' },\n    { value: 'monokai', name: 'Monokai' },\n    { value: 'tomorrow_night_eighties', name: 'Tomorrow Night Eighties' },\n    { value: 'tomorrow', name: 'Tomorrow' },\n    { value: 'textmate', name: 'Textmate' },\n  ];\n\n  return  (\n  <Modal title=\"Editor preferences\" actions={[{ label: 'Close', onClick: () => onCloseClick() }]}>\n    <Preference>\n      <input\n        type=\"checkBox\"\n        name=\"highlightActiveLine\"\n        onChange={update}\n        checked={preferences.highlightActiveLine}\n      />\n      <label htmlFor=\"highlightActiveLine\">Highlight active line</label>\n    </Preference>\n    <Preference>\n      <input type=\"checkBox\"  name=\"showInvisibles\"\n        onChange={update}\n        checked={preferences.showInvisibles}\n    />\n    <label htmlFor=\"showInvisibles\">Show invisibles</label>\n    </Preference>\n    <Preference>\n      <input type=\"checkBox\"  name=\"vimMode\"\n        onChange={update}\n        checked={preferences.vimMode}\n    />\n    <label htmlFor=\"vimMode\">Enable vim mode</label>\n    </Preference>\n    <Preference>\n      <input type=\"checkBox\"  name=\"lineWrap\"\n        onChange={update}\n        checked={preferences.lineWrap}\n      />\n      <label htmlFor=\"line_wrap\">Enable line wrap</label>\n    </Preference>\n    <Preference>\n      <input type=\"checkBox\"  name=\"scrollPastEnd\"\n        onChange={update}\n        checked={preferences.scrollPastEnd}\n      />\n      <label htmlFor=\"scrollPastEnd\"></label> Enable scroll past end\n    </Preference>\n    <Preference>\n      <input type=\"checkBox\"  name=\"useSoftTabs\"\n        onChange={update}\n        checked={preferences.useSoftTabs}\n      />\n      <label htmlFor=\"useSoftTabs\">Enable soft tabs</label>\n    </Preference>\n    <Preference>\n      <label htmlFor=\"tabSize\">Tab size</label>\n      <input type=\"number\"  name=\"tabSize\" max=\"10\" min=\"1\" onChange={updateNumber} value={preferences.tabSize}/>\n    </Preference>\n    <Preference>\n      <label htmlFor=\"fontSize\">Font size</label>\n      <input type=\"number\" name=\"fontSize\" max=\"70\" min=\"1\" onChange={updateNumber} value={preferences.fontSize}/>px\n    </Preference>\n    <Preference>\n      <label htmlFor=\"theme\">Theme</label>\n      <select name=\"theme\" value={preferences.theme} onChange={updateTheme}>\n        { themes.map((theme, key) => <option key={key} value={theme.value}>{theme.name}</option>)}\n      </select>\n    </Preference>\n  </Modal>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCog,\n  faColumns,\n  faCode,\n  faEye,\n  faSlidersH,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport SplitPane from './SplitPane';\nimport DropDownMenu, { DropDownItem } from './DropdownMenu';\n\nimport Editor from '../editor/Editor';\nimport Interpreter from '../interpreter/Interpreter';\nimport EditorSettingsModal from '../editor/EditorSettingsModal';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  max-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 40px;\n  font-size: 1.5em;\n  color: #444;\n  padding-left: 10px;\n  align-items: center;\n`;\n\nconst IconWrapper = styled.span`\n  cursor: pointer;\n  position: relative;\n`;\n\nexport default function MainPanels(props) {\n  const {\n    // interface\n    isEditorEnabled = true,\n    isInterpreterEnabled = true,\n    toggleEditor,\n    toggleInterpreter,\n    interpreterSplitDirection = 'vertical',\n    changeInterpreterSplitDirection,\n    // editor\n    editorDefaultValue,\n    setDocumentContent,\n    editorPreferences,\n    updateEditorPreference,\n    // interpreter\n    currentBlock,\n    timeline,\n    shouldShowExtraMetadata,\n    shouldShowDebugPane,\n    singleBubblePresentation,\n    document: clydeDocument,\n    setBlock,\n    addDialogueLine,\n    clearTimeline,\n    showExtraMetadata,\n    hideExtraMetadata,\n    showDebugPane,\n    hideDebugPane,\n    enableSingleBubbleDialogue,\n    disableSingleBubbleDialogue,\n    chooseOption,\n    events,\n    notifyEvent,\n    clearEvents,\n  } = props;\n\n  const [isMenuVisible, setMenuVisibility] = useState(false);\n  const [isEditorSettingsVisible, setEditorSettingsVisibility] = useState(false);\n\n  const toggleSplitDirection = () => {\n    if (interpreterSplitDirection === 'vertical') {\n      changeInterpreterSplitDirection('horizontal');\n    } else {\n      changeInterpreterSplitDirection('vertical');\n    }\n  };\n\n  const toggleMenu = () => {\n    setMenuVisibility(!isMenuVisible);\n  };\n\n  const openEditorSettings = () => {\n    setEditorSettingsVisibility(true);\n  };\n\n  return (\n     <Wrapper>\n       <Header>\n         <IconWrapper>\n           <FontAwesomeIcon icon={faCog} onClick={toggleMenu} aria-label=\"Toggle settings menu\"/>\n           { isMenuVisible ? (\n              <DropDownMenu onClick={toggleMenu}>\n                <DropDownItem\n                  label=\"Change split direction\"\n                  onClick={toggleSplitDirection}\n                  icon={faColumns}\n                  text={`Split mode: ${interpreterSplitDirection}`}\n                />\n                { isInterpreterEnabled ?\n                    <DropDownItem\n                      label=\"Toggle editor\"\n                      onClick={() => toggleEditor(!isEditorEnabled)}\n                      icon={faCode}\n                      text={`${isEditorEnabled ? 'Hide' : 'Show' } editor`}\n                    /> : undefined\n                }\n                { isEditorEnabled ?\n                  <DropDownItem\n                    label=\"Toggle interpreter\"\n                    onClick={() => toggleInterpreter(!isInterpreterEnabled)}\n                    icon={faEye}\n                    text={`${isInterpreterEnabled ? 'Hide' : 'Show' } interpreter`}\n                  /> : undefined\n                }\n\n                <DropDownItem\n                  label=\"Editor preferences\"\n                  onClick={openEditorSettings}\n                  icon={faSlidersH}\n                  text=\"Editor preferences\"\n                />\n              </DropDownMenu>\n             ) : ''\n           }\n         </IconWrapper>\n        </Header>\n       <SplitPane\n         direction={interpreterSplitDirection}\n         defaultSizes={[50, 50]}\n         style={{height: 'calc(100% - 40px)'}}\n         aria-label=\"Main panels\">\n        { isEditorEnabled ?\n          <Editor\n              defaultValue={editorDefaultValue}\n              setDocumentContent={setDocumentContent}\n              notifyChange={addDialogueLine}\n              preferences={editorPreferences}\n           /> : undefined }\n        { isInterpreterEnabled ?\n           <Interpreter\n             content={editorDefaultValue}\n             currentBlock={currentBlock}\n             timeline={timeline}\n             shouldShowExtraMetadata={shouldShowExtraMetadata}\n             shouldShowDebugPane={shouldShowDebugPane}\n             singleBubblePresentation={singleBubblePresentation}\n             clydeDocument={clydeDocument}\n             setBlock={setBlock}\n             addDialogueLine={addDialogueLine}\n             clearTimeline={clearTimeline}\n             showExtraMetadata={showExtraMetadata}\n             hideExtraMetadata={hideExtraMetadata}\n             showDebugPane={showDebugPane}\n             hideDebugPane={hideDebugPane}\n             enableSingleBubbleDialogue={enableSingleBubbleDialogue}\n             disableSingleBubbleDialogue={disableSingleBubbleDialogue}\n             chooseOption={chooseOption}\n             events={events}\n             notifyEvent={notifyEvent}\n             clearEvents={clearEvents}\n         />: undefined }\n       </SplitPane>\n      { isEditorSettingsVisible ?\n        <EditorSettingsModal updatePreference={updateEditorPreference} preferences={editorPreferences} onCloseClick={() => setEditorSettingsVisibility(false)} />\n      : undefined }\n    </Wrapper>\n  );\n};\n\nMainPanels.propTypes = {\n  isEditorEnabled: PropTypes.bool,\n  isInterpreterEnabled: PropTypes.bool,\n  toggleProjectTree: PropTypes.func,\n  toggleEditor: PropTypes.func,\n  toggleInterpreter: PropTypes.func,\n  interpreterSplitDirection: PropTypes.string,\n  editorDefaultValue: PropTypes.string,\n  setDocumentContent: PropTypes.func,\n\n  currentBlock: PropTypes.string,\n  timeline: PropTypes.array,\n  shouldShowExtraMetadata: PropTypes.bool,\n  shouldShowDebugPane: PropTypes.bool,\n  singleBubblePresentation: PropTypes.bool,\n  clydeDocument: PropTypes.string,\n\n  setBlock: PropTypes.func,\n  addDialogueLine: PropTypes.func,\n  clearTimeline: PropTypes.func,\n  showExtraMetadata: PropTypes.func,\n  hideExtraMetadata: PropTypes.func,\n  showDebugPane: PropTypes.func,\n  hideDebugPane: PropTypes.func,\n  enableSingleBubbleDialogue: PropTypes.func,\n  disableSingleBubbleDialogue: PropTypes.func,\n\n  notifyEvent: PropTypes.func,\n  clearEvents: PropTypes.func,\n};\n\n","import { connect } from 'react-redux';\n\nimport MainPanels from './MainPanels';\n\nimport {\n  toggleEditor,\n  toggleInterpreter,\n  changeInterpreterSplitDirection\n} from '../redux/interface';\n\nimport {\n  setBlock,\n  addDialogueLine,\n  clearTimeline,\n  showExtraMetadata,\n  hideExtraMetadata,\n  showDebugPane,\n  hideDebugPane,\n  enableSingleBubbleDialogue,\n  disableSingleBubbleDialogue,\n  chooseOption,\n  notifyEvent,\n  clearEvents,\n} from '../redux/interpreter';\n\nimport {\n  setDocumentContent,\n  updatePreference\n} from '../redux/editor';\n\nconst mapStateToProps = (state, props) => ({\n  ...state.interfaceConfig,\n  editorDefaultValue: state.editor.currentValue,\n  editorPreferences: state.editor.preferences,\n  ...state.interpreter,\n  ...props\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleEditor: (state) => {\n    dispatch(toggleEditor({state}));\n  },\n  toggleInterpreter: (state) => {\n    dispatch(toggleInterpreter({state}));\n  },\n  changeInterpreterSplitDirection: (direction) => {\n    dispatch(changeInterpreterSplitDirection({direction}));\n  },\n  setBlock: (blockName) => {\n    dispatch(setBlock(blockName));\n  },\n  addDialogueLine: (line) => {\n    dispatch(addDialogueLine(line));\n  },\n  clearTimeline: () => {\n    dispatch(clearTimeline());\n  },\n  showExtraMetadata: () => {\n    dispatch(showExtraMetadata());\n  },\n  hideExtraMetadata: () => {\n    dispatch(hideExtraMetadata());\n  },\n  showDebugPane: () => {\n    dispatch(showDebugPane());\n  },\n  hideDebugPane: () => {\n    dispatch(hideDebugPane());\n  },\n  enableSingleBubbleDialogue: () => {\n    dispatch(enableSingleBubbleDialogue());\n  },\n  disableSingleBubbleDialogue: () => {\n    dispatch(disableSingleBubbleDialogue());\n  },\n  chooseOption: (optionIndex) => {\n    dispatch(chooseOption(optionIndex));\n  },\n  setDocumentContent: (content) => {\n    dispatch(setDocumentContent(content));\n  },\n  notifyEvent: (event) => {\n    dispatch(notifyEvent(event));\n  },\n  clearEvents: () => {\n    dispatch(clearEvents());\n  },\n  updateEditorPreference: (name, value) => {\n    dispatch(updatePreference({ name, value }));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainPanels);\n\n","export const APP_LOCAL_STORAGE_KEY = 'clyde_editor_data';\n\nexport const saveState =(state) => {\n  try {\n    localStorage.setItem(APP_LOCAL_STORAGE_KEY, JSON.stringify(state));\n  } catch (_e) {\n  }\n};\n\nexport const loadState = () => {\n  try {\n    const persistedSate = localStorage.getItem(APP_LOCAL_STORAGE_KEY);\n    if (persistedSate === null) {\n      return undefined;\n    }\n    return JSON.parse(persistedSate);\n  } catch (_e) {\n    return undefined;\n  }\n};\n\nexport const clearState = () => {\n  try {\n    localStorage.removeItem(APP_LOCAL_STORAGE_KEY);\n  } catch (_e) {\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { Provider } from 'react-redux';\n\nimport throttle from 'lodash/throttle';\n\nimport reducer from './redux/reducers';\nimport MainPanelsContainer from './screens/MainPanelsContainer';\n\nimport { loadState, saveState } from './storage/local-storage';\n\nconst load = () => {\n  const data = loadState() || { editor: {} };\n\n\n  if (!data.editor?.currentValue) {\n    data.editor.currentValue = `--\n--\n-- This is a sample dialogue.\n--\n\nNarrator: Hello there!\nPlayer: Hi!\nNarrator: What do you want to talk about?\n  + [Life]\n    -> about life <-\n  + [The universe]\n    -> about the universe <-\n  * [Everything else... #some_tag]\n    -> about everything else <-\n  + [Earth]\n    -> about earth <-\n  + [Nothing]\n    -> goodbye <-\n\n\n== about life\nPlayer: I want to talk about life!\nNarrator: Well! That's complicated...\n<-\n\n\n== about the universe\nPlayer: I want to talk about the universe!\n( shuffle\n  - Narrator: That's too complex!\n  - Narrator: Maybe another time.\n  - Narrator: It's big...\n              I think that's all.\n)\n<-\n\n\n== about everything else\nPlayer: What about everything else?\nNarrator: I don't have time for this... #bored\n<-\n\n== about earth\nPlayer: What do you know about earth?\n( sequence\n - Narrator: It's mostly harmless.\n - Narrator: This again?\n             I've already told you, mostly harmless.\n -\n   Narrator: Why do you want to know so much about it?\n   Player: I don't know...\n   Narrator: So.. don't ask!\n\n - Narrator: I'm not talking about this anymore.\n)\n<-\n\n== goodbye\n{ not alreadyIntroduced }\n  Narrator: It was nice to meet you!\n  Player: I can say the same. See you around!\n  { set alreadyIntroduced = true }\nPlayer: Bye!\nNarrator: Good bye!\n`;\n  }\n\n  return {\n    editor: data.editor,\n    interpreter: {\n      document: undefined,\n      events: [],\n      timeline: [],\n      ...data.interpreter\n    }\n  };\n};\n\nconst store = configureStore({\n  reducer,\n  devTools: process.env.NODE_ENV !== 'production',\n  preloadedState: load(),\n});\n\nstore.subscribe(throttle(() => {\n  const state = store.getState();\n  const {\n    shouldShowExtraMetadata,\n    shouldShowDebugPane,\n    debugPaneDirection,\n    singleBubblePresentation,\n  } = state.interpreter;\n\n  saveState({\n    editor: {\n      preferences: state.editor.preferences,\n      currentValue: state.editor.currentValue\n    },\n    interpreter: {\n      shouldShowExtraMetadata,\n      shouldShowDebugPane,\n      debugPaneDirection,\n      singleBubblePresentation,\n    },\n  });\n}, 1000));\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <MainPanelsContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","import App from './App';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  max-height: 100vh;\n  max-width: 1200px;\n  display: flex;\n  flex-direction: column;\n  padding: 10px 5px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h1`\n  font-size: 2em;\n  font-weight: 500;\n`;\n\nconst AboutBlock = styled.div`\n  font-family: 'Lato', sans-serif;\n  margin: 10px 40px;\n  p {\n    margin-bottom: 10px;\n  }\n\n  a {\n    margin: 5px 10px;\n  }\n`;\n\nconst AboutContent = styled.div`\n  margin-top: 30px;\n`;\n\nexport default function WebsiteApp() {\n  return (\n    <Wrapper>\n      <AboutBlock>\n        <Title>Clyde Dialogue Language</Title>\n        <AboutContent>\n          <p>\n            Clyde is a language for writing dialogues.\n            <a href=\"https://github.com/viniciusgerevini/clyde\">Github</a>\n            <a href=\"https://github.com/viniciusgerevini/clyde/blob/master/LANGUAGE.md\">Language Docs</a>\n            <a href=\"https://github.com/viniciusgerevini/clyde/tree/master/cli\">CLI</a>\n            <a href=\"https://github.com/viniciusgerevini/godot-clyde-dialogue\">Godot Plugin</a>\n          </p>\n        </AboutContent>\n\n      </AboutBlock>\n        <App/>\n    </Wrapper>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.css';\nimport './index.css';\n// import App from './App';\nimport App from './WebsiteApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}