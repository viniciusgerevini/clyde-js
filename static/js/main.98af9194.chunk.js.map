{"version":3,"sources":["redux/interface.js","redux/editor.js","redux/interpreter.js","redux/reducers.js","screens/SplitPane.js","screens/DropdownMenu.js","editor/clyde-ace-mode.js","editor/Editor.js","interpreter/Bubbles.js","interpreter/InterpreterToolbar.js","interpreter/DialogueEntry.js","interpreter/InterpreterTimeline.js","interpreter/DebugPane.js","interpreter/Interpreter.js","screens/Modal.js","editor/EditorSettingsModal.js","screens/MainPanels.js","screens/MainPanelsContainer.js","storage/local-storage.js","App.js","WebsiteApp.js","index.js"],"names":["toggleEditor","createAction","toggleInterpreter","changeInterpreterSplitDirection","interfaceReducers","createReducer","isEditorEnabled","isInterpreterEnabled","interpreterSplitDirection","state","action","payload","direction","setDocumentContent","updatePreference","editorReducers","currentValue","preferences","theme","fontSize","tabSize","highlightActiveLine","lineWrap","useSoftTabs","showInvisibles","scrollPastEnd","vimMode","name","value","setBlock","addDialogueLine","clearTimeline","showExtraMetadata","hideExtraMetadata","showDebugPane","hideDebugPane","enableSingleBubbleDialogue","disableSingleBubbleDialogue","chooseOption","notifyEvent","clearEvents","interpreterReducers","currentBlock","undefined","timeline","shouldShowExtraMetadata","shouldShowDebugPane","singleBubblePresentation","document","events","_action","length","type","selected","combineReducers","interfaceConfig","editor","interpreter","Wrapper","styled","div","props","Gutter","SplitPane","defaultSizes","style","children","Array","isArray","visibleChildren","filter","item","sizes","map","s","spaceUsed","reduce","acc","index","indexOf","lastIndex","size","Math","floor","fill","calculateSizes","panes","visibleIndex","push","React","cloneElement","key","flexBasis","flexGrow","ItemWrapper","DropDownMenu","onClick","Children","toArray","DropDownItem","label","icon","text","ClydeHighlightRules","literals","token","regex","logicalOperators","logicBlockEnd","next","logicBlockConstants","identifiers","this","$rules","logicBlock","assignmentBlock","eventBlock","normalizeRules","EditorWrapper","defaultConfig","Editor","defaultValue","notifyChange","useResizeObserver","ref","width","height","mode","onBeforeLoad","ace","define","acequire","exports","oop","TextHighlightRules","inherits","TextMode","Mode","HighlightRules","ClydeMode","$id","lineCommentStart","getNextLineIndent","line","tab","indent","$getIndent","tokens","getTokenizer","getLineTokens","match","onChange","editorProps","$blockScrolling","debounceChangePeriod","keyboardHandler","setOptions","showPrintMargin","wrapBehavioursEnabled","wrap","navigateWithinSoftTabs","InfoBubble","ErrorBubble","InterpreterToolbarWrapper","IconWrapper","span","InterpreterToolbar","properties","doc","dialogue","useState","isMenuVisible","setMenuVisibility","toggleMenu","forwardToNextOption","getContent","BlockList","onBlockSelected","blockName","start","faRedoAlt","title","faFastForward","faGhost","poltergeist","optionList","choice","random","options","choose","faHandSparkles","clearData","faComments","faComment","faCog","faReceipt","faBug","list","content","blocks","b","event","target","option","DialogueBubble","DialogueContent","DialogueSpeaker","DialogueOptionsList","ol","DialogueOption","li","p","optionSelected","DialogueMetadataWrapper","DialogueEntry","onSelection","showMetadata","DialogueLine","DialogueOptions","id","tags","speaker","DialogueMetadata","isVisible","e","stopPropagation","select","join","InterpreterScreenWrapper","InterpreterTimeline","scrollableRef","useRef","useEffect","current","scrollIntoView","behavior","DebugPaneWrapper","DebugPaneCloseButton","DebugEntryTable","table","DebugPane","entries","identifier","data","record","eventTime","formatDate","timestamp","date","Date","getFullYear","getMonth","getDate","toLocaleTimeString","faTimes","Object","keys","entry","toString","Interpreter","errorMessage","debugPaneDirection","clydeDocument","lastContent","setLastContent","persistedDialogue","setDialogue","updateDebugInfo","now","parse","ClydeInterpreter","on","VARIABLE_CHANGED","EVENT_TRIGGERED","message","backgroundColor","ModalWrapper","ModalInnerWrapper","ModalHeader","ModalFooter","ModalContent","ModalAction","button","Modal","actions","Preference","EditorSettingsModal","onCloseClick","update","checked","updateNumber","Number","htmlFor","max","min","Header","connect","editorDefaultValue","editorPreferences","dispatch","optionIndex","updateEditorPreference","isEditorSettingsVisible","setEditorSettingsVisibility","faColumns","faCode","faEye","faSlidersH","APP_LOCAL_STORAGE_KEY","store","configureStore","reducer","devTools","process","preloadedState","persistedSate","localStorage","getItem","JSON","_e","loadState","load","subscribe","throttle","getState","setItem","stringify","saveState","App","MainPanelsContainer","Title","h1","AboutBlock","AboutContent","WebsiteApp","href","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.98af9194.chunk.js","sourcesContent":["import { createAction, createReducer } from \"@reduxjs/toolkit\";\n\nexport const toggleEditor = createAction('editor/interface/toggle_editor');\nexport const toggleInterpreter = createAction('editor/interface/toggle_intepreter');\nexport const changeInterpreterSplitDirection = createAction('editor/interface/change_interpreter_split_direction');\n\nexport function createEmptyState() {\n  return {\n    isEditorEnabled: true,\n    isInterpreterEnabled: true,\n    interpreterSplitDirection: 'vertical'\n  };\n}\n\nconst toggleEditorReducer = (state, action) => {\n  state.isEditorEnabled = action.payload.state;\n  return state;\n};\n\nconst toggleInterpreterReducer = (state, action) => {\n  state.isInterpreterEnabled = action.payload.state;\n  return state;\n};\n\nconst changeInterpreterSplitDirectionReducer = (state, action) => {\n  state.interpreterSplitDirection = action.payload.direction;\n  return state;\n};\n\nconst interfaceReducers = createReducer(createEmptyState(), {\n  [toggleEditor]: toggleEditorReducer,\n  [toggleInterpreter]: toggleInterpreterReducer,\n  [changeInterpreterSplitDirection]: changeInterpreterSplitDirectionReducer,\n});\n\nexport default interfaceReducers;\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\n\nexport const setDocumentContent = createAction('editor/editor/set_document_content');\nexport const updatePreference = createAction('editor/editor/update_preference');\n\nexport function createEmptyState() {\n  return {\n    currentValue: '',\n    preferences: {\n      theme: 'dracula',\n      fontSize: 16,\n      tabSize: 4,\n      highlightActiveLine: false,\n      lineWrap: false,\n      useSoftTabs: true,\n      showInvisibles: false,\n      scrollPastEnd: false,\n      vimMode: false,\n    }\n  };\n}\n\nconst setDocumentContentReducer = (state, action) => {\n  state.currentValue = action.payload;\n  return state;\n};\n\nconst updatePreferenceReducer = (state, action) => {\n  state.preferences[action.payload.name] = action.payload.value;\n  return state;\n};\n\nconst editorReducers = createReducer(createEmptyState(), {\n  [setDocumentContent]: setDocumentContentReducer,\n  [updatePreference]: updatePreferenceReducer,\n});\n\nexport default editorReducers;\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\n\nexport const setBlock = createAction('editor/interpreter/set_dialogue_block');\nexport const addDialogueLine = createAction('editor/interpreter/add_dialogue_line');\nexport const clearTimeline = createAction('editor/interpreter/clear_timeline');\nexport const showExtraMetadata = createAction('editor/interpreter/show_metadata');\nexport const hideExtraMetadata = createAction('editor/interpreter/hide_metadata');\nexport const showDebugPane = createAction('editor/interpreter/show_debug_pane');\nexport const hideDebugPane = createAction('editor/interpreter/hide_debug_pane');\nexport const enableSingleBubbleDialogue = createAction('editor/interpreter/enable_single_bubble_dialogue');\nexport const disableSingleBubbleDialogue = createAction('editor/interpreter/disable_single_bubble_dialogue');\nexport const chooseOption = createAction('editor/interpreter/choose_option');\nexport const notifyEvent = createAction('editor/interpreter/notify_event');\nexport const clearEvents = createAction('editor/interpreter/clear_events');\n\n\nexport function createEmptyState() {\n  return {\n    currentBlock: undefined,\n    timeline: [],\n    shouldShowExtraMetadata: false,\n    shouldShowDebugPane: false,\n    singleBubblePresentation: false,\n    document: undefined,\n    events: []\n  };\n}\n\nconst setBlockReducer = (state, action) => {\n  state.currentBlock = action.payload;\n  return state;\n};\n\nconst addDialogueLineReducer = (state, action) => {\n  state.timeline = [...state.timeline, action.payload];\n  return state;\n};\n\nconst clearTimelineReducer = (state, _action) => {\n  state.timeline = [];\n  return state;\n};\n\nconst showExtraMetadataReducer = (state) => {\n  state.shouldShowExtraMetadata = true;\n  return state;\n};\n\nconst hideExtraMetadataReducer = (state) => {\n  state.shouldShowExtraMetadata = false;\n  return state;\n};\n\nconst showDebugPaneReducer = (state) => {\n  state.shouldShowDebugPane = true;\n  return state;\n};\n\nconst hideDebugPaneReducer = (state) => {\n  state.shouldShowDebugPane = false;\n  return state;\n};\n\nconst enableSingleBubbleDialogueReducer = (state) => {\n  state.singleBubblePresentation = true;\n  return state;\n};\n\nconst disableSingleBubbleDialogReducer = (state) => {\n  state.singleBubblePresentation = false;\n  return state;\n};\n\nconst chooseOptionReducer = (state, action) => {\n  if (!state.timeline.length || state.timeline[state.timeline.length -1].type !== 'options') {\n    return state;\n  }\n  state.timeline[state.timeline.length -1].selected = action.payload;\n  return state;\n};\n\nconst notifyEventReducer = (state, action) => {\n  state.events = [...state.events, action.payload];\n  return state;\n};\n\nconst clearEventsReducer = (state, _action) => {\n  state.events = [];\n  return state;\n};\n\nconst interpreterReducers = createReducer(createEmptyState(), {\n  [setBlock]: setBlockReducer,\n  [addDialogueLine]: addDialogueLineReducer,\n  [clearTimeline]: clearTimelineReducer,\n  [showExtraMetadata]: showExtraMetadataReducer,\n  [hideExtraMetadata]: hideExtraMetadataReducer,\n  [showDebugPane]: showDebugPaneReducer,\n  [hideDebugPane]: hideDebugPaneReducer,\n  [enableSingleBubbleDialogue]: enableSingleBubbleDialogueReducer,\n  [disableSingleBubbleDialogue]: disableSingleBubbleDialogReducer,\n  [chooseOption]: chooseOptionReducer,\n  [notifyEvent]: notifyEventReducer,\n  [clearEvents]: clearEventsReducer,\n});\n\nexport default interpreterReducers;\n","import { combineReducers } from 'redux';\nimport interfaceConfig from './interface';\nimport editor from './editor';\nimport interpreter from './interpreter';\n\nexport default combineReducers({\n  interfaceConfig,\n  editor,\n  interpreter\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst GUTTER_SIZE = 4;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: stretch;\n  flex-grow: 1;\n  height: auto;\n  flex-direction: ${props => props.direction === 'horizontal' ? 'column' : 'row' };\n  max-height: 100%;\n`;\n\nconst Gutter = styled.div`\n  background-color: #eee;\n  background-repeat: no-repeat;\n  background-position: 50%;\n  flex-basis: ${GUTTER_SIZE}px;\n  cursor: ${props => props.direction === 'horizontal' ? 'row-resize' : 'col-resize' };\n`;\n// TODO\n// - gutter drag resize\n// - make sure sizes are kept when items disappear\n\nexport default function SplitPane(props) {\n  const {\n    direction = 'vertical',\n    defaultSizes,\n    style\n  } = props;\n\n  const children = Array.isArray(props.children) ? props.children : [props.children];\n\n  const visibleChildren = children.filter(item => item && item !== '');\n\n  const calculateSizes = () => {\n    if (visibleChildren.length === 1) {\n      return ['100%'];\n    }\n\n    if (defaultSizes) {\n      let sizes = defaultSizes.map(s => `calc(${s}% - 2px)`);\n      if (defaultSizes.length === visibleChildren.length) {\n        return sizes;\n      }\n\n      const spaceUsed = visibleChildren.reduce((acc, item) => {\n        const index = children.indexOf(item);\n        return acc + defaultSizes[index];\n      }, 0);\n\n      if (spaceUsed < 100) {\n        const lastIndex = children.indexOf(visibleChildren[visibleChildren.length - 1]);\n        sizes[lastIndex] = `calc(${defaultSizes[lastIndex] + (100 - spaceUsed)}% - 2px)`\n      }\n\n      return sizes;\n    }\n\n    const size = Math.floor(100 / visibleChildren.length);\n    return Array(children.length).fill(`calc(${size}% - 2px)`);\n  };\n\n  const sizes = calculateSizes();\n\n  const panes = children.reduce((acc, item, index) => {\n    // console.log(item);\n    if (!item) {\n      return acc;\n    }\n\n    const visibleIndex = visibleChildren.indexOf(item);\n\n    if (visibleIndex > 0 && visibleIndex < (visibleChildren.length)) {\n      acc.push(<Gutter direction={direction}/>);\n    }\n\n    acc.push(React.cloneElement(item, {key: index, style: { flexBasis: sizes[index], flexGrow: 1}}));\n\n    return acc;\n  }, []);\n\n  return (\n    <Wrapper direction={direction} style={style}>\n      {panes.map((item, key) => React.cloneElement(item, {key}))}\n    </Wrapper>\n  );\n};\n\nSplitPane.propTypes = {\n  direction: PropTypes.string,\n  defaultSizes: PropTypes.array\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  display: 'flex';\n  flex-direction: column;\n  width: auto;\n  min-width: 230px;\n  z-index: 9999;\n  background-color: #fff;\n  font-size: 1rem;\n  padding: 10px 0px;\n  border: 1px solid #eee;\n  border-radius: 5px;\n`;\n\nconst ItemWrapper = styled.div`\n  padding: 6px 15px;\n  display: flex;\n  flex-direction: row;\n\n  &:hover {\n    background-color: #eee;\n  }\n\n  > svg {\n    flex-basis: 30px;\n    margin-right: 5px;\n  }\n`;\n\nexport default function DropDownMenu(props) {\n  const {\n    children,\n    onClick,\n    style\n  } = props;\n\n  return (\n    <Wrapper onClick={onClick} style={style}>\n      {React.Children.toArray(children)}\n    </Wrapper>\n  );\n};\n\nexport function DropDownItem(props) {\n  const {\n    label,\n    icon,\n    onClick,\n    text\n  } = props;\n\n  return (\n    <ItemWrapper\n      aria-label={label}\n      onClick={onClick}\n    >\n      <FontAwesomeIcon icon={icon}/> {text}\n    </ItemWrapper>\n  );\n}\n","export default function setupClydeMode(ace) {\n\n  ace.define('ace/mode/clyde_highlight_rules', ['require', 'exports', 'ace/lib/oop', 'ace/mode/text_highlight_rules'], (acequire, exports) => {\n    const oop = acequire('ace/lib/oop');\n    const TextHighlightRules = acequire('ace/mode/text_highlight_rules').TextHighlightRules;\n\n\n    oop.inherits(ClydeHighlightRules, TextHighlightRules);\n\n    exports.ClydeHighlightRules = ClydeHighlightRules;\n  });\n\n  ace.define('ace/mode/clyde', ['require', 'exports', 'ace/lib/oop', 'ace/mode/text', 'ace/mode/clyde_highlight_rules'], (acequire, exports) => {\n    const oop = acequire('ace/lib/oop');\n    const TextMode = acequire('ace/mode/text').Mode;\n    const HighlightRules = acequire('ace/mode/clyde_highlight_rules').ClydeHighlightRules;\n\n    const ClydeMode = function ClydeMode() {\n      this.$id = \"ace/mode/clyde\"\n      this.HighlightRules = HighlightRules;\n      this.lineCommentStart = '--';\n\n      this.getNextLineIndent = function(state, line, tab) {\n        let indent = this.$getIndent(line);\n\n        const { tokens } = this.getTokenizer().getLineTokens(line, state);\n\n        if (tokens.length && tokens[tokens.length-1].type === 'comment') {\n          return indent;\n        }\n\n        if (state === \"start\") {\n          const match = line.match(/^\\s*(\\(|\\*|\\+)/);\n          if (match) {\n            indent += tab;\n          }\n        }\n\n        return indent;\n      };\n    };\n\n    oop.inherits(ClydeMode, TextMode); // ACE's way of doing inheritance\n\n    exports.Mode = ClydeMode;\n  });\n};\n\n\n\nfunction ClydeHighlightRules() {\n  // regexp must not have capturing parentheses. Use (?:) instead.\n  // regexps are ordered -> the first match is used\n  const literals = [\n    { // boolean\n      token : 'constant.language.boolean',\n      regex : /(true|false)/,\n    },\n    { // numbers\n      token : 'constant.numeric',\n      regex : /[0-9,.]+/,\n    },\n    { // string\n      token : 'constant.string',\n      regex : /(\".*\")/,\n    },\n  ];\n\n  const logicalOperators = [\n    { // operators\n      token : 'keyword.operator',\n      regex : /(isnt|ISNT)/,\n    },\n    { // operators\n      token : 'keyword.operator',\n      regex : /(and|or|not|is|AND|OR|NOT|IS)/,\n    },\n    { // operators\n      token : 'keyword.operator',\n      regex : /(&&|\\|\\||<=|>=|==|!=)/,\n    },\n    { // operators\n      token : 'keyword.operator',\n      regex : /(\\*|\\+|-|\\^|\\/|%|<|>|!)/,\n    },\n  ]\n\n  const assignmentOperators = [\n    { // operators\n      token : 'keyword.operator',\n      regex : /(\\+=|-=|\\*=|\\/=|%=|\\^=)/,\n    },\n    { // operators\n      token : 'keyword.operator',\n      regex : /(=)/,\n    },\n  ];\n\n  const logicBlockEnd = [\n    { // assignment block end\n      token : 'keyword',\n      regex : /(\\})/,\n      next: 'start'\n    },\n  ];\n\n  const logicBlockConstants = [\n    {\n      token : 'support.constant',\n      regex : /OPTIONS_COUNT/\n    },\n  ];\n\n  const identifiers = [\n    {\n      token : 'identifier',\n      regex : /[a-zA-Z_][a-zA-Z0-9_]+/\n    },\n  ];\n\n\n  this.$rules = {\n    \"start\" : [\n      {\n        token : 'comment',\n        regex : /^\\s*--.*$/\n      },\n\n      { // Block definition\n        token : [\"keyword\", \"text\", \"variable\"],\n        regex : /^(==)(\\s*)([a-zA-Z0-9_ ]+)$/\n      },\n\n      { // Divert to end\n        token : [\"text\", \"keyword\", \"text\", \"support.constant\"],\n        regex : /(\\s*)(->)(\\s*)(END)$/\n      },\n\n      { // Divert\n        token : [\"text\", \"keyword\", \"text\", \"variable\"],\n        regex : /(\\s*)(->)(\\s*)([a-zA-Z0-9_ ]+)/\n      },\n\n      { // Divert to parent\n        token : [\"text\", \"keyword\", \"text\"],\n        regex : /(\\s*)(<-)(\\s*)/\n      },\n\n      { // Variations start\n        token : [\"text\", \"keyword\", \"text\", \"support.constant\"],\n        regex : /^(\\s*)(\\()(\\s*)((?:shuffle|once|sequence|shuffle once|shuffle sequence)*)$/\n      },\n\n      { // Variations end\n        token : [\"text\", \"keyword\"],\n        regex : /^(\\s*)(\\))$/\n      },\n\n      { // option\n        token : \"keyword.control\",\n        regex : /^(\\s*[*+>])/\n      },\n\n      { // Logic block start\n        token : \"keyword\",\n        regex : /(\\{)/,\n        next: 'logicBlock'\n      },\n\n      { // tag block\n        token : 'constant.string',\n        regex : /#[a-zA-Z0-9_]+/\n      },\n\n      { // Line\n        token : ['variable', 'text', 'variable'],\n        regex: /((?:\\s*[a-zA-Z0-9_] +:)?\\s*)(\".*\")((?:\\$[a-zA-Z0-9_]+)?)/,\n      },\n      { // Line\n        token : ['variable', 'text', 'variable'],\n        regex: /((?:\\s*[a-zA-Z0-9_ ]+:)?\\s*)([^\\r\\n#${]+)((?:\\$[a-zA-Z0-9_]+)?)/,\n      }\n    ],\n    logicBlock: [\n      { // assignment block start\n        token : 'keyword.control',\n        regex : /(set)/,\n        next: 'assignmentBlock'\n      },\n      { // event block start\n        token : 'keyword.control',\n        regex : /(trigger)/,\n        next: 'eventBlock'\n      },\n      { // event block start\n        token : 'keyword.control',\n        regex : /(when)/,\n      },\n      ...logicBlockConstants,\n      ...logicalOperators,\n      ...literals,\n      ...identifiers,\n      ...logicBlockEnd\n    ],\n    assignmentBlock: [\n      ...logicBlockConstants,\n      ...logicalOperators,\n      ...assignmentOperators,\n      ...literals,\n      ...identifiers,\n      ...logicBlockEnd\n    ],\n    eventBlock: [\n      ...identifiers,\n      ...logicBlockEnd\n    ],\n  };\n\n  this.normalizeRules();\n}\n","import React from \"react\";\nimport AceEditor from \"react-ace\";\nimport useResizeObserver from \"use-resize-observer\";\nimport styled from 'styled-components';\n\nimport \"ace-builds/src-noconflict/theme-dracula\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport \"ace-builds/src-noconflict/theme-tomorrow_night_eighties\";\nimport \"ace-builds/src-noconflict/theme-textmate\";\n\nimport \"ace-builds/src-noconflict/keybinding-vim\";\n\nimport ClydeMode from './clyde-ace-mode';\n\nconst EditorWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst defaultConfig = {\n  theme: 'dracula',\n  fontSize: 16,\n  tabSize: 4,\n  highlightActiveLine: false,\n  lineWrap: false,\n  useSoftTabs: true,\n  showInvisibles: false,\n  scrollPastEnd: false\n};\n\nexport default function Editor({ defaultValue, setDocumentContent, notifyChange, preferences = defaultConfig, ...props}) {\n  const { ref, width = 500, height = 500 } = useResizeObserver();\n\n  const onBeforeLoad = (editor) => {\n    ClydeMode(editor);\n  };\n\n  const onChange = (value) => {\n    setDocumentContent(value);\n    if (value !== defaultValue) {\n      notifyChange({ text: '<DIALOGUE_CHANGED>'});\n    }\n  };\n\n  return (\n    <EditorWrapper ref={ref} {...props} aria-label=\"Text editor\">\n      <AceEditor\n        defaultValue={defaultValue}\n        mode=\"clyde\"\n        theme={preferences.theme}\n        onBeforeLoad={onBeforeLoad}\n        onChange={onChange}\n        name=\"mainEditor\"\n        width={`${width}px`}\n        height={`${height}px`}\n        editorProps={{ $blockScrolling: true }}\n        fontSize={preferences.fontSize}\n        tabSize={preferences.tabSize}\n        debounceChangePeriod={1000}\n        keyboardHandler={preferences.vimMode ? 'vim' : undefined}\n        highlightActiveLine={preferences.highlightActiveLine}\n        setOptions={{\n          showPrintMargin: false,\n          wrapBehavioursEnabled: preferences.lineWrap,\n          wrap: preferences.lineWrap,\n          useSoftTabs: preferences.useSoftTabs,\n          showInvisibles: preferences.showInvisibles,\n          scrollPastEnd: preferences.scrollPastEnd,\n          navigateWithinSoftTabs: true,\n        }}\n      />\n    </EditorWrapper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const InfoBubble = styled.div `\n  text-align: center;\n  width: auto;\n  background-color: #eeeeee;\n  margin: 10px 10px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: default;\n`;\n\nexport const ErrorBubble = styled.div`\n  text-align: center;\n  width: auto;\n  background-color: #ffeeee;\n  margin: 10px 10px;\n  padding: 30px 20px;\n  border-radius: 5px;\n  cursor: default;\n  font-weight: 500;\n  display: flex;\n  justify-content: center;\n  white-space: pre-line;\n  line-height: 26px;\n`;\n","import React, { useState } from \"react\";\nimport styled from 'styled-components';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCog,\n  faRedoAlt,\n  faFastForward,\n  faBug,\n  faComment,\n  faComments,\n  faReceipt,\n  faGhost,\n  faHandSparkles,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport DropDownMenu, { DropDownItem } from '../screens/DropdownMenu';\n\nconst InterpreterToolbarWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  color: #444;\n  padding: 0px 10px;\n  height: 40px;\n\n  > svg {\n    cursor: pointer;\n    font-size: 1.5em;\n    margin: 0px 20px;\n    &:hover {\n      color: #555;\n    }\n  }\n`;\n\nconst IconWrapper = styled.span`\n  cursor: pointer;\n  position: relative;\n  margin: 0px 20px;\n  > svg {\n    font-size: 1.5em;\n    &:hover {\n      color: #222;\n    }\n  }\n`;\n\nexport default function InterpreterToolbar(properties) {\n  const {\n    doc,\n    currentBlock,\n    shouldShowExtraMetadata,\n    shouldShowDebugPane,\n    singleBubblePresentation,\n    setBlock,\n    clearTimeline,\n    showExtraMetadata,\n    hideExtraMetadata,\n    showDebugPane,\n    hideDebugPane,\n    enableSingleBubbleDialogue,\n    disableSingleBubbleDialogue,\n    dialogue,\n    addDialogueLine,\n    chooseOption,\n    clearEvents,\n  } = properties;\n\n  const [isMenuVisible, setMenuVisibility] = useState(false);\n\n  const selectBlock = (blockName) => {\n    setBlock(blockName);\n    clearTimeline();\n    dialogue.start(blockName);\n  };\n\n  const toggleMenu = () => {\n    setMenuVisibility(!isMenuVisible);\n  };\n\n  const toggleMultipleBubbles = () => {\n    if (singleBubblePresentation) {\n      disableSingleBubbleDialogue();\n    } else {\n      enableSingleBubbleDialogue();\n    }\n  };\n\n  const toggleExtraMetadata = () => {\n    if (shouldShowExtraMetadata) {\n      hideExtraMetadata();\n    } else {\n      showExtraMetadata();\n    }\n  };\n\n  const toggleDebugPane = () => {\n    if (shouldShowDebugPane) {\n      hideDebugPane();\n    } else {\n      showDebugPane();\n    }\n  };\n\n  const restart = () => {\n    dialogue.start(currentBlock);\n    clearTimeline();\n  };\n\n  const forwardToNextOption = () => {\n    const line = dialogue.getContent();\n    addDialogueLine(line);\n\n    if (!line || line.type === 'options') {\n      return line;\n    }\n\n    return forwardToNextOption();\n  };\n\n  const poltergeist = () => {\n    const optionList = forwardToNextOption();\n\n    if (!optionList) {\n      return;\n    }\n\n    const choice = Math.floor(Math.random() * optionList.options.length);\n    chooseOption(choice);\n    dialogue.choose(choice);\n\n    poltergeist();\n  };\n\n  const cleanMemory = () => {\n    dialogue.clearData();\n    addDialogueLine({ type: 'INTERPRETER_INFO', text: 'Memory cleared'})\n    dialogue.start(currentBlock);\n    clearEvents();\n    clearTimeline();\n  };\n\n  return (\n    <InterpreterToolbarWrapper>\n      <BlockList document={doc} currentBlock={currentBlock} onBlockSelected={selectBlock}/>\n      <FontAwesomeIcon icon={faRedoAlt} title=\"Restart dialogue\" onClick={restart}/>\n\n      <FontAwesomeIcon icon={faFastForward} title=\"Forward untill next choice\" onClick={forwardToNextOption}/>\n\n      <FontAwesomeIcon icon={faGhost} title=\"Execute Poltergeist mode (auto anwser)\" onClick={poltergeist}/>\n\n      <FontAwesomeIcon icon={faHandSparkles} title=\"Clear memory\" onClick={cleanMemory}/>\n\n      <FontAwesomeIcon\n        icon={ singleBubblePresentation ? faComments : faComment }\n        title={`Set ${singleBubblePresentation ? 'multi' : 'single'} bubble dialogue`}\n        onClick={toggleMultipleBubbles}\n      />\n\n      <IconWrapper>\n        <FontAwesomeIcon icon={faCog} onClick={toggleMenu} title=\"Interpreter options\"/>\n        { isMenuVisible ? (\n          <DropDownMenu onClick={toggleMenu} style={{ width: '280px' }}>\n\n            <DropDownItem\n              label=\"Toggle extra metadata\"\n              onClick={toggleExtraMetadata}\n              icon={faReceipt}\n              text={`${shouldShowExtraMetadata ? 'Hide' : 'Show'} metadata`}\n            />\n\n            <DropDownItem\n              label=\"Toggle debug pane\"\n              onClick={toggleDebugPane}\n              icon={faBug}\n              text={`${shouldShowDebugPane ? 'Hide' : 'Show'} debug pane`}\n              />\n           </DropDownMenu>\n          ) : ''\n        }\n      </IconWrapper>\n    </InterpreterToolbarWrapper>\n  );\n}\n\nfunction BlockList(props) {\n  const { document: doc, currentBlock, onBlockSelected } = props;\n  const list = [\n    ...(doc.content.length > 0 ? ['default'] : []),\n    ...doc.blocks.map(b => b.name)\n  ];\n\n  const selectBlock = (event) => {\n    const { value } = event.target;\n    if (value === 'default') {\n      onBlockSelected();\n      return;\n    }\n    onBlockSelected(event.target.value);\n  };\n\n  return (\n    <div>\n      <select value={currentBlock} onChange={selectBlock} aria-label=\"Block selector\">\n        { list.map((option, index) => (\n            <option key={index} value={option}>{option}</option>\n          )\n        )}\n      </select>\n    </div>\n  );\n}\n\n","import React from \"react\";\nimport styled from 'styled-components';\n\nimport { InfoBubble } from './Bubbles';\n\nconst DialogueBubble = styled.div`\n  width: auto;\n  background-color: #fff5da;\n  color: #34383c;\n  margin: 10px 10px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: default;\n  position: relative;\n`;\n\nconst DialogueContent = styled.div`\n`;\n\nconst DialogueSpeaker = styled.div`\n  margin-bottom: 5px;\n  font-weight: 500;\n`;\n\nconst DialogueOptionsList = styled.ol`\n  margin-left: 10px;\n  list-style-type: decimal;\n  list-style-position: inside;\n`;\n\nconst DialogueOption = styled.li`\n  position: relative;\n  opacity: ${p => p.optionSelected !== undefined && p.optionSelected !== p.index ? 0.5 : 1 };\n  ${p => p.optionSelected === p.index ? 'font-weight: 600;' : '' }\n  cursor: ${p => p.optionSelected === undefined ? 'pointer' : 'default' };\n  margin: 4px;\n\n  > span:hover {\n    ${p => p.optionSelected !== undefined ? '' : 'font-weight: 600;' }\n  }\n`;\n\nconst DialogueMetadataWrapper = styled.span`\n  color: #444;\n  font-weight: normal;\n  background-color: rgba(245,235,208, 1);\n  opacity: 0.8;\n  border-radius: 5px;\n  padding-right: 10px;\n  margin-left: 10px;\n\n  label {\n    margin-left: 10px;\n    font-weight: 500;\n  }\n`;\n\nexport default function DialogueEntry(props) {\n  const {\n    line,\n    onSelection,\n    showMetadata\n  } = props;\n\n  if (line === undefined) {\n    return <InfoBubble>DIALOGUE ENDED</InfoBubble>;\n  }\n\n  if (line.type === 'line') {\n    return <DialogueLine {...line} showMetadata={showMetadata}/>\n  }\n\n  if (line.type === 'options') {\n    return <DialogueOptions {...line} onSelection={onSelection} showMetadata={showMetadata}/>\n  }\n\n  return <InfoBubble>{line.text === '<DIALOGUE_CHANGED>' ? 'DIALOGUE CHANGED' : line.text }</InfoBubble>\n}\n\nfunction DialogueLine(props) {\n  const {\n    id,\n    tags,\n    speaker,\n    text,\n    showMetadata\n  } = props;\n\n  return (\n    <DialogueBubble>\n      { speaker ? <DialogueSpeaker>{speaker}</DialogueSpeaker> : undefined }\n      <DialogueContent>\n        {text} <DialogueMetadata id={id} tags={tags} isVisible={showMetadata}/>\n      </DialogueContent>\n    </DialogueBubble>\n  );\n}\n\nfunction DialogueOptions(props) {\n  const {\n    id,\n    tags,\n    speaker,\n    name,\n    options,\n    onSelection,\n    selected,\n    showMetadata\n  } = props;\n\n  const select = (option) => {\n    if (selected !== undefined) {\n      return;\n    }\n    onSelection(option);\n  };\n\n  return (\n    <DialogueBubble>\n      { speaker ? <DialogueSpeaker>{speaker}</DialogueSpeaker> : undefined }\n      <DialogueContent>\n        {name} <DialogueMetadata id={id} tags={tags} isVisible={showMetadata}/>\n        <DialogueOptionsList>\n          { options.map((option, index) => (\n            <DialogueOption\n              key={index}\n              optionSelected={selected}\n              index={index}\n            >\n              <span onClick={e => { e.stopPropagation(); select(index) }}>{option.label} <DialogueMetadata {...option} isVisible={showMetadata}/></span>\n\n            </DialogueOption>\n            ))}\n        </DialogueOptionsList>\n      </DialogueContent>\n    </DialogueBubble>\n  );\n}\n\nfunction DialogueMetadata({ id, tags, isVisible }) {\n  if (!isVisible || (id === undefined && tags === undefined )) {\n    return<span></span>;\n  }\n\n  return <DialogueMetadataWrapper aria-label=\"metadata\">\n    { id !== undefined ? <span aria-label=\"line id\"><label>id:</label> {id}</span>: undefined } { tags !== undefined ? <span aria-label=\"line tags\"><label>tags:</label> {tags.join(', ')}</span>: undefined }\n  </DialogueMetadataWrapper>\n}\n\n","import React, { useRef, useEffect } from \"react\";\nimport styled from 'styled-components';\n\nimport { InfoBubble } from './Bubbles';\nimport DialogueEntry from './DialogueEntry';\n\nconst InterpreterScreenWrapper = styled.div`\n  width: auto;\n  overflow: scroll;\n`;\n\nexport default function InterpreterTimeline(props) {\n  const {\n    timeline,\n    shouldShowExtraMetadata,\n    singleBubblePresentation,\n    addDialogueLine,\n    style,\n    dialogue,\n    chooseOption,\n  } = props;\n\n  const next = () => {\n    const line = dialogue.getContent();\n    if (line && line.type === 'options' && timeline.length > 0 && timeline[timeline.length - 1].type === 'options') {\n      return;\n    }\n\n    if (!line && !timeline[timeline.length - 1]) {\n      return;\n    }\n    addDialogueLine(line);\n  };\n\n  const choose = (option) => {\n    dialogue.choose(option);\n    chooseOption(option);\n    next();\n  };\n\n  const scrollableRef = useRef(null)\n\n  const scrollToBottom = () => {\n    scrollableRef.current.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n  useEffect(scrollToBottom, [timeline]);\n\n  return (\n      <InterpreterScreenWrapper onClick={next} style={style} aria-label=\"Interpreter Dialogue Timeline\">\n        {!timeline || !timeline.length ? <InfoBubble>Dialogue not started. Click for next line.</InfoBubble> : ''}\n        {\n          singleBubblePresentation ?\n            ( timeline.length ?  <DialogueEntry line={timeline[timeline.length - 1]} onSelection={choose} showMetadata={shouldShowExtraMetadata} /> : undefined )\n          :\n            timeline\n              .filter((line, key) => !(line && line.text === '<DIALOGUE_CHANGED>' && line.text === timeline[key - 1]?.text))\n              .map((line, key) => {\n                return <DialogueEntry line={line} key={key} onSelection={choose} showMetadata={shouldShowExtraMetadata}/>\n            })\n        }\n        <div ref={scrollableRef}/>\n      </InterpreterScreenWrapper>\n  );\n}\n\n","import React  from \"react\";\nimport styled from 'styled-components';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  // faSave,\n  faTimes,\n} from '@fortawesome/free-solid-svg-icons'\n\nconst DebugPaneWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  overflow: scroll;\n`;\n\nconst DebugPaneCloseButton = styled.div`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  cursor: pointer;\n`;\n\nconst DebugEntryTable = styled.table`\n  width: 90%;\n  margin: 10px;\n\n  thead > tr > td {\n    font-weight: 500;\n    padding-bottom: 5px;\n  }\n\n  tbody {\n    > tr:nth-child(even) {\n      background-color: #f3f3f3;\n    }\n    td {\n      padding: 2px 0px;\n    }\n  }\n`;\n\nexport default function DebugPane(properties) {\n  const {\n    events,\n    hideDebugPane,\n    ...props\n  } = properties;\n\n\n  const entries = events.reduce((entries, event) => {\n    const identifier = `${event.type}${event.data.name}`;\n    let record = entries[identifier];\n    if (!record) {\n      entries[identifier] = {\n        type: event.type,\n        name: event.data.name,\n        value: event.data.value,\n        eventTime: event.eventTime,\n      }\n      return entries;\n    }\n    record.eventTime = event.eventTime;\n\n    if (event.data.value) {\n      record.value = event.data.value;\n    }\n    return entries;\n  }, {});\n\n  const formatDate = (timestamp) => {\n    const date = new Date(timestamp);\n    return `${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()} ${date.toLocaleTimeString()}`;\n  };\n\n  return <DebugPaneWrapper aria-label=\"Debug pane\" {...props}>\n    <DebugPaneCloseButton>\n      <FontAwesomeIcon icon={faTimes} onClick={hideDebugPane} aria-label=\"Close debug pane\"/>\n    </DebugPaneCloseButton>\n\n    <DebugEntryTable>\n      <thead>\n        <tr>\n          <td>Type</td>\n          <td>Name</td>\n          <td>Value</td>\n          <td>Time</td>\n        </tr>\n      </thead>\n      <tbody>\n    {Object.keys(entries).map((key) => {\n      const entry = entries[key];\n      return <tr key={key}><td>{entry.type}</td><td>{entry.name}</td><td>{entry.value !== undefined ? entry.value.toString() : undefined}</td><td>{formatDate(entry.eventTime)}</td></tr>;\n    })}\n     </tbody>\n    </DebugEntryTable>\n  </DebugPaneWrapper>;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Interpreter as ClydeInterpreter } from '@clyde-lang/interpreter';\nimport { parse } from '@clyde-lang/parser';\n\nimport { InfoBubble, ErrorBubble } from './Bubbles';\nimport InterpreterToolbar from './InterpreterToolbar';\nimport InterpreterTimeline from './InterpreterTimeline';\nimport DebugPane from './DebugPane';\n\nimport SplitPane from '../screens/SplitPane';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nexport default function Interpreter(p) {\n  const {\n    content,\n    currentBlock,\n    timeline,\n    shouldShowExtraMetadata,\n    shouldShowDebugPane,\n    debugPaneDirection,\n    singleBubblePresentation,\n    clydeDocument,\n    setBlock,\n    addDialogueLine,\n    clearTimeline,\n    showExtraMetadata,\n    hideExtraMetadata,\n    showDebugPane,\n    hideDebugPane,\n    enableSingleBubbleDialogue,\n    disableSingleBubbleDialogue,\n    chooseOption,\n    notifyEvent,\n    clearEvents,\n    events,\n    ...props } = p;\n  const [lastContent, setLastContent] = useState('');\n  const [persistedDialogue, setDialogue] = useState();\n  let dialogue = persistedDialogue;\n  let doc;\n  let errorMessage;\n\n  const updateEventInfo = (data) => {\n    updateDebugInfo('event', data);\n  };\n\n  const updateVariableInfo = (data) => {\n    updateDebugInfo('variable', data);\n  };\n\n  const updateDebugInfo = (type, data) => {\n    notifyEvent({ type, data, eventTime: Date.now() });\n  };\n\n  try {\n    doc = parse(`${content || ''}`);\n\n    if (!dialogue || content !== lastContent) {\n      setLastContent(content);\n      dialogue = ClydeInterpreter(doc);\n      if (currentBlock) {\n        dialogue.start(currentBlock);\n        setBlock(currentBlock);\n      }\n      setDialogue(dialogue);\n\n      dialogue.on(dialogue.events.VARIABLE_CHANGED, updateVariableInfo);\n      dialogue.on(dialogue.events.EVENT_TRIGGERED, updateEventInfo);\n    }\n  } catch (e) {\n    errorMessage = e.message;\n    doc = parse(`${lastContent || ''}`);\n  }\n\n  return (\n    <Wrapper {...props} aria-label=\"Clyde interpreter\">\n      <InterpreterToolbar\n        doc={doc}\n        currentBlock={currentBlock}\n        timeline={timeline}\n        shouldShowExtraMetadata={shouldShowExtraMetadata}\n        shouldShowDebugPane={shouldShowDebugPane}\n        singleBubblePresentation={singleBubblePresentation}\n        setBlock={setBlock}\n        clearTimeline={clearTimeline}\n        showExtraMetadata={showExtraMetadata}\n        hideExtraMetadata={hideExtraMetadata}\n        showDebugPane={showDebugPane}\n        hideDebugPane={hideDebugPane}\n        enableSingleBubbleDialogue={enableSingleBubbleDialogue}\n        disableSingleBubbleDialogue={disableSingleBubbleDialogue}\n        addDialogueLine={addDialogueLine}\n        dialogue={dialogue}\n        chooseOption={chooseOption}\n        clearEvents={clearEvents}\n      />\n\n      <SplitPane\n        direction={debugPaneDirection}\n        defaultSizes={[80, 20]}\n        style={{height: 'calc(100% - 40px)'}}\n       >\n        { !errorMessage && content && content !== '' ?\n          <InterpreterTimeline\n            dialogue={dialogue}\n            currentBlock={currentBlock}\n            timeline={timeline}\n            shouldShowExtraMetadata={shouldShowExtraMetadata}\n            singleBubblePresentation={singleBubblePresentation}\n            setBlock={setBlock}\n            addDialogueLine={addDialogueLine}\n            clearTimeline={clearTimeline}\n            chooseOption={chooseOption}\n            />\n            : (errorMessage ? <ErrorBubble style={{ backgroundColor: '#eeefef' }}>{errorMessage}</ErrorBubble> :  <InfoBubble>Nothing to show.</InfoBubble>)}\n\n        { shouldShowDebugPane ?\n            <DebugPane events={events} hideDebugPane={hideDebugPane}/>\n        : undefined }\n      </SplitPane>\n    </Wrapper>\n  );\n}\n\nInterpreter.propTypes = {\n  currentBlock: PropTypes.string,\n  timeline: PropTypes.array,\n  shouldShowExtraMetadata: PropTypes.bool,\n  shouldShowDebugPane: PropTypes.bool,\n  singleBubblePresentation: PropTypes.bool,\n  clydeDocument: PropTypes.string,\n  setBlock: PropTypes.func,\n  addDialogueLine: PropTypes.func,\n  clearTimeline: PropTypes.func,\n  showExtraMetadata: PropTypes.func,\n  hideExtraMetadata: PropTypes.func,\n  showDebugPane: PropTypes.func,\n  hideDebugPane: PropTypes.func,\n  enableSingleBubbleDialogue: PropTypes.func,\n  disableSingleBubbleDialogue: PropTypes.func,\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ModalWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 9999;\n`;\n\nconst ModalInnerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  min-width: 500px;\n  min-height: 300px;\n  color: #333;\n  padding: 10px;\n`;\n\nconst ModalHeader = styled.div`\n  margin-bottom: 10px;\n  padding-bottom: 10px;\n  text-align: center;\n  border-bottom: 1px solid #ccc;\n`;\n\nconst ModalFooter = styled.div`\n  text-align: right;\n`;\n\nconst ModalContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ModalAction = styled.button`\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 8px 12px;\n\n  &:focus, &:hover {\n    background-color: #f1f1f1;\n  }\n`;\n\nexport default function Modal(props) {\n  const {\n    title,\n    actions,\n    children\n  } = props;\n\n  return (\n    <ModalWrapper>\n      <ModalInnerWrapper>\n        <ModalHeader>{title}</ModalHeader>\n        <ModalContent>{children}</ModalContent>\n        <ModalFooter>\n          {actions.map((action, key) => {\n            return <ModalAction key={key} onClick={action.onClick}>{action.label}</ModalAction>\n          })}\n        </ModalFooter>\n      </ModalInnerWrapper>\n    </ModalWrapper>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Modal from '../screens/Modal';\n\nconst Preference = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 4px 10px;\n\n  > input {\n    margin-right: 10px;\n  }\n\n  > select, > input[type=\"number\"] {\n    margin-left: 10px;\n  }\n`;\n\nexport default function EditorSettingsModal(props) {\n  const {\n    onCloseClick,\n    updatePreference,\n    preferences,\n  } = props;\n\n  const update = (item) => {\n    updatePreference(item.target.name, item.target.checked);\n  };\n\n  const updateNumber = (item) => {\n    updatePreference(item.target.name, Number(item.target.value));\n  };\n\n  const updateTheme = (item) => {\n    updatePreference(item.target.name, item.target.value);\n  };\n\n  const themes = [\n    { value: 'dracula', name: 'Dracula' },\n    { value: 'monokai', name: 'Monokai' },\n    { value: 'tomorrow_night_eighties', name: 'Tomorrow Night Eighties' },\n    { value: 'tomorrow', name: 'Tomorrow' },\n    { value: 'textmate', name: 'Textmate' },\n  ];\n\n  return  (\n  <Modal title=\"Editor preferences\" actions={[{ label: 'Close', onClick: () => onCloseClick() }]}>\n    <Preference>\n      <input\n        type=\"checkBox\"\n        name=\"highlightActiveLine\"\n        onChange={update}\n        checked={preferences.highlightActiveLine}\n      />\n      <label htmlFor=\"highlightActiveLine\">Highlight active line</label>\n    </Preference>\n    <Preference>\n      <input type=\"checkBox\"  name=\"showInvisibles\"\n        onChange={update}\n        checked={preferences.showInvisibles}\n    />\n    <label htmlFor=\"showInvisibles\">Show invisibles</label>\n    </Preference>\n    <Preference>\n      <input type=\"checkBox\"  name=\"vimMode\"\n        onChange={update}\n        checked={preferences.vimMode}\n    />\n    <label htmlFor=\"vimMode\">Enable vim mode</label>\n    </Preference>\n    <Preference>\n      <input type=\"checkBox\"  name=\"lineWrap\"\n        onChange={update}\n        checked={preferences.lineWrap}\n      />\n      <label htmlFor=\"line_wrap\">Enable line wrap</label>\n    </Preference>\n    <Preference>\n      <input type=\"checkBox\"  name=\"scrollPastEnd\"\n        onChange={update}\n        checked={preferences.scrollPastEnd}\n      />\n      <label htmlFor=\"scrollPastEnd\"></label> Enable scroll past end\n    </Preference>\n    <Preference>\n      <input type=\"checkBox\"  name=\"useSoftTabs\"\n        onChange={update}\n        checked={preferences.useSoftTabs}\n      />\n      <label htmlFor=\"useSoftTabs\">Enable soft tabs</label>\n    </Preference>\n    <Preference>\n      <label htmlFor=\"tabSize\">Tab size</label>\n      <input type=\"number\"  name=\"tabSize\" max=\"10\" min=\"1\" onChange={updateNumber} value={preferences.tabSize}/>\n    </Preference>\n    <Preference>\n      <label htmlFor=\"fontSize\">Font size</label>\n      <input type=\"number\" name=\"fontSize\" max=\"70\" min=\"1\" onChange={updateNumber} value={preferences.fontSize}/>px\n    </Preference>\n    <Preference>\n      <label htmlFor=\"theme\">Theme</label>\n      <select name=\"theme\" value={preferences.theme} onChange={updateTheme}>\n        { themes.map((theme, key) => <option key={key} value={theme.value}>{theme.name}</option>)}\n      </select>\n    </Preference>\n  </Modal>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCog,\n  faColumns,\n  faCode,\n  faEye,\n  faSlidersH,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport SplitPane from './SplitPane';\nimport DropDownMenu, { DropDownItem } from './DropdownMenu';\n\nimport Editor from '../editor/Editor';\nimport Interpreter from '../interpreter/Interpreter';\nimport EditorSettingsModal from '../editor/EditorSettingsModal';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  max-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 40px;\n  font-size: 1.5em;\n  color: #444;\n  padding-left: 10px;\n  align-items: center;\n`;\n\nconst IconWrapper = styled.span`\n  cursor: pointer;\n  position: relative;\n`;\n\nexport default function MainPanels(props) {\n  const {\n    // interface\n    isEditorEnabled = true,\n    isInterpreterEnabled = true,\n    toggleEditor,\n    toggleInterpreter,\n    interpreterSplitDirection = 'vertical',\n    changeInterpreterSplitDirection,\n    // editor\n    editorDefaultValue,\n    setDocumentContent,\n    editorPreferences,\n    updateEditorPreference,\n    // interpreter\n    currentBlock,\n    timeline,\n    shouldShowExtraMetadata,\n    shouldShowDebugPane,\n    singleBubblePresentation,\n    document: clydeDocument,\n    setBlock,\n    addDialogueLine,\n    clearTimeline,\n    showExtraMetadata,\n    hideExtraMetadata,\n    showDebugPane,\n    hideDebugPane,\n    enableSingleBubbleDialogue,\n    disableSingleBubbleDialogue,\n    chooseOption,\n    events,\n    notifyEvent,\n    clearEvents,\n  } = props;\n\n  const [isMenuVisible, setMenuVisibility] = useState(false);\n  const [isEditorSettingsVisible, setEditorSettingsVisibility] = useState(false);\n\n  const toggleSplitDirection = () => {\n    if (interpreterSplitDirection === 'vertical') {\n      changeInterpreterSplitDirection('horizontal');\n    } else {\n      changeInterpreterSplitDirection('vertical');\n    }\n  };\n\n  const toggleMenu = () => {\n    setMenuVisibility(!isMenuVisible);\n  };\n\n  const openEditorSettings = () => {\n    setEditorSettingsVisibility(true);\n  };\n\n  return (\n     <Wrapper>\n       <Header>\n         <IconWrapper>\n           <FontAwesomeIcon icon={faCog} onClick={toggleMenu} aria-label=\"Toggle settings menu\"/>\n           { isMenuVisible ? (\n              <DropDownMenu onClick={toggleMenu}>\n                <DropDownItem\n                  label=\"Change split direction\"\n                  onClick={toggleSplitDirection}\n                  icon={faColumns}\n                  text={`Split mode: ${interpreterSplitDirection}`}\n                />\n                { isInterpreterEnabled ?\n                    <DropDownItem\n                      label=\"Toggle editor\"\n                      onClick={() => toggleEditor(!isEditorEnabled)}\n                      icon={faCode}\n                      text={`${isEditorEnabled ? 'Hide' : 'Show' } editor`}\n                    /> : undefined\n                }\n                { isEditorEnabled ?\n                  <DropDownItem\n                    label=\"Toggle interpreter\"\n                    onClick={() => toggleInterpreter(!isInterpreterEnabled)}\n                    icon={faEye}\n                    text={`${isInterpreterEnabled ? 'Hide' : 'Show' } interpreter`}\n                  /> : undefined\n                }\n\n                <DropDownItem\n                  label=\"Editor preferences\"\n                  onClick={openEditorSettings}\n                  icon={faSlidersH}\n                  text=\"Editor preferences\"\n                />\n              </DropDownMenu>\n             ) : ''\n           }\n         </IconWrapper>\n        </Header>\n       <SplitPane\n         direction={interpreterSplitDirection}\n         defaultSizes={[50, 50]}\n         style={{height: 'calc(100% - 40px)'}}\n         aria-label=\"Main panels\">\n        { isEditorEnabled ?\n          <Editor\n              defaultValue={editorDefaultValue}\n              setDocumentContent={setDocumentContent}\n              notifyChange={addDialogueLine}\n              preferences={editorPreferences}\n           /> : undefined }\n        { isInterpreterEnabled ?\n           <Interpreter\n             content={editorDefaultValue}\n             currentBlock={currentBlock}\n             timeline={timeline}\n             shouldShowExtraMetadata={shouldShowExtraMetadata}\n             shouldShowDebugPane={shouldShowDebugPane}\n             singleBubblePresentation={singleBubblePresentation}\n             clydeDocument={clydeDocument}\n             setBlock={setBlock}\n             addDialogueLine={addDialogueLine}\n             clearTimeline={clearTimeline}\n             showExtraMetadata={showExtraMetadata}\n             hideExtraMetadata={hideExtraMetadata}\n             showDebugPane={showDebugPane}\n             hideDebugPane={hideDebugPane}\n             enableSingleBubbleDialogue={enableSingleBubbleDialogue}\n             disableSingleBubbleDialogue={disableSingleBubbleDialogue}\n             chooseOption={chooseOption}\n             events={events}\n             notifyEvent={notifyEvent}\n             clearEvents={clearEvents}\n         />: undefined }\n       </SplitPane>\n      { isEditorSettingsVisible ?\n        <EditorSettingsModal updatePreference={updateEditorPreference} preferences={editorPreferences} onCloseClick={() => setEditorSettingsVisibility(false)} />\n      : undefined }\n    </Wrapper>\n  );\n};\n\nMainPanels.propTypes = {\n  isEditorEnabled: PropTypes.bool,\n  isInterpreterEnabled: PropTypes.bool,\n  toggleProjectTree: PropTypes.func,\n  toggleEditor: PropTypes.func,\n  toggleInterpreter: PropTypes.func,\n  interpreterSplitDirection: PropTypes.string,\n  editorDefaultValue: PropTypes.string,\n  setDocumentContent: PropTypes.func,\n\n  currentBlock: PropTypes.string,\n  timeline: PropTypes.array,\n  shouldShowExtraMetadata: PropTypes.bool,\n  shouldShowDebugPane: PropTypes.bool,\n  singleBubblePresentation: PropTypes.bool,\n  clydeDocument: PropTypes.string,\n\n  setBlock: PropTypes.func,\n  addDialogueLine: PropTypes.func,\n  clearTimeline: PropTypes.func,\n  showExtraMetadata: PropTypes.func,\n  hideExtraMetadata: PropTypes.func,\n  showDebugPane: PropTypes.func,\n  hideDebugPane: PropTypes.func,\n  enableSingleBubbleDialogue: PropTypes.func,\n  disableSingleBubbleDialogue: PropTypes.func,\n\n  notifyEvent: PropTypes.func,\n  clearEvents: PropTypes.func,\n};\n\n","import { connect } from 'react-redux';\n\nimport MainPanels from './MainPanels';\n\nimport {\n  toggleEditor,\n  toggleInterpreter,\n  changeInterpreterSplitDirection\n} from '../redux/interface';\n\nimport {\n  setBlock,\n  addDialogueLine,\n  clearTimeline,\n  showExtraMetadata,\n  hideExtraMetadata,\n  showDebugPane,\n  hideDebugPane,\n  enableSingleBubbleDialogue,\n  disableSingleBubbleDialogue,\n  chooseOption,\n  notifyEvent,\n  clearEvents,\n} from '../redux/interpreter';\n\nimport {\n  setDocumentContent,\n  updatePreference\n} from '../redux/editor';\n\nconst mapStateToProps = (state, props) => ({\n  ...state.interfaceConfig,\n  editorDefaultValue: state.editor.currentValue,\n  editorPreferences: state.editor.preferences,\n  ...state.interpreter,\n  ...props\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleEditor: (state) => {\n    dispatch(toggleEditor({state}));\n  },\n  toggleInterpreter: (state) => {\n    dispatch(toggleInterpreter({state}));\n  },\n  changeInterpreterSplitDirection: (direction) => {\n    dispatch(changeInterpreterSplitDirection({direction}));\n  },\n  setBlock: (blockName) => {\n    dispatch(setBlock(blockName));\n  },\n  addDialogueLine: (line) => {\n    dispatch(addDialogueLine(line));\n  },\n  clearTimeline: () => {\n    dispatch(clearTimeline());\n  },\n  showExtraMetadata: () => {\n    dispatch(showExtraMetadata());\n  },\n  hideExtraMetadata: () => {\n    dispatch(hideExtraMetadata());\n  },\n  showDebugPane: () => {\n    dispatch(showDebugPane());\n  },\n  hideDebugPane: () => {\n    dispatch(hideDebugPane());\n  },\n  enableSingleBubbleDialogue: () => {\n    dispatch(enableSingleBubbleDialogue());\n  },\n  disableSingleBubbleDialogue: () => {\n    dispatch(disableSingleBubbleDialogue());\n  },\n  chooseOption: (optionIndex) => {\n    dispatch(chooseOption(optionIndex));\n  },\n  setDocumentContent: (content) => {\n    dispatch(setDocumentContent(content));\n  },\n  notifyEvent: (event) => {\n    dispatch(notifyEvent(event));\n  },\n  clearEvents: () => {\n    dispatch(clearEvents());\n  },\n  updateEditorPreference: (name, value) => {\n    dispatch(updatePreference({ name, value }));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainPanels);\n\n","export const APP_LOCAL_STORAGE_KEY = 'clyde_editor_data';\n\nexport const saveState =(state) => {\n  try {\n    localStorage.setItem(APP_LOCAL_STORAGE_KEY, JSON.stringify(state));\n  } catch (_e) {\n  }\n};\n\nexport const loadState = () => {\n  try {\n    const persistedSate = localStorage.getItem(APP_LOCAL_STORAGE_KEY);\n    if (persistedSate === null) {\n      return undefined;\n    }\n    return JSON.parse(persistedSate);\n  } catch (_e) {\n    return undefined;\n  }\n};\n\nexport const clearState = () => {\n  try {\n    localStorage.removeItem(APP_LOCAL_STORAGE_KEY);\n  } catch (_e) {\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { Provider } from 'react-redux';\n\nimport throttle from 'lodash/throttle';\n\nimport reducer from './redux/reducers';\nimport MainPanelsContainer from './screens/MainPanelsContainer';\n\nimport { loadState, saveState } from './storage/local-storage';\n\nconst load = () => {\n  const data = loadState() || { editor: {} };\n\n\n  if (!data.editor?.currentValue) {\n    data.editor.currentValue = `--\n--\n-- This is a sample dialogue.\n--\n\nNarrator: Hello there!\nPlayer: Hi!\nNarrator: What do you want to talk about?\n  + [Life]\n    -> about life <-\n  + [The universe]\n    -> about the universe <-\n  * [Everything else... #some_tag]\n    -> about everything else <-\n  + [Earth]\n    -> about earth <-\n  + [Nothing]\n    -> goodbye <-\n\n\n== about life\nPlayer: I want to talk about life!\nNarrator: Well! That's complicated...\n<-\n\n\n== about the universe\nPlayer: I want to talk about the universe!\n( shuffle\n  - Narrator: That's too complex!\n  - Narrator: Maybe another time.\n  - Narrator: It's big...\n              I think that's all.\n)\n<-\n\n\n== about everything else\nPlayer: What about everything else?\nNarrator: I don't have time for this... #bored\n<-\n\n== about earth\nPlayer: What do you know about earth?\n( sequence\n - Narrator: It's mostly harmless.\n - Narrator: This again?\n             I've already told you, mostly harmless.\n -\n   Narrator: Why do you want to know so much about it?\n   Player: I don't know...\n   Narrator: So.. don't ask!\n\n - Narrator: I'm not talking about this anymore.\n)\n<-\n\n== goodbye\n{ not alreadyIntroduced }\n  Narrator: It was nice to meet you!\n  Player: I can say the same. See you around!\n  { set alreadyIntroduced = true }\nPlayer: Bye!\nNarrator: Good bye!\n`;\n  }\n\n  return {\n    editor: data.editor,\n    interpreter: {\n      document: undefined,\n      events: [],\n      timeline: [],\n      ...data.interpreter\n    }\n  };\n};\n\nconst store = configureStore({\n  reducer,\n  devTools: process.env.NODE_ENV !== 'production',\n  preloadedState: load(),\n});\n\nstore.subscribe(throttle(() => {\n  const state = store.getState();\n  const {\n    shouldShowExtraMetadata,\n    shouldShowDebugPane,\n    debugPaneDirection,\n    singleBubblePresentation,\n  } = state.interpreter;\n\n  saveState({\n    editor: {\n      preferences: state.editor.preferences,\n      currentValue: state.editor.currentValue\n    },\n    interpreter: {\n      shouldShowExtraMetadata,\n      shouldShowDebugPane,\n      debugPaneDirection,\n      singleBubblePresentation,\n    },\n  });\n}, 1000));\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <MainPanelsContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","import App from './App';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  max-height: 100vh;\n  max-width: 1200px;\n  display: flex;\n  flex-direction: column;\n  padding: 10px 5px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h1`\n  font-size: 2em;\n  font-weight: 500;\n`;\n\nconst AboutBlock = styled.div`\n  font-family: 'Lato', sans-serif;\n  margin: 10px 40px;\n  p {\n    margin-bottom: 10px;\n  }\n\n  a {\n    margin: 5px 10px;\n  }\n`;\n\nconst AboutContent = styled.div`\n  margin-top: 30px;\n`;\n\nexport default function WebsiteApp() {\n  return (\n    <Wrapper>\n      <AboutBlock>\n        <Title>Clyde Dialogue Language</Title>\n        <AboutContent>\n          <p>\n            Clyde is a language for writing dialogues.\n            <a href=\"https://github.com/viniciusgerevini/clyde\">Github</a>\n            <a href=\"https://github.com/viniciusgerevini/clyde/blob/master/LANGUAGE.md\">Language Docs</a>\n            <a href=\"https://github.com/viniciusgerevini/clyde/tree/master/cli\">CLI</a>\n            <a href=\"https://github.com/viniciusgerevini/godot-clyde-dialogue\">Godot Plugin</a>\n          </p>\n        </AboutContent>\n\n      </AboutBlock>\n        <App/>\n    </Wrapper>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.css';\nimport './index.css';\n// import App from './App';\nimport App from './WebsiteApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}